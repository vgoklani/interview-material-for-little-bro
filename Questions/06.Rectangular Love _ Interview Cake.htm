<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!-- saved from url=(0062)https://www.interviewcake.com/question/python/rectangular-love -->
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><script async="" defer="true" src="./06.Rectangular Love _ Interview Cake_files/jquery.js"></script><script async="" defer="true" src="./06.Rectangular Love _ Interview Cake_files/visits"></script><script type="text/javascript" src="./06.Rectangular Love _ Interview Cake_files/9e57878e2e"></script><script src="./06.Rectangular Love _ Interview Cake_files/nr-998.min.js"></script><script type="text/javascript" src="./06.Rectangular Love _ Interview Cake_files/track"></script><script type="text/javascript" src="./06.Rectangular Love _ Interview Cake_files/identify"></script><style type="text/css">@charset "UTF-8";[ng\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\:form{display:block;}</style>
    <script type="text/javascript" async="" src="./06.Rectangular Love _ Interview Cake_files/prum.min.js"></script><script type="text/javascript" async="" src="./06.Rectangular Love _ Interview Cake_files/f78ae8e419ed65a0b5d9f07bb19c8d3a987aef19.js"></script><script type="text/javascript" async="" src="./06.Rectangular Love _ Interview Cake_files/4774384.js"></script><script type="text/javascript" async="" src="./06.Rectangular Love _ Interview Cake_files/mixpanel-2-latest.min.js"></script><script type="text/javascript" async="" src="./06.Rectangular Love _ Interview Cake_files/0751fb0485a5b0be210d27b9cefd9842c5c65cc6.2.js"></script><script type="text/javascript" async="" src="./06.Rectangular Love _ Interview Cake_files/analytics.js"></script><script type="text/javascript" async="" src="./06.Rectangular Love _ Interview Cake_files/fbevents.js"></script><script type="text/javascript" async="" src="./06.Rectangular Love _ Interview Cake_files/conversion_async.js"></script><script id="facebook-jssdk" src="./06.Rectangular Love _ Interview Cake_files/all.js"></script><script type="text/javascript" async="" src="./06.Rectangular Love _ Interview Cake_files/analytics.min.js"></script><script type="text/javascript">
        
        window.IC = window.IC || {};
        window.IC.currentUser = JSON.parse('{"id":2385549,"username":"gokumd","email":"gokumd@gmail.com","date_joined":"2016-01-02T20:29:37.549407+00:00","first_name":"Goku","last_name":"Mohandas","full_name":"Goku Mohandas","short_name":"Goku","is_anonymous":false,"is_on_last_question":false,"percent_done":66,"num_questions_done":29,"num_questions_remaining":15,"recruiting_is_interested_in_intros":true,"is_full_access":true,"first_payment_date":"2016-01-02T22:17:39.210063Z","last_payment_date":"2016-01-02T22:17:37Z","num_free_questions_left":0,"terms_has_agreed_to_latest":false,"preferred_content_language":"python","preferred_notepad_language":"python","is_staff":false,"auth_providers_human_readable_list":"Google","num_auth_providers":1,"auth_email":"gokumd@gmail.com"}');
        
    </script>


    
    <script src="./06.Rectangular Love _ Interview Cake_files/1358232165.js"></script>
    

    
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        
        <meta http-equiv="X-UA-Compatible" content="IE=Edge"><script type="text/javascript">window.NREUM||(NREUM={}),__nr_require=function(e,t,n){function r(n){if(!t[n]){var o=t[n]={exports:{}};e[n][0].call(o.exports,function(t){var o=e[n][1][t];return r(o||t)},o,o.exports)}return t[n].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<n.length;o++)r(n[o]);return r}({1:[function(e,t,n){function r(){}function o(e,t,n){return function(){return i(e,[(new Date).getTime()].concat(u(arguments)),t?null:this,n),t?void 0:this}}var i=e("handle"),a=e(2),u=e(3),c=e("ee").get("tracer"),f=NREUM;"undefined"==typeof window.newrelic&&(newrelic=f);var s=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit"],l="api-",p=l+"ixn-";a(s,function(e,t){f[t]=o(l+t,!0,"api")}),f.addPageAction=o(l+"addPageAction",!0),f.setCurrentRouteName=o(l+"routeName",!0),t.exports=newrelic,f.interaction=function(){return(new r).get()};var d=r.prototype={createTracer:function(e,t){var n={},r=this,o="function"==typeof t;return i(p+"tracer",[Date.now(),e,n],r),function(){if(c.emit((o?"":"no-")+"fn-start",[Date.now(),r,o],n),o)try{return t.apply(this,arguments)}finally{c.emit("fn-end",[Date.now()],n)}}}};a("setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(e,t){d[t]=o(p+t)}),newrelic.noticeError=function(e){"string"==typeof e&&(e=new Error(e)),i("err",[e,(new Date).getTime()])}},{}],2:[function(e,t,n){function r(e,t){var n=[],r="",i=0;for(r in e)o.call(e,r)&&(n[i]=t(r,e[r]),i+=1);return n}var o=Object.prototype.hasOwnProperty;t.exports=r},{}],3:[function(e,t,n){function r(e,t,n){t||(t=0),"undefined"==typeof n&&(n=e?e.length:0);for(var r=-1,o=n-t||0,i=Array(o<0?0:o);++r<o;)i[r]=e[t+r];return i}t.exports=r},{}],ee:[function(e,t,n){function r(){}function o(e){function t(e){return e&&e instanceof r?e:e?c(e,u,i):i()}function n(n,r,o){if(!p.aborted){e&&e(n,r,o);for(var i=t(o),a=v(n),u=a.length,c=0;c<u;c++)a[c].apply(i,r);var f=s[w[n]];return f&&f.push([y,n,r,i]),i}}function d(e,t){b[e]=v(e).concat(t)}function v(e){return b[e]||[]}function g(e){return l[e]=l[e]||o(n)}function m(e,t){f(e,function(e,n){t=t||"feature",w[n]=t,t in s||(s[t]=[])})}var b={},w={},y={on:d,emit:n,get:g,listeners:v,context:t,buffer:m,abort:a,aborted:!1};return y}function i(){return new r}function a(){(s.api||s.feature)&&(p.aborted=!0,s=p.backlog={})}var u="nr@context",c=e("gos"),f=e(2),s={},l={},p=t.exports=o();p.backlog=s},{}],gos:[function(e,t,n){function r(e,t,n){if(o.call(e,t))return e[t];var r=n();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(e,t,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return e[t]=r,r}var o=Object.prototype.hasOwnProperty;t.exports=r},{}],handle:[function(e,t,n){function r(e,t,n,r){o.buffer([e],r),o.emit(e,t,n)}var o=e("ee").get("handle");t.exports=r,r.ee=o},{}],id:[function(e,t,n){function r(e){var t=typeof e;return!e||"object"!==t&&"function"!==t?-1:e===window?0:a(e,i,function(){return o++})}var o=1,i="nr@id",a=e("gos");t.exports=r},{}],loader:[function(e,t,n){function r(){if(!h++){var e=y.info=NREUM.info,t=l.getElementsByTagName("script")[0];if(setTimeout(f.abort,3e4),!(e&&e.licenseKey&&e.applicationID&&t))return f.abort();c(b,function(t,n){e[t]||(e[t]=n)}),u("mark",["onload",a()],null,"api");var n=l.createElement("script");n.src="https://"+e.agent,t.parentNode.insertBefore(n,t)}}function o(){"complete"===l.readyState&&i()}function i(){u("mark",["domContent",a()],null,"api")}function a(){return(new Date).getTime()}var u=e("handle"),c=e(2),f=e("ee"),s=window,l=s.document,p="addEventListener",d="attachEvent",v=s.XMLHttpRequest,g=v&&v.prototype;NREUM.o={ST:setTimeout,CT:clearTimeout,XHR:v,REQ:s.Request,EV:s.Event,PR:s.Promise,MO:s.MutationObserver},e(1);var m=""+location,b={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-998.min.js"},w=v&&g&&g[p]&&!/CriOS/.test(navigator.userAgent),y=t.exports={offset:a(),origin:m,features:{},xhrWrappable:w};l[p]?(l[p]("DOMContentLoaded",i,!1),s[p]("load",r,!1)):(l[d]("onreadystatechange",o),s[d]("onload",r)),u("mark",["firstbyte",a()],null,"api");var h=0},{}]},{},["loader"]);</script><script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"transactionName":"ZVwAbEQCDUQCAUwKDFwWJE1YABdeDAwXDhpBUBZdGA4CXg0DSBNNRFAHT0VZMkIGEUwKDFxvC11BTQRSFw==","errorBeacon":"bam.nr-data.net","applicationID":"7328113","queueTime":0,"beacon":"bam.nr-data.net","licenseKey":"9e57878e2e","agent":"","applicationTime":309}</script>
        <link rel="shortcut icon" type="image/x-icon" href="https://www.interviewcake.com/images/favicon.ico?bust=135">
        <link rel="canonical" href="https://www.interviewcake.com/question/java/rectangular-love">
        <meta name="description" content="Find the area of overlap between two rectangles. In the name of love.">

        

        <meta property="og:title" content="Rectangular Love | Interview Cake">
        <meta property="og:description" content="Find the area of overlap between two rectangles. In the name of love.">
        <meta property="og:image" content="https://www.interviewcake.com/static/images/cake_white_on_blue_600_600_unrounded.png">
        <meta property="og:type" content="website">
        <meta property="og:locale" content="en_US">
        <meta property="og:site_name" content="Interview Cake: Programming Interview Questions and Tips">
        <meta property="fb:app_id" content="149278655279066">
        <meta property="fb:admins" content="514407734">
        <meta property="og:url" content="https://www.interviewcake.com/question/java/rectangular-love">

        <meta name="twitter:card" content="summary">
        <meta name="twitter:site" content="@interviewcake">
        <meta name="twitter:title" content="Rectangular Love | Interview Cake">
        <meta name="twitter:description" content="Find the area of overlap between two rectangles. In the name of love.">
        <meta name="twitter:creator" content="@interviewcake">
        <meta name="twitter:image:src" content="https://www.interviewcake.com/static/images/cake_white_on_blue_600_600_unrounded.png">
        <meta name="twitter:domain" content="interviewcake.com">

        <title>Rectangular Love | Interview Cake</title>
    


    

    
    <script type="text/javascript">
        window.analytics||(window.analytics=[]),window.analytics.methods=["identify","track","trackLink","trackForm","trackClick","trackSubmit","page","pageview","ab","alias","ready","group","on","once","off"],window.analytics.factory=function(a){return function(){var t=Array.prototype.slice.call(arguments);return t.unshift(a),window.analytics.push(t),window.analytics}};for(var i=0;i<window.analytics.methods.length;i++){var method=window.analytics.methods[i];window.analytics[method]=window.analytics.factory(method)}window.analytics.load=function(a){var t=document.createElement("script");t.type="text/javascript",t.async=!0,t.src=("https:"===document.location.protocol?"https://":"http://")+"d2dq2ahtl5zl1z.cloudfront.net/analytics.js/v1/"+a+"/analytics.min.js";var n=document.getElementsByTagName("script")[0];n.parentNode.insertBefore(t,n)},window.analytics.SNIPPET_VERSION="2.0.6",
        window.analytics.load("rowk0wc1g6"),
        window.analytics.page();
    </script>
    
    


    


    

        <link href="./06.Rectangular Love _ Interview Cake_files/bootstrap.min.css" rel="stylesheet">
        <link href="./06.Rectangular Love _ Interview Cake_files/bootstrap-glyphicons.css" rel="stylesheet">
        <link href="./06.Rectangular Love _ Interview Cake_files/font-awesome.min.css" rel="stylesheet">
        <link href="./06.Rectangular Love _ Interview Cake_files/katex.min.css" rel="stylesheet">
    
    
        
            <link rel="stylesheet" href="./06.Rectangular Love _ Interview Cake_files/4d3ba14d6001.css" type="text/css" media="all">
        
    




<!--
<link href='http://fonts.googleapis.com/css?family=Raleway:500,700,100' rel='stylesheet' type='text/css'>
-->
<!--
<link href='http://fonts.googleapis.com/css?family=Arimo:400,700,400italic,700italic' rel='stylesheet' type='text/css'>
-->
<link href="./06.Rectangular Love _ Interview Cake_files/css" rel="stylesheet" type="text/css">

<link rel="apple-touch-icon" href="https://www.interviewcake.com/images/cake_white_on_blue_128_128_unrounded.png">
<!--
thought maybe for headings. but nope.
<link href='http://fonts.googleapis.com/css?family=Open+Sans+Condensed:300,700,300italic' rel='stylesheet' type='text/css'>
<link href='http://fonts.googleapis.com/css?family=Droid+Sans:400,700' rel='stylesheet' type='text/css'>
-->




<meta name="50fc73d52056532c18787976ceb78fddb87b78b2" content="ceb4cec06fc4a780c7b31b85c07cf75d1ca58d9d">





<script type="text/javascript">
var _vwo_code=(function(){
var account_id=50155,
settings_tolerance=2000,
library_tolerance=2500,
use_existing_jquery=false,
// DO NOT EDIT BELOW THIS LINE
f=false,d=document;return{use_existing_jquery:function(){return use_existing_jquery;},library_tolerance:function(){return library_tolerance;},finish:function(){if(!f){f=true;var a=d.getElementById('_vis_opt_path_hides');if(a)a.parentNode.removeChild(a);}},finished:function(){return f;},load:function(a){var b=d.createElement('script');b.src=a;b.type='text/javascript';b.innerText;b.onerror=function(){_vwo_code.finish();};d.getElementsByTagName('head')[0].appendChild(b);},init:function(){settings_timer=setTimeout('_vwo_code.finish()',settings_tolerance);var a=d.createElement('style'),b='body{opacity:0 !important;filter:alpha(opacity=0) !important;background:none !important;}',h=d.getElementsByTagName('head')[0];a.setAttribute('id','_vis_opt_path_hides');a.setAttribute('type','text/css');if(a.styleSheet)a.styleSheet.cssText=b;else a.appendChild(d.createTextNode(b));h.appendChild(a);this.load('//dev.visualwebsiteoptimizer.com/j.php?a='+account_id+'&u='+encodeURIComponent(d.URL)+'&r='+Math.random());return settings_timer;}};}());_vwo_settings_timer=_vwo_code.init();
</script><script src="./06.Rectangular Love _ Interview Cake_files/j.php" type="text/javascript"></script>

<script src="./06.Rectangular Love _ Interview Cake_files/application2.js" async="" defer="" data-cfasync="false"></script><style type="text/css">.fb_hidden{position:absolute;top:-10000px;z-index:10001}.fb_reposition{overflow:hidden;position:relative}.fb_invisible{display:none}.fb_reset{background:none;border:0;border-spacing:0;color:#000;cursor:auto;direction:ltr;font-family:"lucida grande", tahoma, verdana, arial, sans-serif;font-size:11px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:1;margin:0;overflow:visible;padding:0;text-align:left;text-decoration:none;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;word-spacing:normal}.fb_reset>div{overflow:hidden}.fb_link img{border:none}@keyframes fb_transform{from{opacity:0;transform:scale(.95)}to{opacity:1;transform:scale(1)}}.fb_animate{animation:fb_transform .3s forwards}
.fb_dialog{background:rgba(82, 82, 82, .7);position:absolute;top:-10000px;z-index:10001}.fb_reset .fb_dialog_legacy{overflow:visible}.fb_dialog_advanced{padding:10px;-moz-border-radius:8px;-webkit-border-radius:8px;border-radius:8px}.fb_dialog_content{background:#fff;color:#333}.fb_dialog_close_icon{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 0 transparent;_background-image:url(https://static.xx.fbcdn.net/rsrc.php/v3/yL/r/s816eWC-2sl.gif);cursor:pointer;display:block;height:15px;position:absolute;right:18px;top:17px;width:15px}.fb_dialog_mobile .fb_dialog_close_icon{top:5px;left:5px;right:auto}.fb_dialog_padding{background-color:transparent;position:absolute;width:1px;z-index:-1}.fb_dialog_close_icon:hover{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -15px transparent;_background-image:url(https://static.xx.fbcdn.net/rsrc.php/v3/yL/r/s816eWC-2sl.gif)}.fb_dialog_close_icon:active{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -30px transparent;_background-image:url(https://static.xx.fbcdn.net/rsrc.php/v3/yL/r/s816eWC-2sl.gif)}.fb_dialog_loader{background-color:#f6f7f9;border:1px solid #606060;font-size:24px;padding:20px}.fb_dialog_top_left,.fb_dialog_top_right,.fb_dialog_bottom_left,.fb_dialog_bottom_right{height:10px;width:10px;overflow:hidden;position:absolute}.fb_dialog_top_left{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/ye/r/8YeTNIlTZjm.png) no-repeat 0 0;left:-10px;top:-10px}.fb_dialog_top_right{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/ye/r/8YeTNIlTZjm.png) no-repeat 0 -10px;right:-10px;top:-10px}.fb_dialog_bottom_left{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/ye/r/8YeTNIlTZjm.png) no-repeat 0 -20px;bottom:-10px;left:-10px}.fb_dialog_bottom_right{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/ye/r/8YeTNIlTZjm.png) no-repeat 0 -30px;right:-10px;bottom:-10px}.fb_dialog_vert_left,.fb_dialog_vert_right,.fb_dialog_horiz_top,.fb_dialog_horiz_bottom{position:absolute;background:#525252;filter:alpha(opacity=70);opacity:.7}.fb_dialog_vert_left,.fb_dialog_vert_right{width:10px;height:100%}.fb_dialog_vert_left{margin-left:-10px}.fb_dialog_vert_right{right:0;margin-right:-10px}.fb_dialog_horiz_top,.fb_dialog_horiz_bottom{width:100%;height:10px}.fb_dialog_horiz_top{margin-top:-10px}.fb_dialog_horiz_bottom{bottom:0;margin-bottom:-10px}.fb_dialog_iframe{line-height:0}.fb_dialog_content .dialog_title{background:#6d84b4;border:1px solid #365899;color:#fff;font-size:14px;font-weight:bold;margin:0}.fb_dialog_content .dialog_title>span{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/yd/r/Cou7n-nqK52.gif) no-repeat 5px 50%;float:left;padding:5px 0 7px 26px}body.fb_hidden{-webkit-transform:none;height:100%;margin:0;overflow:visible;position:absolute;top:-10000px;left:0;width:100%}.fb_dialog.fb_dialog_mobile.loading{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/ya/r/3rhSv5V8j3o.gif) white no-repeat 50% 50%;min-height:100%;min-width:100%;overflow:hidden;position:absolute;top:0;z-index:10001}.fb_dialog.fb_dialog_mobile.loading.centered{width:auto;height:auto;min-height:initial;min-width:initial;background:none}.fb_dialog.fb_dialog_mobile.loading.centered #fb_dialog_loader_spinner{width:100%}.fb_dialog.fb_dialog_mobile.loading.centered .fb_dialog_content{background:none}.loading.centered #fb_dialog_loader_close{color:#fff;display:block;padding-top:20px;clear:both;font-size:18px}#fb-root #fb_dialog_ipad_overlay{background:rgba(0, 0, 0, .45);position:absolute;bottom:0;left:0;right:0;top:0;width:100%;min-height:100%;z-index:10000}#fb-root #fb_dialog_ipad_overlay.hidden{display:none}.fb_dialog.fb_dialog_mobile.loading iframe{visibility:hidden}.fb_dialog_content .dialog_header{-webkit-box-shadow:white 0 1px 1px -1px inset;background:-webkit-gradient(linear, 0% 0%, 0% 100%, from(#738ABA), to(#2C4987));border-bottom:1px solid;border-color:#1d4088;color:#fff;font:14px Helvetica, sans-serif;font-weight:bold;text-overflow:ellipsis;text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0;vertical-align:middle;white-space:nowrap}.fb_dialog_content .dialog_header table{-webkit-font-smoothing:subpixel-antialiased;height:43px;width:100%}.fb_dialog_content .dialog_header td.header_left{font-size:12px;padding-left:5px;vertical-align:middle;width:60px}.fb_dialog_content .dialog_header td.header_right{font-size:12px;padding-right:5px;vertical-align:middle;width:60px}.fb_dialog_content .touchable_button{background:-webkit-gradient(linear, 0% 0%, 0% 100%, from(#4966A6), color-stop(.5, #355492), to(#2A4887));border:1px solid #29487d;-webkit-background-clip:padding-box;-webkit-border-radius:3px;-webkit-box-shadow:rgba(0, 0, 0, .117188) 0 1px 1px inset, rgba(255, 255, 255, .167969) 0 1px 0;display:inline-block;margin-top:3px;max-width:85px;line-height:18px;padding:4px 12px;position:relative}.fb_dialog_content .dialog_header .touchable_button input{border:none;background:none;color:#fff;font:12px Helvetica, sans-serif;font-weight:bold;margin:2px -12px;padding:2px 6px 3px 6px;text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0}.fb_dialog_content .dialog_header .header_center{color:#fff;font-size:16px;font-weight:bold;line-height:18px;text-align:center;vertical-align:middle}.fb_dialog_content .dialog_content{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/y9/r/jKEcVPZFk-2.gif) no-repeat 50% 50%;border:1px solid #555;border-bottom:0;border-top:0;height:150px}.fb_dialog_content .dialog_footer{background:#f6f7f9;border:1px solid #555;border-top-color:#ccc;height:40px}#fb_dialog_loader_close{float:left}.fb_dialog.fb_dialog_mobile .fb_dialog_close_button{text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0}.fb_dialog.fb_dialog_mobile .fb_dialog_close_icon{visibility:hidden}#fb_dialog_loader_spinner{animation:rotateSpinner 1.2s linear infinite;background-color:transparent;background-image:url(https://static.xx.fbcdn.net/rsrc.php/v3/yD/r/t-wz8gw1xG1.png);background-repeat:no-repeat;background-position:50% 50%;height:24px;width:24px}@keyframes rotateSpinner{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}
.fb_iframe_widget{display:inline-block;position:relative}.fb_iframe_widget span{display:inline-block;position:relative;text-align:justify}.fb_iframe_widget iframe{position:absolute}.fb_iframe_widget_fluid_desktop,.fb_iframe_widget_fluid_desktop span,.fb_iframe_widget_fluid_desktop iframe{max-width:100%}.fb_iframe_widget_fluid_desktop iframe{min-width:220px;position:relative}.fb_iframe_widget_lift{z-index:1}.fb_hide_iframes iframe{position:relative;left:-10000px}.fb_iframe_widget_loader{position:relative;display:inline-block}.fb_iframe_widget_fluid{display:inline}.fb_iframe_widget_fluid span{width:100%}.fb_iframe_widget_loader iframe{min-height:32px;z-index:2;zoom:1}.fb_iframe_widget_loader .FB_Loader{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/y9/r/jKEcVPZFk-2.gif) no-repeat;height:32px;width:32px;margin-left:-16px;position:absolute;left:50%;z-index:4}</style><style type="text/css">.olark-key,#hbl_code,#olark-data{display: none !important;}</style><link id="habla_style_div" type="text/css" rel="stylesheet" href="./06.Rectangular Love _ Interview Cake_files/df26100e954276593311a44753620fda.css"><style type="text/css">@media print {#habla_beta_container_do_not_rely_on_div_classes_or_names {display: none !important}}</style><link rel="stylesheet" href="./06.Rectangular Love _ Interview Cake_files/theme.css" type="text/css"></head>
<body ng-app="prepApp" ng-init="questionIsEmbedded = false" class="user-is-full-access   ng-scope"><div id="olark" style="display: none;"><olark><iframe frameborder="0" id="olark-loader" src="./06.Rectangular Love _ Interview Cake_files/saved_resource.html"></iframe></olark></div>

<div class="print-header navbar-print-header navbar navbar-inverse">
    <div class="navbar-header">
        <span class="navbar-brand">
            <img src="./06.Rectangular Love _ Interview Cake_files/cake_white_20_21.png" class="logo">
            Interview Cake
        </span>
    </div>
</div>




<div class="navbar navbar-normal navbar-inverse ng-scope" role="navigation" ng-controller="HeaderCtrl" language="python">
    <div class="navbar-header">
        <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
        </button>
        <a class="navbar-brand" href="https://www.interviewcake.com/">
            Interview Cake
        </a>
    </div>

  <div class="collapse navbar-collapse">
        <ul class="nav navbar-nav navbar-left">
            <li>
                <a href="https://www.interviewcake.com/coding-interview-tips">Tips and Tricks</a>
            </li>

            <li class="dropdown">
                <a href="https://www.interviewcake.com/question/python/rectangular-love" class="dropdown-toggle" data-toggle="dropdown" rel="nofollow">
                    Glossary <span class="caret"></span>
                </a>
                <ul class="dropdown-menu" role="menu">
                    <li>
                        <a href="https://www.interviewcake.com/big-o-notation-time-and-space-complexity">Big O Notation: <span complexity="n" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mclose">)</span></span></span></span></span></span></span>, <span complexity="n^2" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><msup><mi>n</mi><mn>2</mn></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.814108em;"></span><span class="strut bottom" style="height: 1.06411em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathit">n</span><span class="vlist"><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span><span class="mclose">)</span></span></span></span></span></span></span>, etc</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/article/logarithms">Logarithms</a>
                    </li>

                    <li role="separator" class="divider"></li>

                    <li>
                        <a href="https://www.interviewcake.com/concept/binary-search">Binary Search</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/counting-sort">Counting Sort</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/overlapping-subproblems">Overlapping Subproblems</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/memoization">Memoization</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/bottom-up">Bottom-Up Algorithms</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/lazy">Lazy Evaluation</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/garbage-collection">Garbage Collection</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/integer-overflow">Integer Overflow</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/js-closure">Closure</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/slice">Array Slicing</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/hashing">Hashing</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/mutable">Mutable vs Immutable</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/in-place">In-Place Operation</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/triangular-series">Triangular Series</a>
                    </li>

                    <li role="separator" class="divider"></li>

                    <li>
                        <a href="https://www.interviewcake.com/concept/array">Array</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/dynamic-array-amortized-analysis">Dynamic Array</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/hash-map">Hash Table</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/linked-list">Linked List</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/queue">Queue</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/stack">Stack</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/binary-tree">Binary Tree</a>
                    </li>

                    <li role="separator" class="divider"></li>

                    <li>
                        <a href="https://www.interviewcake.com/concept/binary-numbers">Binary Numbers</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/and">Bitwise AND</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/or">Bitwise OR</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/not">Bitwise NOT</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/xor">Bitwise XOR</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/bit-shift">Bit Shifting</a>
                    </li>
                </ul>
            </li>

            
            
            
            <li>
                
                <a href="https://www.interviewcake.com/all-questions/python">All Questions</a>
                
            </li>
            
            <li>
                
                
            </li>
        </ul>



        <ul class="nav navbar-nav navbar-right" ng-show="currentUserSet">

            
            <li>
                

                <a class="upgrade ng-hide" ng-hide="currentUser.is_full_access" href="https://www.interviewcake.com/upgrade">
                    <!--
                    <i class="fa fa-unlock-alt fa-lg" style="margin-right: 5px;" ></i>
                    -->

                    Get the full course

                    <span class="glyphicon glyphicon-chevron-right full-access-badge"></span>

</a>
            </li>
            



            
            <li class="dropdown language-dropdown ng-scope" ng-controller="NavbarTranslationCtrl" ng-show="contentLanguage&amp;&amp;currentUser.is_full_access ">
                <a rel="nofollow" href="https://www.interviewcake.com/question/python/rectangular-love" class="dropdown-toggle ng-binding" data-toggle="dropdown">
                    Python <span class="caret"></span>
                </a>
                <ul class="dropdown-menu" role="menu">
                
                    <!-- ngRepeat: language in contentLanguages --><li ng-repeat="language in contentLanguages" class="ng-scope">
                        <a href="https://www.interviewcake.com/question/python/rectangular-love" ng-click="updateLanguage(language, true)" class="ng-binding">Python</a>
                    </li><!-- end ngRepeat: language in contentLanguages --><li ng-repeat="language in contentLanguages" class="ng-scope">
                        <a href="https://www.interviewcake.com/question/python/rectangular-love" ng-click="updateLanguage(language, true)" class="ng-binding">Ruby</a>
                    </li><!-- end ngRepeat: language in contentLanguages --><li ng-repeat="language in contentLanguages" class="ng-scope">
                        <a href="https://www.interviewcake.com/question/python/rectangular-love" ng-click="updateLanguage(language, true)" class="ng-binding">Java</a>
                    </li><!-- end ngRepeat: language in contentLanguages --><li ng-repeat="language in contentLanguages" class="ng-scope">
                        <a href="https://www.interviewcake.com/question/python/rectangular-love" ng-click="updateLanguage(language, true)" class="ng-binding">JavaScript</a>
                    </li><!-- end ngRepeat: language in contentLanguages --><li ng-repeat="language in contentLanguages" class="ng-scope">
                        <a href="https://www.interviewcake.com/question/python/rectangular-love" ng-click="updateLanguage(language, true)" class="ng-binding">C (beta)</a>
                    </li><!-- end ngRepeat: language in contentLanguages --><li ng-repeat="language in contentLanguages" class="ng-scope">
                        <a href="https://www.interviewcake.com/question/python/rectangular-love" ng-click="updateLanguage(language, true)" class="ng-binding">C++ (beta)</a>
                    </li><!-- end ngRepeat: language in contentLanguages -->
                
                </ul>
            </li>
            

            <li>
                <p class="navbar-text">
                    
                    'sup <a rel="nofollow" trackling="" the-event="Settings Link Click" href="https://www.interviewcake.com/account">Goku</a>.
                    
                    <span ng-show="currentUser.is_full_access" class="glyphicon glyphicon-star full-access-badge"></span>
                </p>
            </li>
            <li ng-hide="currentUser.is_anonymous">
                <a rel="nofollow" tracklink="" the-event="Logout Link Click" the-properties="{&quot;which&quot; : &quot;header top right&quot;}" href="https://www.interviewcake.com/auth/logout/?next=/" class="ng-isolate-scope">Log out</a>
            </li>

            <li ng-show="currentUser.is_anonymous" class="ng-hide">
                <a href="https://www.interviewcake.com/question/python/rectangular-love" rel="nofollow" ng-click="loginClick(&#39;header top right&#39;)">Log in to save progress</a>
            </li>
        </ul>
    </div>

</div>


<div class="below-nav">

    <div class="ic-alerts">
        
        
    </div>

    

    
    

<div class="quiz ng-scope" ng-controller="PrepSeshApp">
    
        
            

<div ng-controller="NumberlineCtrl" class="numberline-wrapper  user-is-full-access ng-scope">

    <section ng-controller="NumberlineScrollingCtrl" class="numberline-scrolling ng-scope" ngc-scroll="setEdgeFadeIntensity()">
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/stock-price" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Apple Stocks">
    
    

            <span class="number">
                1
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/product-of-other-numbers" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Product of All Other Numbers">
    
    

            <span class="number">
                2
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/highest-product-of-3" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Highest Product of 3">
    
    

            <span class="number">
                3
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/merging-ranges" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Merging Meeting Times">
    
    

            <span class="number">
                4
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                unfinished
                           ">

    
    
        <a href="https://www.interviewcake.com/question/coin" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Making Change">
    
    

            <span class="number">
                5
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper current                                                              done                             ng-scope" ng-controller="NumberlineCurrentQuestionCtrl">

    
    
        <a href="https://www.interviewcake.com/question/rectangular-love" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Rectangular Love">
    
    

            <span class="number">
                6
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/temperature-tracker" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Temperature Tracker">
    
    

            <span class="number">
                7
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                unfinished
                           ">

    
    
        <a href="https://www.interviewcake.com/question/balanced-binary-tree" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Balanced Binary Tree">
    
    

            <span class="number">
                8
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/bst-checker" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Binary Search Tree Checker">
    
    

            <span class="number">
                9
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/second-largest-item-in-bst" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="2nd Largest Item in a Binary Search Tree">
    
    

            <span class="number">
                10
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                unfinished
                           ">

    
    
        <a href="https://www.interviewcake.com/question/compress-url-list" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="MillionGazillion">
    
    

            <span class="number">
                11
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                unfinished
                           ">

    
    
        <a href="https://www.interviewcake.com/question/find-in-ordered-set" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Find in Ordered Set">
    
    

            <span class="number">
                12
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/find-rotation-point" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Find Rotation Point">
    
    

            <span class="number">
                13
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/inflight-entertainment" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Inflight Entertainment">
    
    

            <span class="number">
                14
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/nth-fibonacci" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Compute nth Fibonacci Number">
    
    

            <span class="number">
                15
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                unfinished
                           ">

    
    
        <a href="https://www.interviewcake.com/question/cake-thief" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="The Cake Thief">
    
    

            <span class="number">
                16
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                unfinished
                           ">

    
    
        <a href="https://www.interviewcake.com/question/js-scope" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="JavaScript Scope">
    
    

            <span class="number">
                17
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                unfinished
                           ">

    
    
        <a href="https://www.interviewcake.com/question/js-whats-wrong" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="What&#39;s Wrong with This JavaScript?">
    
    

            <span class="number">
                18
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                unfinished
                           ">

    
    
        <a href="https://www.interviewcake.com/question/queue-two-stacks" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Queue Two Stacks">
    
    

            <span class="number">
                19
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/largest-stack" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Largest Stack">
    
    

            <span class="number">
                20
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                unfinished
                           ">

    
    
        <a href="https://www.interviewcake.com/question/find-unique-int-among-duplicates" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="The Stolen Breakfast Drone">
    
    

            <span class="number">
                21
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/delete-node" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Delete Node">
    
    

            <span class="number">
                22
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/linked-list-cycles" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Does This Linked List Have A Cycle?">
    
    

            <span class="number">
                23
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/reverse-linked-list" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Reverse A Linked List">
    
    

            <span class="number">
                24
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/kth-to-last-node-in-singly-linked-list" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Kth to Last Node in a Singly-Linked List">
    
    

            <span class="number">
                25
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/reverse-string-in-place" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Reverse String in Place">
    
    

            <span class="number">
                26
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/reverse-words" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Reverse Words">
    
    

            <span class="number">
                27
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/matching-parens" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Parenthesis Matching">
    
    

            <span class="number">
                28
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/bracket-validator" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Bracket Validator">
    
    

            <span class="number">
                29
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/permutation-palindrome" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Permutation Palindrome">
    
    

            <span class="number">
                30
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/recursive-string-permutations" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Recursive String Permutations">
    
    

            <span class="number">
                31
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                unfinished
                           ">

    
    
        <a href="https://www.interviewcake.com/question/top-scores" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Top Scores">
    
    

            <span class="number">
                32
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/which-appears-twice" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Which Appears Twice">
    
    

            <span class="number">
                33
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/word-cloud" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Word Cloud Data">
    
    

            <span class="number">
                34
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/shuffle" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="In-Place Shuffle">
    
    

            <span class="number">
                35
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                unfinished
                           ">

    
    
        <a href="https://www.interviewcake.com/question/single-rifle-check" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Single Riffle Shuffle">
    
    

            <span class="number">
                36
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/simulate-5-sided-die" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Simulate 5-sided die">
    
    

            <span class="number">
                37
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/simulate-7-sided-die" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Simulate 7-sided die">
    
    

            <span class="number">
                38
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/two-egg-problem" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Two Egg Problem">
    
    

            <span class="number">
                39
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/find-duplicate-optimize-for-space" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Find Repeat, Space Edition">
    
    

            <span class="number">
                40
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                unfinished
                           ">

    
    
        <a href="https://www.interviewcake.com/question/find-duplicate-optimize-for-space-beast-mode" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Find Repeat, Space Edition BEAST MODE">
    
    

            <span class="number">
                41
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                unfinished
                           ">

    
    
        <a href="https://www.interviewcake.com/question/find-duplicate-files" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Find Duplicate Files">
    
    

            <span class="number">
                42
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                unfinished
                           ">

    
    
        <a href="https://www.interviewcake.com/question/merge-sorted-arrays" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Merge Sorted Arrays">
    
    

            <span class="number">
                43
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                unfinished
                           ">

    
    
        <a href="https://www.interviewcake.com/question/url-shortener" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="URL Shortener">
    
    

            <span class="number">
                44
            </span>

            

    
    
        </a>
    
    
</div>

            
        
    </section>

    <div class="edge-fade left" ng-style="{left: edgeFadePositions.left + &#39;px&#39;}" style="left: -160px;"></div>
    <div class="edge-fade right" ng-style="{right: edgeFadePositions.right + &#39;px&#39;}" style="right: 0px;"></div>

    <div class="scroll-on-hover left ng-hide" ng-mouseenter="scrollDirection = &#39;-&#39;; toggleScroll()" ng-mouseleave="toggleScroll()" ng-hide="edgeFadePositions.left === -edgeFadeWidth">
    </div>
    <div class="scroll-on-hover right" ng-mouseenter="scrollDirection = &#39;+&#39;; toggleScroll()" ng-mouseleave="toggleScroll()" ng-hide="edgeFadePositions.right &lt;= -(edgeFadeWidth - 2)"> <!-- cuz chrome only scrolls to 2px less than it can -->
    </div>

</div>

        
    

    
        <div class="free-questions-left ng-hide" ng-show="currentUserSet &amp;&amp; !currentUser.is_full_access">


<p>
<span ng-show="currentUser.getNumFreeQuestionsLeft()&gt;0" class="ng-hide">

    <span ng-show="currentUser.getNumFreeQuestionsLeft()==1" class="ng-hide">Just </span>
    <strong class="num ng-binding">0</strong>

</span>
<span ng-show="currentUser.getNumFreeQuestionsLeft()==0">
    No
</span>

more free question<span ng-show="currentUser.getNumFreeQuestionsLeft() != 1">s</span>

left!
</p>



<a href="https://www.interviewcake.com/upgrade" class="btn btn-default btn-sm btn-rarr">
    Upgrade Now
</a>

</div>

    

    
    <div class="wrapper-hack" ng-init="slug=&#39;rectangular-love&#39;">
<div class="card ng-scope" ng-class="{&#39;started&#39;: btnPresses.length &gt; 0}" ng-controller="CardCtrl">

    <div class="sections">
        
    <div>
<span class="question-data" data-name="Rectangular Love" data-meta_desc="Find the area of overlap between two rectangles. In the name of love." data-title="" data-meta_keywords="" data-weight="1" data-difficulty="5" data-num-hints="10" data-num-gotchas="4" ng-init="setNumHints(10); setNumGotchas(4); ">
</span>

<div class="section-wrapper ng-isolate-scope section-question" ng-class="getSectionClass()" ng-init="ready=false" ng-show="shouldShow()" section="question">
    <h3 class="heading slide ng-binding ng-isolate-scope ng-hide" ng-show="shouldShow()" heading="question" hide-heading=""></h3>

    <div class="section section-question" ng-class="getSectionClass()" ng-transclude="">
<p class="ng-scope">
<strong>
A crack team of love scientists from OkEros (a hot new dating site) have devised a way to represent dating profiles as rectangles on a two-dimensional plane.
</strong>
</p>

<p class="ng-scope">
<strong>They need help writing an algorithm to find the intersection of two users' love rectangles.</strong> They suspect finding that intersection is the key to a matching algorithm <em>so powerful</em> it will cause an immediate acquisition by Google or Facebook or Obama or something.
</p>

<div class="diagram ng-scope">
    <img src="./06.Rectangular Love _ Interview Cake_files/rectangular_love__it_must_be_love.svg" height="210" width="205" alt="Two rectangles overlapping a little. It must be love.">


    
</div>


<p class="ng-scope">
<strong>Write a function to find the rectangular intersection of two given love rectangles.</strong>
</p>

<p class="ng-scope">
As with the example above, love rectangles are always "straight" and never "diagonal." More rigorously: each side is parallel with either the x-axis or the y-axis.
</p>

<p class="ng-scope">
They are defined as <span class="ic-words ng-isolate-scope" ng-transclude="" words="question__rectangular-love__rectangle-explanation"><span concept="hash-map" class="ng-scope ng-isolate-scope"><span class="concept-wrapper" ng-init="showConcept=false">

    <span ng-click="showConcept=!showConcept" class="concept">
        <span class="concept-name" ng-transclude=""><span class="ng-scope">dictionaries</span></span>
        <span class="show-concept-icon">↴</span>
    </span>

    <!-- ngInclude: conceptPartialUrl --><div ng-show="showConcept" class="slide concept-explanation ng-scope ng-hide" ng-include="conceptPartialUrl"><div class="ng-scope">
<p>
A <strong>hash table</strong> (also called a <strong>hash</strong>, <strong>hash map</strong>, <strong>map</strong>, <strong>unordered map</strong> or <strong>dictionary</strong>) is a data structure that pairs keys to values.
</p>

<div code-block="concept__hash-map__hash-map" language="python" translation-highlighting="dynamic" class="ng-isolate-scope"><pre class=" language-python">  <code class=" language-python" ng-transclude="">lightbulb_to_hours_of_light <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">'incandescent'</span><span class="token punctuation">:</span> <span class="token number">1200</span><span class="token punctuation">,</span>
    <span class="token string">'compact fluorescent'</span><span class="token punctuation">:</span> <span class="token number">10000</span><span class="token punctuation">,</span>
    <span class="token string">'LED'</span><span class="token punctuation">:</span> <span class="token number">50000</span>
<span class="token punctuation">}</span></code>
</pre>
<span class="warning-message ng-binding ng-hide" ng-show="warningMessage" ng-bind="warningMessage"></span>
<div class="select-content-language" ng-hide="staticLanguage">

    <select ng-model="contentLanguage" ng-options="language.display_name for language in contentLanguages" ng-change="updateLanguage(contentLanguage)" class="ng-pristine ng-untouched ng-valid"><option value="0" selected="selected" label="Python">Python</option><option value="1" label="Ruby">Ruby</option><option value="2" label="Java">Java</option><option value="3" label="JavaScript">JavaScript</option><option value="4" label="C (beta)">C (beta)</option><option value="5" label="C++ (beta)">C++ (beta)</option></select>

</div>
<span class="only-content-language ng-binding ng-hide" ng-show="staticLanguage" ng-bind="onlyLanguage"></span>
<!-- FE TESTING <button class="run-tests" ng-show="showTests && hasTests" ng-click="runTests()">TEST</button> -->
</div>

<span class="ic-words ng-isolate-scope" ng-transclude="" words="concept__hash-map__javascript-object"></span>

<p>
Hash tables:
</p>
<ul>
<li>take <em>on average</em> <strong><span complexity="1" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mn>1</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></span></span> time for insertions and lookups</strong>
</li>
<li>are <strong>unordered</strong> (the keys are not guaranteed to stay in the same order)</li>
<li>can use <strong>many types of objects as keys</strong> (<span class="ic-words ng-isolate-scope" ng-transclude="" words="concept__hash-map__commonly-strings"><span class="ng-scope">commonly strings</span></span>)</li>
</ul>

<p>
Hash tables can be thought of as arrays, if you think of array indices as keys!
</p>

<p>
In fact, hash tables are <em>built on</em> arrays. So if you ever want to use a hash table but know your keys will be sequential integers (like <span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mn>1</mn><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mn>1</mn><mn>0</mn><mn>0</mn></mrow><annotation encoding="application/x-tex">1..100</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.64444em;"></span><span class="strut bottom" style="height: 0.64444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord">1</span><span class="mord">.</span><span class="mord">.</span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span></span></span></span></span>), you can probably save time and space by just using an array instead.
</p>

<p>
<strong>Note:</strong> hash tables have an <strong>average case</strong> insertion and lookup cost of <span complexity="1" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mn>1</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></span></span>. In industry, we often confuse the average-case cost with <em>worst case</em> cost, but they're not really the same. Because of hash collisions and rebalancing, a hash table insertion or lookup can cost as much as <span complexity="n" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mclose">)</span></span></span></span></span></span></span> time in the worst case. But usually in industry we assume hashing and resizing algorithms are clever enough that collisions are rare and cheap.
</p>

<script type="text/javascript">
            var elTranslations = {"code-blocks": {"concept__hash-map__javascript-object": {"default": "var lightbulbToHoursOfLight = {\n    'incandescent': 1200,\n    'compact fluorescent': 10000,\n    'LED': 50000,\n};"}, "concept__hash-map__hash-map": {"c": "// Assume we've implemented a hash table\nHashTable *hashTableNew(void);\nHashTable *hashTableInsert(HashTable *hashTable, const char *key, int value);\n\nHashTable *lightbulbToHoursOfLight = hashTableNew();\nlightbulbToHoursOfLight = hashTableInsert(lightbulbToHoursOfLight, \"incandescent\", 1200);\nlightbulbToHoursOfLight = hashTableInsert(lightbulbToHoursOfLight, \"compact fluorescent\", 10000);\nlightbulbToHoursOfLight = hashTableInsert(lightbulbToHoursOfLight, \"LED\", 50000);", "javascript": "var lightbulbToHoursOfLight = new Map();\n\nlightBulbToHoursOfLight.set('incandescent', 1200);\nlightbulbToHoursOfLight.set('compact fluorescent', 10000);\nlightbulbToHoursOfLight.set('LED', 50000);", "python": "lightbulb_to_hours_of_light = {\n    'incandescent': 1200,\n    'compact fluorescent': 10000,\n    'LED': 50000\n}", "ruby": "lightbulb_to_hours_of_light = {\n    'incandescent' => 1200,\n    'compact fluorescent' => 10000,\n    'LED' => 50000\n}", "cpp": "unordered_map&lt;string, int> lightbulbToHoursOfLight;\n\nlightbulbToHoursOfLight.insert(make_pair(\"incandescent\", 1200));\nlightbulbToHoursOfLight.insert(make_pair(\"compact fluorescent\", 10000));\nlightbulbToHoursOfLight.insert(make_pair(\"LED\", 50000));", "java": "Map&lt;String, Integer> lightbulbToHoursOfLight = new HashMap&lt;String, Integer>();\n\nlightbulbToHoursOfLight.put(\"incandescent\", 1200);\nlightbulbToHoursOfLight.put(\"compact fluorescent\", 10000);\nlightbulbToHoursOfLight.put(\"LED\", 50000);"}}, "words": {"concept__hash-map__commonly-strings": {"c": "commonly strings", "javascript": "JavaScript <em>object</em> keys are always <strong>strings</strong>", "python": "commonly strings", "default": "commonly strings", "ruby": "commonly strings", "cpp": "commonly strings", "java": "commonly strings"}, "concept__hash-map__javascript-object": {"c": "", "javascript": "<p>\n    In JavaScript, <strong>objects</strong> are also commonly used for storing key-value pairs:\n</p>\n\n<div code-block=\"javascript-object\" language=\"javascript\" translation-highlighting=\"static\">var lightbulbToHoursOfLight = {\n    'incandescent': 1200,\n    'compact fluorescent': 10000,\n    'LED': 50000,\n};</div>\n\n<p class=\"aside\">\n    <strong>How do you know when to use a map or object in JavaScript?</strong> Objects are used almost always, but maps might be helpful if your keys aren't strings or you need to iterate over your data. Maps aren't fully supported by all modern browsers yet.\n</p>", "python": "", "default": "", "ruby": "", "cpp": "", "java": ""}}};
            var codeTypes = ['words', 'code-blocks', 'vars', 'funcs', 'code-inlines'];

            var mergeObjects = function(objectA, objectB) {
                objectA = objectA || {};
                objectB = objectB || {};
                for (var key in objectB) {
                    objectA[key] = objectB[key];
                }
                return objectA;
            }

            if (!window.contentTranslations) {
                window.contentTranslations = elTranslations;
            } else {
                for (var i=0; i<codeTypes.length; i++) {
                    window.contentTranslations[codeTypes[i]] = mergeObjects(window.contentTranslations[codeTypes[i]], elTranslations[codeTypes[i]]);
                }
            }
            </script>
</div>
</div>

</span>
</span><span class="ng-scope"> like this</span></span>:
</p>

<div code-block="question__rectangular-love__rectangle-hash-map-or-class" language="python" translation-highlighting="dynamic" class="ng-scope ng-isolate-scope"><pre class="  language-python">  <code class="  language-python" ng-transclude="">my_rectangle <span class="token operator">=</span> <span class="token punctuation">{</span>

    <span class="token comment" spellcheck="true"># coordinates of bottom-left corner</span>
    <span class="token string">'left_x'</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token string">'bottom_y'</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>

    <span class="token comment" spellcheck="true"># width and height</span>
    <span class="token string">'width'</span><span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
    <span class="token string">'height'</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span>

<span class="token punctuation">}</span></code>
</pre>
<span class="warning-message ng-binding ng-hide" ng-show="warningMessage" ng-bind="warningMessage"></span>
<div class="select-content-language" ng-hide="staticLanguage">

    <select ng-model="contentLanguage" ng-options="language.display_name for language in contentLanguages" ng-change="updateLanguage(contentLanguage)" class="ng-pristine ng-untouched ng-valid"><option value="0" selected="selected" label="Python">Python</option><option value="1" label="Ruby">Ruby</option><option value="2" label="Java">Java</option><option value="3" label="JavaScript">JavaScript</option><option value="4" label="C (beta)">C (beta)</option><option value="5" label="C++ (beta)">C++ (beta)</option></select>

</div>
<span class="only-content-language ng-binding ng-hide" ng-show="staticLanguage" ng-bind="onlyLanguage"></span>
<!-- FE TESTING <button class="run-tests" ng-show="showTests && hasTests" ng-click="runTests()">TEST</button> -->
</div>

<p class="ng-scope">
Your output rectangle should <span class="ic-words ng-isolate-scope" ng-transclude="" words="question__rectangular-love__be-this-type-of-rectangle"><span class="ng-scope">use this format</span></span> as well.
</p>
</div>

    
</div>

<div class="section-wrapper ng-isolate-scope section-gotchas ng-hide" ng-class="getSectionClass()" ng-init="ready=false" ng-show="shouldShow()" section="gotchas">
    <h3 class="heading slide ng-binding ng-isolate-scope ng-hide" ng-show="shouldShow()" heading="gotchas" hide-heading="">Gotchas</h3>

    <div class="section section-gotchas" ng-class="getSectionClass()" ng-transclude="">
<div class="note slide ng-isolate-scope ng-hide" ng-show="shouldShow()" note="" number="1" type="gotcha">
    <div class="note-content" ng-transclude="">
<p class="ng-scope">
<strong>What if there is <em>no</em> intersection?</strong> Does your function do something reasonable in that case?
</p>
</div>
</div>
<div class="note slide ng-isolate-scope ng-hide" ng-show="shouldShow()" note="" number="2" type="gotcha">
    <div class="note-content" ng-transclude="">
<p class="ng-scope">
<strong>What if one rectangle is entirely contained in the other?</strong> Does your function do something reasonable in that case?
</p>
</div>
</div>
<div class="note slide ng-isolate-scope ng-hide" ng-show="shouldShow()" note="" number="3" type="gotcha">
    <div class="note-content" ng-transclude="">
<p class="ng-scope">
<strong>What if the rectangles don't really intersect but share an edge?</strong> Does your function do something reasonable in that case?
</p>
</div>
</div>
<div class="note slide ng-isolate-scope ng-hide" ng-show="shouldShow()" note="" number="4" type="gotcha">
    <div class="note-content" ng-transclude="">
<p class="ng-scope">
Do some parts of your function seem very similar? Can they be refactored so you repeat yourself less?
</p>
</div>
</div>
</div>

    
</div>


<div class="section-wrapper ng-isolate-scope section-breakdown ng-hide" ng-class="getSectionClass()" ng-init="ready=false" ng-show="shouldShow()" section="breakdown">
    <h3 class="heading slide ng-binding ng-isolate-scope ng-hide" ng-show="shouldShow()" heading="breakdown" hide-heading="">Breakdown</h3>

    <div class="section section-breakdown" ng-class="getSectionClass()" ng-transclude="">
<div class="note slide ng-isolate-scope ng-hide" ng-show="shouldShow()" note="" number="1" type="hint">
    <div class="note-content" ng-transclude="">
<p class="ng-scope">
Let's break this problem into subproblems. How can we divide this problem into smaller parts?
</p>
</div>
</div>

<div class="note slide ng-isolate-scope ng-hide" ng-show="shouldShow()" note="" number="2" type="hint">
    <div class="note-content" ng-transclude="">
<p class="ng-scope">
We could look at the two rectangles’ "horizontal overlap" or "x overlap" separately from their "vertical overlap" or "y overlap."
</p>

<p class="ng-scope">
<strong>
Lets start with a helper function <span class="ic-function ng-isolate-scope" func="question__rectangular-love__find-x-overlap"><span class="name" ng-transclude=""><span class="ng-scope">find_x_overlap</span></span>()</span>.
</strong>
</p>

</div>
</div>

<div class="note slide ng-isolate-scope ng-hide" ng-show="shouldShow()" note="" number="3" type="hint">
    <div class="note-content" ng-transclude="">
<p class="ng-scope">
Need help finding the x overlap?
</p>
<p class="ng-scope">
Since we’re only working with the x dimension, we can treat the two rectangles' widths as ranges on a 1-dimensional number line.
</p>
<p class="ng-scope">
What are the possible cases for how these ranges might overlap or not overlap? Draw out some examples!
</p>
</div>
</div>

<div class="note slide ng-isolate-scope ng-hide" ng-show="shouldShow()" note="" id="range-overlap-cases" number="4" type="hint">
    <div class="note-content" ng-transclude="">
<p class="ng-scope">
<strong>
There are four relevant cases:
</strong>
</p>

<p class="ng-scope">
1) The ranges partially overlap:
</p>

<div class="diagram ng-scope">
    <img src="./06.Rectangular Love _ Interview Cake_files/rectangular_love__partially_overlap.svg" height="15" width="200" alt="Two horizontal parallel lines. The right half of the top line overlaps the left half of the bottom line.">


    
</div>


<p class="ng-scope">
2) One range is completely contained in the other:
</p>

<div class="diagram ng-scope">
    <img src="./06.Rectangular Love _ Interview Cake_files/rectangular_love__completely_contained.svg" height="15" width="200" alt="Two horizontal parallel lines. The bottom line is longer than the top line and extends farther out to the left and right.">


    
</div>


<p class="ng-scope">
3) The ranges don't overlap:
</p>

<div class="diagram ng-scope">
    <img src="./06.Rectangular Love _ Interview Cake_files/rectangular_love__dont_overlap.svg" height="15" width="200" alt="Two horizontal parallel lines. The right end of the bottom line is to the left of the left end of the top line.">


    
</div>


<p class="ng-scope">
4) The ranges "touch" at a single point:
</p>

<div class="diagram ng-scope">
    <img src="./06.Rectangular Love _ Interview Cake_files/rectangular_love__touch_at_single_point.svg" height="15" width="200" alt="Two horizontal parallel lines. The right end of the bottom line is directly below the left end of the top line.">


    
</div>


<p class="ng-scope">
Let's start with the first 2 cases. <strong>How do we compute the overlapping range?</strong>
</p>
</div>
</div>

<div class="note slide ng-isolate-scope ng-hide" ng-show="shouldShow()" note="" number="5" type="hint">
    <div class="note-content" ng-transclude="">

<p class="ng-scope">
One of our ranges starts "further to the right" than the other. We don't know ahead of time which one it is, but we can check the starting points of each range to see which one has the <span class="ic-variable ng-isolate-scope" ng-transclude="" var="question__rectangular-love__highest-start-point"><span class="ng-scope">highest_start_point</span></span>. <strong>That <span class="ic-variable ng-isolate-scope" ng-transclude="" var="question__rectangular-love__highest-start-point"><span class="ng-scope">highest_start_point</span></span> is always the left-hand side of the overlap</strong>, if there is one.
</p>

<p class="ng-scope">
Not convinced? Draw some examples!
</p>

<p class="ng-scope">
Similarly, <strong>the right-hand side of our overlap is always the <span class="ic-variable ng-isolate-scope" ng-transclude="" var="question__rectangular-love__lowest-end-point"><span class="ng-scope">lowest_end_point</span></span></strong>. That <em>may or may not</em> be the end point of the same input range that had the <span class="ic-variable ng-isolate-scope" ng-transclude="" var="question__rectangular-love__highest-start-point"><span class="ng-scope">highest_start_point</span></span>—compare cases (1) and (2).
</p>

<p class="ng-scope">
This gives us our x overlap! So we can handle cases (1) and (2). <strong>How do we know when there is <em>no</em> overlap?</strong>
</p>
</div>
</div>

<div class="note slide ng-isolate-scope ng-hide" ng-show="shouldShow()" note="" number="6" type="hint">
    <div class="note-content" ng-transclude="">
<p class="ng-scope">
If <span class="ic-variable ng-isolate-scope" ng-transclude="" var="question__rectangular-love__highest-start-point"><span class="ng-scope">highest_start_point</span></span> &gt; <span class="ic-variable ng-isolate-scope" ng-transclude="" var="question__rectangular-love__lowest-end-point"><span class="ng-scope">lowest_end_point</span></span>, the two rectangles do not overlap.
</p>

<p class="ng-scope">
But be careful—is it just <em>greater than</em> or is it <em>greater than or equal to</em>?
</p>
</div>
</div>

<div class="note slide ng-isolate-scope ng-hide" ng-show="shouldShow()" note="" number="7" type="hint">
    <div class="note-content" ng-transclude="">
<p class="ng-scope">
It depends how we want to handle case (4) above.
</p>

<!-- #illustrate -->
<p class="ng-scope">
If we use <em>greater than</em>, we treat case (4) as an overlap. This means we could end up returning a rectangle with <em>zero width</em>, which ... may or may not be what we're looking for. You could make an argument either way.
</p>

<p class="ng-scope">
Let's say a rectangle with zero width (or zero height) isn't a rectangle at all, so we should treat that case as "no intersection."
</p>

<p class="ng-scope">
<strong>
Can you finish <span class="ic-function ng-isolate-scope" func="question__rectangular-love__find-x-overlap"><span class="name" ng-transclude=""><span class="ng-scope">find_x_overlap</span></span>()</span>?
</strong>
</p>
</div>
</div>

<div class="note slide ng-isolate-scope ng-hide" ng-show="shouldShow()" note="" number="8" type="hint">
    <div class="note-content" ng-transclude="">
<p class="ng-scope">
Here's one way to do it:
</p>

<div code-block="question__rectangular-love__find-x-overlap" language="python" translation-highlighting="dynamic" class="ng-scope ng-isolate-scope"><pre class="  language-python">  <code class="  language-python" ng-transclude=""><span class="token keyword">def</span> <span class="token function">find_x_overlap</span><span class="token punctuation">(</span>x1<span class="token punctuation">,</span> width1<span class="token punctuation">,</span> x2<span class="token punctuation">,</span> width2<span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token comment" spellcheck="true"># find the highest ("rightmost") start point and lowest ("leftmost") end point</span>
    highest_start_point <span class="token operator">=</span> max<span class="token punctuation">(</span>x1<span class="token punctuation">,</span> x2<span class="token punctuation">)</span>
    lowest_end_point <span class="token operator">=</span> min<span class="token punctuation">(</span>x1 <span class="token operator">+</span> width1<span class="token punctuation">,</span> x2 <span class="token operator">+</span> width2<span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true"># return null overlap if there is no overlap</span>
    <span class="token keyword">if</span> highest_start_point <span class="token operator">&gt;=</span> lowest_end_point<span class="token punctuation">:</span> <span class="token keyword">return</span> <span class="token punctuation">(</span>None<span class="token punctuation">,</span> None<span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true"># compute the overlap width</span>
    overlap_width <span class="token operator">=</span> lowest_end_point <span class="token operator">-</span> highest_start_point

    <span class="token keyword">return</span> <span class="token punctuation">(</span>highest_start_point<span class="token punctuation">,</span> overlap_width<span class="token punctuation">)</span></code>
</pre>
<span class="warning-message ng-binding ng-hide" ng-show="warningMessage" ng-bind="warningMessage"></span>
<div class="select-content-language" ng-hide="staticLanguage">

    <select ng-model="contentLanguage" ng-options="language.display_name for language in contentLanguages" ng-change="updateLanguage(contentLanguage)" class="ng-pristine ng-untouched ng-valid"><option value="0" selected="selected" label="Python">Python</option><option value="1" label="Ruby">Ruby</option><option value="2" label="Java">Java</option><option value="3" label="JavaScript">JavaScript</option><option value="4" label="C (beta)">C (beta)</option><option value="5" label="C++ (beta)">C++ (beta)</option></select>

</div>
<span class="only-content-language ng-binding ng-hide" ng-show="staticLanguage" ng-bind="onlyLanguage"></span>
<!-- FE TESTING <button class="run-tests" ng-show="showTests && hasTests" ng-click="runTests()">TEST</button> -->
</div>

<p class="ng-scope">
<strong>
How can we adapt this for the rectangles’ <span class="ic-variable ng-isolate-scope" ng-transclude="" var="question__rectangular-love__y"><span class="ng-scope">y</span></span>s and <span class="ic-variable ng-isolate-scope" ng-transclude="" var="question__rectangular-love__height"><span class="ng-scope">height</span></span>s?
</strong>
</p>
</div>
</div>

<div class="note slide ng-isolate-scope ng-hide" ng-show="shouldShow()" note="" number="9" type="hint">
    <div class="note-content" ng-transclude="">
<p class="ng-scope">
Can we just make one <span class="ic-function ng-isolate-scope" func="question__rectangular-love__find-range-overlap"><span class="name" ng-transclude=""><span class="ng-scope">find_range_overlap</span></span>()</span> function that can handle x overlap and y overlap?
</p>
</div>
</div>

<div class="note slide ng-isolate-scope ng-hide" ng-show="shouldShow()" note="" number="10" type="hint">
    <div class="note-content" ng-transclude="">
<p class="ng-scope">
Yes! We simply use more general parameter names:
</p>

<div code-block="question__rectangular-love__find-range-overlap" language="python" translation-highlighting="dynamic" class="ng-scope ng-isolate-scope"><pre class="  language-python">  <code class="  language-python" ng-transclude=""><span class="token keyword">def</span> <span class="token function">find_range_overlap</span><span class="token punctuation">(</span>point1<span class="token punctuation">,</span> length1<span class="token punctuation">,</span> point2<span class="token punctuation">,</span> length2<span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token comment" spellcheck="true"># find the highest start point and lowest end point.</span>
    <span class="token comment" spellcheck="true"># the highest ("rightmost" or "upmost") start point is</span>
    <span class="token comment" spellcheck="true"># the start point of the overlap.</span>
    <span class="token comment" spellcheck="true"># the lowest end point is the end point of the overlap.</span>
    highest_start_point <span class="token operator">=</span> max<span class="token punctuation">(</span>point1<span class="token punctuation">,</span> point2<span class="token punctuation">)</span>
    lowest_end_point <span class="token operator">=</span> min<span class="token punctuation">(</span>point1 <span class="token operator">+</span> length1<span class="token punctuation">,</span> point2 <span class="token operator">+</span> length2<span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true"># return null overlap if there is no overlap</span>
    <span class="token keyword">if</span> highest_start_point <span class="token operator">&gt;=</span> lowest_end_point<span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>None<span class="token punctuation">,</span> None<span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true"># compute the overlap length</span>
    overlap_length <span class="token operator">=</span> lowest_end_point <span class="token operator">-</span> highest_start_point

    <span class="token keyword">return</span> <span class="token punctuation">(</span>highest_start_point<span class="token punctuation">,</span> overlap_length<span class="token punctuation">)</span></code>
</pre>
<span class="warning-message ng-binding ng-hide" ng-show="warningMessage" ng-bind="warningMessage"></span>
<div class="select-content-language" ng-hide="staticLanguage">

    <select ng-model="contentLanguage" ng-options="language.display_name for language in contentLanguages" ng-change="updateLanguage(contentLanguage)" class="ng-pristine ng-untouched ng-valid"><option value="0" selected="selected" label="Python">Python</option><option value="1" label="Ruby">Ruby</option><option value="2" label="Java">Java</option><option value="3" label="JavaScript">JavaScript</option><option value="4" label="C (beta)">C (beta)</option><option value="5" label="C++ (beta)">C++ (beta)</option></select>

</div>
<span class="only-content-language ng-binding ng-hide" ng-show="staticLanguage" ng-bind="onlyLanguage"></span>
<!-- FE TESTING <button class="run-tests" ng-show="showTests && hasTests" ng-click="runTests()">TEST</button> -->
</div>

<p class="ng-scope">
We've solved our subproblem of finding the x and y overlaps! <strong>Now we just need to put the results together.</strong>
</p>
</div>
</div>
</div>

    
</div>


<div class="section-wrapper ng-isolate-scope section-solution ng-hide" ng-class="getSectionClass()" ng-init="ready=false" ng-show="shouldShow()" section="solution">
    <h3 class="heading slide ng-binding ng-isolate-scope" ng-show="shouldShow()" heading="solution" hide-heading="">Solution</h3>

    <div class="section section-solution" ng-class="getSectionClass()" ng-transclude="">

<p class="ng-scope">
We divide the problem into two halves:
</p>

<ol class="ng-scope">
<li>
The intersection along the x-axis
</li>
<li>
The intersection along the y-axis
</li>
</ol>

<p class="ng-scope">
Both problems are basically the same as finding the intersection of two "ranges" on a 1-dimensional number line.
</p>

<p class="ng-scope">
So we write a helper function <span class="ic-function ng-isolate-scope" func="question__rectangular-love__find-range-overlap"><span class="name" ng-transclude=""><span class="ng-scope">find_range_overlap</span></span>()</span> that can be used to find both the x overlap and the y overlap, and we use it to build the rectangular overlap:
</p>

<div code-block="question__rectangular-love__solution" language="python" translation-highlighting="dynamic" class="ng-scope ng-isolate-scope"><pre class="  language-python">  <code class="  language-python" ng-transclude=""><span class="token keyword">def</span> <span class="token function">find_range_overlap</span><span class="token punctuation">(</span>point1<span class="token punctuation">,</span> length1<span class="token punctuation">,</span> point2<span class="token punctuation">,</span> length2<span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token comment" spellcheck="true"># find the highest start point and lowest end point.</span>
    <span class="token comment" spellcheck="true"># the highest ("rightmost" or "upmost") start point is</span>
    <span class="token comment" spellcheck="true"># the start point of the overlap.</span>
    <span class="token comment" spellcheck="true"># the lowest end point is the end point of the overlap.</span>
    highest_start_point <span class="token operator">=</span> max<span class="token punctuation">(</span>point1<span class="token punctuation">,</span> point2<span class="token punctuation">)</span>
    lowest_end_point <span class="token operator">=</span> min<span class="token punctuation">(</span>point1 <span class="token operator">+</span> length1<span class="token punctuation">,</span> point2 <span class="token operator">+</span> length2<span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true"># return null overlap if there is no overlap</span>
    <span class="token keyword">if</span> highest_start_point <span class="token operator">&gt;=</span> lowest_end_point<span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>None<span class="token punctuation">,</span> None<span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true"># compute the overlap length</span>
    overlap_length <span class="token operator">=</span> lowest_end_point <span class="token operator">-</span> highest_start_point

    <span class="token keyword">return</span> <span class="token punctuation">(</span>highest_start_point<span class="token punctuation">,</span> overlap_length<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">find_rectangular_overlap</span><span class="token punctuation">(</span>rect1<span class="token punctuation">,</span> rect2<span class="token punctuation">)</span><span class="token punctuation">:</span>

    <span class="token comment" spellcheck="true"># get the x and y overlap points and lengths</span>
    x_overlap_point<span class="token punctuation">,</span> overlap_width  <span class="token operator">=</span> find_range_overlap<span class="token punctuation">(</span>\
        rect1<span class="token punctuation">[</span><span class="token string">'left_x'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> rect1<span class="token punctuation">[</span><span class="token string">'width'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  rect2<span class="token punctuation">[</span><span class="token string">'left_x'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> rect2<span class="token punctuation">[</span><span class="token string">'width'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    y_overlap_point<span class="token punctuation">,</span> overlap_height <span class="token operator">=</span> find_range_overlap<span class="token punctuation">(</span>\
        rect1<span class="token punctuation">[</span><span class="token string">'bottom_y'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> rect1<span class="token punctuation">[</span><span class="token string">'height'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> rect2<span class="token punctuation">[</span><span class="token string">'bottom_y'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> rect2<span class="token punctuation">[</span><span class="token string">'height'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true"># return null rectangle if there is no overlap</span>
    <span class="token keyword">if</span> <span class="token operator">not</span> overlap_width <span class="token operator">or</span> <span class="token operator">not</span> overlap_height<span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
            <span class="token string">'left_x'</span><span class="token punctuation">:</span> None<span class="token punctuation">,</span>
            <span class="token string">'bottom_y'</span><span class="token punctuation">:</span> None<span class="token punctuation">,</span>
            <span class="token string">'width'</span><span class="token punctuation">:</span> None<span class="token punctuation">,</span>
            <span class="token string">'height'</span><span class="token punctuation">:</span> None<span class="token punctuation">,</span>
        <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token string">'left_x'</span><span class="token punctuation">:</span> x_overlap_point<span class="token punctuation">,</span>
        <span class="token string">'bottom_y'</span><span class="token punctuation">:</span> y_overlap_point<span class="token punctuation">,</span>
        <span class="token string">'width'</span><span class="token punctuation">:</span> overlap_width<span class="token punctuation">,</span>
        <span class="token string">'height'</span><span class="token punctuation">:</span> overlap_height<span class="token punctuation">,</span>
    <span class="token punctuation">}</span></code>
</pre>
<span class="warning-message ng-binding ng-hide" ng-show="warningMessage" ng-bind="warningMessage"></span>
<div class="select-content-language" ng-hide="staticLanguage">

    <select ng-model="contentLanguage" ng-options="language.display_name for language in contentLanguages" ng-change="updateLanguage(contentLanguage)" class="ng-pristine ng-untouched ng-valid"><option value="0" selected="selected" label="Python">Python</option><option value="1" label="Ruby">Ruby</option><option value="2" label="Java">Java</option><option value="3" label="JavaScript">JavaScript</option><option value="4" label="C (beta)">C (beta)</option><option value="5" label="C++ (beta)">C++ (beta)</option></select>

</div>
<span class="only-content-language ng-binding ng-hide" ng-show="staticLanguage" ng-bind="onlyLanguage"></span>
<!-- FE TESTING <button class="run-tests" ng-show="showTests && hasTests" ng-click="runTests()">TEST</button> -->
</div>

</div>

    
</div>

<div class="section-wrapper ng-isolate-scope section-complexity ng-hide" ng-class="getSectionClass()" ng-init="ready=false" ng-show="shouldShow()" section="complexity">
    <h3 class="heading slide ng-binding ng-isolate-scope" ng-show="shouldShow()" heading="complexity" hide-heading="">Complexity</h3>

    <div class="section section-complexity" ng-class="getSectionClass()" ng-transclude="">
<p class="ng-scope">
<span complexity="1" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mn>1</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></span></span> time and <span complexity="1" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mn>1</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></span></span> space.
</p>
</div>

    
</div>


<div class="section-wrapper ng-isolate-scope section-bonus ng-hide" ng-class="getSectionClass()" ng-init="ready=false" ng-show="shouldShow()" section="bonus">
    <h3 class="heading slide ng-binding ng-isolate-scope" ng-show="shouldShow()" heading="bonus" hide-heading="">Bonus</h3>

    <div class="section section-bonus" ng-class="getSectionClass()" ng-transclude="">
<p class="ng-scope">
What if we had <span class="ic-words ng-isolate-scope" ng-transclude="" words="question__rectangular-love__a-standard-list"><span class="ng-scope">a list</span></span> of rectangles and wanted to find <em>all</em> the rectangular overlaps between all possible pairs of two rectangles within the <span class="ic-words ng-isolate-scope" ng-transclude="" words="question__rectangular-love__standard-list"><span class="ng-scope">list</span></span>? Note that we'd be returning <em><span class="ic-words ng-isolate-scope" ng-transclude="" words="question__rectangular-love__a-standard-list"><span class="ng-scope">a list</span></span> of rectangles</em>.
</p>

<p class="ng-scope">
What if we had <span class="ic-words ng-isolate-scope" ng-transclude="" words="question__rectangular-love__a-standard-list"><span class="ng-scope">a list</span></span> of rectangles and wanted to find the overlap between <em>all</em> of them, if there was one? Note that we'd be returning <em>a single rectangle</em>.
</p>
</div>

    
</div>

<div class="section-wrapper ng-isolate-scope section-learnings ng-hide" ng-class="getSectionClass()" ng-init="ready=false" ng-show="shouldShow()" section="learnings">
    <h3 class="heading slide ng-binding ng-isolate-scope" ng-show="shouldShow()" heading="learnings" hide-heading="">What We Learned</h3>

    <div class="section section-learnings" ng-class="getSectionClass()" ng-transclude="">
<p class="ng-scope">
This is an interesting one because the hard part isn't the time or space optimization—it's getting something that <em>works</em> and is <em>readable</em>.
</p>
<p class="ng-scope">
For problems like this, I often see candidates who can describe the strategy at a high level but trip over themselves when they get into the details.
</p>
<p class="ng-scope">
Don't let it happen to you. To keep your thoughts clear and avoid bugs, take time to:
</p>
<ol class="ng-scope">
<li>
Think up and draw out all the possible cases. Like <a href="https://www.interviewcake.com/question/python/rectangular-love#range-overlap-cases">we did with the ways ranges can overlap</a>.
</li>
<li>
Use very specific and descriptive variable names.
</li>
</ol>
</div>

    
</div>

<script type="text/javascript">
            var elTranslations = {"code-blocks": {"question__rectangular-love__find-x-overlap": {"javascript": {"code": "function findXOverlap(x1, width1, x2, width2) {\n\n    // find the highest (\"rightmost\") start point and lowest (\"leftmost\") end point\n    var highestStartPoint = Math.max(x1, x2);\n    var lowestEndPoint = Math.min(x1 + width1, x2 + width2);\n\n    // return null overlap if there is no overlap\n    if (highestStartPoint >= lowestEndPoint) {\n        return {startPoint: null, width: null};\n    }\n\n    // compute the overlap width\n    var overlapWidth = lowestEndPoint - highestStartPoint;\n\n    return {startPoint: highestStartPoint, width: overlapWidth};\n}", "tests": "testInputAndOutputLists(findXOverlap, getRangeOverlapTests(tests, 'x', 'width'), true);"}, "python": {"code": "def find_x_overlap(x1, width1, x2, width2):\n\n    # find the highest (\"rightmost\") start point and lowest (\"leftmost\") end point\n    highest_start_point = max(x1, x2)\n    lowest_end_point = min(x1 + width1, x2 + width2)\n\n    # return null overlap if there is no overlap\n    if highest_start_point >= lowest_end_point: return (None, None)\n\n    # compute the overlap width\n    overlap_width = lowest_end_point - highest_start_point\n\n    return (highest_start_point, overlap_width)", "tests": "testInputAndOutputLists(find_x_overlap, get_range_overlap_tests(tests, 'x'), True)"}, "ruby": {"code": "def find_x_overlap(x1, width1, x2, width2)\n\n    # find the highest (\"rightmost\") start point and lowest (\"leftmost\") end point\n    highest_start_point = [x1, x2].max\n    lowest_end_point = [x1 + width1, x2 + width2].min\n\n    # return nil overlap if there is no overlap\n    return [nil, nil] if highest_start_point >= lowest_end_point\n\n    # compute the overlap width\n    overlap_width = lowest_end_point - highest_start_point\n\n    return [highest_start_point, overlap_width]\nend", "tests": "testInputAndOutputLists(method(:find_x_overlap), get_range_overlap_tests(tests, 'x'), true)"}, "c": {"code": "#define MAX(a, b) (((a) > (b)) ? (a) : (b))\n#define MIN(a, b) (((a) &lt; (b)) ? (a) : (b))\n\ntypedef struct {\n    int startPoint;\n    int width;\n} XOverlap;\n\nXOverlap findXOverlap(int x1, int width1, int x2, int width2)\n{\n    int highestStartPoint, lowestEndPoint;\n    XOverlap xOverlap = {0, 0};\n\n    // find the highest (\"rightmost\") start point and lowest (\"leftmost\") end point\n    highestStartPoint = MAX(x1, x2);\n    lowestEndPoint = MIN(x1 + width1, x2 + width2);\n\n    // return null overlap if there is no overlap\n    if (highestStartPoint >= lowestEndPoint) {\n        return xOverlap;\n    }\n\n    // compute the overlap width\n    int overlapWidth = lowestEndPoint - highestStartPoint;\n    xOverlap.startPoint = highestStartPoint;\n    xOverlap.width = overlapWidth;\n\n    return xOverlap;\n}", "tests": "{\n    const int inputs[6][4] = {\n        {5, 2, 5, 1},\n        {0, 10, 5, 2},\n        {1, 1, 1, 5},\n        {0, 10, 1, 1},\n        {0, 10, 10, 10},\n        {0, 10, 0, 10},\n    };\n\n    const XOverlap expectedOutputs[6] = {\n        {5, 1},\n        {5, 2},\n        {1, 1},\n        {1, 1},\n        {0, 0},\n        {0, 10},\n    };\n\n    size_t i;\n    for (i = 0; i < 6; i++) {\n        XOverlap actualOutput = findXOverlap(inputs[i][0], inputs[i][1],\n                                             inputs[i][2], inputs[i][3]);\n        char msg[256];\n        snprintf(msg, sizeof(msg), \"'actualOutput = expectedOutputs[%lu]'\", i);\n        ASSERT_EQUAL(&actualOutput, &expectedOutputs[i], sizeof(XOverlap), msg);\n    }\n}"}, "java": {"code": "public class XOverlap {\n\n    Integer startPoint;\n    Integer width;\n\n    public XOverlap(Integer startPoint, Integer width) {\n        this.startPoint = startPoint;\n        this.width = width;\n    }\n}\n\npublic XOverlap findXOverlap(int x1, int width1, int x2, int width2) {\n\n    // find the highest (\"rightmost\") start point and lowest (\"leftmost\") end point\n    int highestStartPoint = Math.max(x1, x2);\n    int lowestEndPoint = Math.min(x1 + width1, x2 + width2);\n\n    // return null overlap if there is no overlap\n    if (highestStartPoint >= lowestEndPoint) {\n        return new XOverlap(null, null);\n    }\n\n    // compute the overlap width\n    int overlapWidth = lowestEndPoint - highestStartPoint;\n\n    return new XOverlap(highestStartPoint, overlapWidth);\n}", "tests": "int[][] inputs = new int[][]{\n    {5, 2, 5, 1},\n    {0, 10, 5, 2},\n    {1, 1, 1, 5},\n    {0, 10, 1, 1},\n    {0, 10, 20, 10},\n    {0, 10, 0, 10},\n};\n\nXOverlap[] expectedOutputs = new XOverlap[]{\n    t.new XOverlap(5, 1),\n    t.new XOverlap(5, 2),\n    t.new XOverlap(1, 1),\n    t.new XOverlap(1, 1),\n    t.new XOverlap(null, null),\n    t.new XOverlap(0, 10),\n};\n\nfor (int n = 0; n < inputs.length; n++) {\n    XOverlap actualOutput = t.findXOverlap(inputs[n][0], inputs[n][1], inputs[n][2], inputs[n][3]);\n    assertTrue(\n        actualOutput.startPoint == expectedOutputs[n].startPoint\n        && actualOutput.width == expectedOutputs[n].width\n    );\n}"}, "swift": {"code": "struct XOverlap {\n\n    let startPoint: Int\n    let width: Int\n}\n\nfunc findXOverlap(x1: Int, width1: Int, x2: Int, width2: Int) -> XOverlap {\n\n    // find the highest (\"rightmost\") start point and lowest (\"leftmost\") end point\n    let highestStartPoint = max(x1, x2)\n    let lowestEndPoint = min(x1 + width1, x2 + width2)\n\n    // return null overlap if there is no overlap\n    if highestStartPoint >= lowestEndPoint {\n        return XOverlap(startPoint: 0, width: 0)\n    }\n\n    // compute the overlap width\n    let overlapWidth = lowestEndPoint - highestStartPoint\n    return XOverlap(startPoint: highestStartPoint, width: overlapWidth)\n}", "tests": "let inputs = [\n    [5, 2, 5, 1],\n    [0, 10, 5, 2],\n    [1, 1, 1, 5],\n    [0, 10, 1, 1],\n    [0, 10, 20, 10],\n    [0, 10, 0, 10]\n]\n\nlet expectedOutputs = [\n    XOverlap(startPoint: 5, width: 1),\n    XOverlap(startPoint: 5, width: 2),\n    XOverlap(startPoint: 1, width: 1),\n    XOverlap(startPoint: 1, width: 1),\n    XOverlap(startPoint: 0, width: 0),\n    XOverlap(startPoint: 0, width: 10)\n]\n\nfor (i, input) in inputs.enumerated() {\n    let actualOutput = findXOverlap(x1: input[0], width1: input[1], x2: input[2], width2: input[3])\n    let expectedOutput = expectedOutputs[i]\n    try assertTrue( actualOutput.startPoint == expectedOutput.startPoint &&\n            actualOutput.width == expectedOutput.width)\n}"}, "cpp": {"code": "class XOverlap\n{\nprivate:\n    int startPoint_;\n    int width_;\n\npublic:\n    XOverlap() :\n        startPoint_(0),\n        width_(0)\n    {\n    }\n\n    XOverlap(int startPoint, int width) :\n        startPoint_(startPoint),\n        width_(width)\n    {\n    }\n\n    int getStartPoint() const\n    {\n        return startPoint_;\n    }\n\n    int getWidth() const\n    {\n        return width_;\n    }\n\n    bool overlapExists() const\n    {\n        return width_ > 0;\n    }\n\n    bool operator==(const XOverlap& other) const\n    {\n        return\n            startPoint_ == other.startPoint_\n            && width_ == other.width_;\n    }\n\n    bool operator!=(const XOverlap& other) const\n    {\n        return !(*this == other);\n    }\n};\n\nXOverlap findXOverlap(int x1, int width1, int x2, int width2)\n{\n    // find the highest (\"rightmost\") start point and lowest (\"leftmost\") end point\n    int highestStartPoint = max(x1, x2);\n    int lowestEndPoint = min(x1 + width1, x2 + width2);\n\n    // return null overlap if there is no overlap\n    if (highestStartPoint >= lowestEndPoint) {\n        return XOverlap();\n    }\n\n    // compute the overlap width\n    int overlapWidth = lowestEndPoint - highestStartPoint;\n\n    return XOverlap(highestStartPoint, overlapWidth);\n}", "tests": "const int inputs[][4] = {\n    {5, 2, 5, 1},\n    {0, 10, 5, 2},\n    {1, 1, 1, 5},\n    {0, 10, 1, 1},\n    {0, 10, 10, 10},\n    {0, 10, 0, 10},\n};\n\nconst XOverlap expectedOutputs[] = {\n    XOverlap(5, 1),\n    XOverlap(5, 2),\n    XOverlap(1, 1),\n    XOverlap(1, 1),\n    XOverlap(),\n    XOverlap(0, 10),\n};\n\n// ensure we have consistent tests\nassertEqual((sizeof(inputs)/sizeof(inputs[0])), (sizeof(expectedOutputs)/sizeof(expectedOutputs[0])));\n\nfor (size_t i = 0, n = sizeof(inputs)/sizeof(inputs[0]); i < n; ++i) {\n    assertEqual(findXOverlap(inputs[i][0], inputs[i][1], inputs[i][2], inputs[i][3]), expectedOutputs[i]);\n}"}, "csharp": {"code": "public class XOverlap\n{\n    public readonly int StartPoint;\n    public readonly int Width;\n\n    public XOverlap() {}\n\n    public XOverlap(int startPoint, int width)\n    {\n        StartPoint = startPoint;\n        Width = width;\n    }\n}\n\npublic XOverlap FindXOverlap(int x1, int width1, int x2, int width2)\n{\n    // Find the highest (\"rightmost\") start point and lowest (\"leftmost\") end point\n    int highestStartPoint = Math.Max(x1, x2);\n    int lowestEndPoint = Math.Min(x1 + width1, x2 + width2);\n\n    // Return empty overlap if there is no overlap\n    if (highestStartPoint >= lowestEndPoint)\n    {\n        return new XOverlap();\n    }\n\n    // Compute the overlap width\n    int overlapWidth = lowestEndPoint - highestStartPoint;\n\n    return new XOverlap(highestStartPoint, overlapWidth);\n}", "tests": "int[][] inputs = new int[][]\n{\n    new[] {5, 2, 5, 1},\n    new[] {0, 10, 5, 2},\n    new[] {1, 1, 1, 5},\n    new[] {0, 10, 1, 1},\n    new[] {0, 10, 20, 10},\n    new[] {0, 10, 0, 10},\n};\n\nXOverlap[] expectedOutputs = new XOverlap[]\n{\n    new XOverlap(5, 1),\n    new XOverlap(5, 2),\n    new XOverlap(1, 1),\n    new XOverlap(1, 1),\n    new XOverlap(0, 0),\n    new XOverlap(0, 10),\n};\n\nfor (int i = 0; i < inputs.Length; i++)\n{\n    XOverlap actualOutput = FindXOverlap(inputs[i][0], inputs[i][1], inputs[i][2], inputs[i][3]);\n    AssertTrue(\n        actualOutput.StartPoint == expectedOutputs[i].StartPoint\n        && actualOutput.Width == expectedOutputs[i].Width\n    );\n}"}}, "question__rectangular-love__rectangle-hash-map-or-class": {"javascript": "var myRectangle = {\n\n    // coordinates of bottom-left corner\n    leftX: 1,\n    bottomY: 5,\n\n    // width and height\n    width: 10,\n    height: 4,\n\n};", "python": "my_rectangle = {\n\n    # coordinates of bottom-left corner\n    'left_x': 1,\n    'bottom_y': 5,\n\n    # width and height\n    'width': 10,\n    'height': 4,\n\n}", "ruby": "my_rectangle = {\n\n    # coordinates of bottom-left corner\n    'left_x' => 1,\n    'bottom_y' => 5,\n\n    # width and height\n    'width' => 10,\n    'height' => 4,\n\n}", "c": "typedef struct {\n    int leftX;\n    int bottomY;\n    int width;\n    int height;\n} Rectangle;", "java": "public class Rectangle {\n\n    // coordinates of bottom left corner\n    Integer leftX;\n    Integer bottomY;\n\n    // dimensions\n    Integer width;\n    Integer height;\n\n    public Rectangle(Integer leftX, Integer bottomY, Integer width, Integer height) {\n        this.leftX = leftX;\n        this.bottomY = bottomY;\n        this.width  = width;\n        this.height = height;\n    }\n\n    public Rectangle() {}\n\n    public String toString() {\n        return String.format(\"(%d, %d, %d, %d)\", leftX, bottomY, width, height);\n    }\n}", "swift": "struct Rectangle {\n\n    // coordinates of bottom left corner\n    let leftX: Int\n    let bottomY: Int\n\n    // dimensions\n    let width: Int\n    let height: Int\n\n    init(leftX: Int, bottomY: Int, width: Int, height: Int) {\n        self.leftX = leftX\n        self.bottomY = bottomY\n        self.width = width\n        self.height = height\n    }\n\n    init() {\n        self.init(leftX: 0, bottomY: 0, width: 0, height: 0)\n    }\n\n    func toString() -> String {\n        return String(format: \"(%d, %d, %d, %d)\", leftX, bottomY, width, height)\n    }\n}", "cpp": "class Rectangle\n{\nprivate:\n    // coordinates of bottom left corner\n    int leftX_;\n    int bottomY_;\n\n    // dimensions\n    int width_;\n    int height_;\n\npublic:\n    Rectangle() :\n        leftX_(0),\n        bottomY_(0),\n        width_(0),\n        height_(0)\n    {\n    }\n\n    Rectangle(int leftX, int bottomY, int width, int height) :\n        leftX_(leftX),\n        bottomY_(bottomY),\n        width_(width),\n        height_(height)\n    {\n    }\n\n    int getLeftX() const\n    {\n        return  leftX_;\n    }\n\n    int getBottomY() const\n    {\n        return  bottomY_;\n    }\n\n    int getWidth() const\n    {\n        return  width_;\n    }\n\n    int getHeight() const\n    {\n        return  height_;\n    }\n\n    bool operator==(const Rectangle& other) const\n    {\n        return\n            leftX_ == other.leftX_\n            && bottomY_ == other.bottomY_\n            && width_ == other.width_\n            && height_ == other.height_;\n    }\n\n    bool operator!=(const Rectangle& other) const\n    {\n        return !(*this == other);\n    }\n};", "csharp": "public class Rectangle\n{\n    // Coordinates of bottom left corner\n    public int LeftX { get; set; }\n    public int BottomY { get; set; }\n\n    // Dimensions\n    public int Width { get; set; }\n    public int Height { get; set; }\n\n    public Rectangle() {}\n\n    public Rectangle(int leftX, int bottomY, int width, int height)\n    {\n        LeftX = leftX;\n        BottomY = bottomY;\n        Width = width;\n        Height = height;\n    }\n}"}, "setup": {"javascript": "var tests = [\n    [\n        [{\n            leftX: 5,\n            bottomY: 5,\n            width: 2,\n            height: 2,\n        }, {\n            leftX: 5,\n            bottomY: 6,\n            width: 1,\n            height: 1,\n        }],\n        {\n            leftX: 5,\n            bottomY: 6,\n            width: 1,\n            height: 1,\n        },\n        'R2 in corner of R1'\n    ], [\n        [{\n            leftX: 0,\n            bottomY: 0,\n            width: 10,\n            height: 10,\n        }, {\n            leftX: 5,\n            bottomY: 3,\n            width: 2,\n            height: 2,\n        }],\n        {\n            leftX: 5,\n            bottomY: 3,\n            width: 2,\n            height: 2,\n        },\n        'R2 inside R1'\n    ], [\n        [{\n            leftX: 5,\n            bottomY: 3,\n            width: 2,\n            height: 2,\n\n        }, {\n            leftX: 0,\n            bottomY: 0,\n            width: 10,\n            height: 10,\n        }],\n        {\n            leftX: 5,\n            bottomY: 3,\n            width: 2,\n            height: 2,\n        },\n        'R1 inside R2'\n    ], [\n        [{\n            leftX: 1,\n            bottomY: 2,\n            width: 1,\n            height: 5,\n        }, {\n            leftX: 1,\n            bottomY: 2,\n            width: 5,\n            height: 1,\n        }],\n        {\n            leftX: 1,\n            bottomY: 2,\n            width: 1,\n            height: 1,\n        },\n        \"two 'sticks' that overlap for 1 'square'\"\n    ], [\n        [{\n            leftX: 0,\n            bottomY: 0,\n            width: 10,\n            height: 10,\n        }, {\n            leftX: 1,\n            bottomY: 0,\n            width: 1,\n            height: 50,\n        }],\n        {\n            leftX: 1,\n            bottomY: 0,\n            width: 1,\n            height: 10,\n        },\n        'R2 starts inside R1 but shoots out'\n    ], [\n        [{\n            leftX: 0,\n            bottomY: 0,\n            width: 10,\n            height: 10,\n        }, {\n            leftX: 20,\n            bottomY: 20,\n            width: 10,\n            height: 10,\n        }],\n        {\n            leftX: null,\n            bottomY: null,\n            width: null,\n            height: null,\n        },\n        'no overlap'\n    ], [\n        [{\n            leftX: 0,\n            bottomY: 0,\n            width: 10,\n            height: 10,\n        }, {\n            leftX: 10,\n            bottomY: 0,\n            width: 10,\n            height: 10,\n        }],\n        {\n            leftX: null,\n            bottomY: null,\n            width: null,\n            height: null,\n        },\n        { // overlap line for range overlap tests\n            leftX: null,\n            bottomY: 0,\n            width: null,\n            height: 10,\n        },\n        'left side touches'\n    ], [\n        [{\n            leftX: 0,\n            bottomY: 0,\n            width: 10,\n            height: 10,\n        }, {\n            leftX: 0,\n            bottomY: 10,\n            width: 10,\n            height: 10,\n        }],\n        {\n            leftX: null,\n            bottomY: null,\n            width: null,\n            height: null,\n        },\n        { // overlap line for range overlap test\n            leftX: 0,\n            bottomY: null,\n            width: 10,\n            height: null,\n        },\n        'top touches'\n    ],\n]\n\nfunction getRangeOverlapTests(tests, axis, lengthLabel) {\n    lengthLabel = lengthLabel || 'overlapLength';\n\n    var length = axis === 'x' ? 'width' : 'height';\n    var point  = axis === 'x' ? 'leftX' : 'bottomY';\n    var rangeOverlapTests = [];\n\n    for (var i = 0; i < tests.length; i++) {\n        var test = tests[i];\n        var r1 = test[0][0];\n        var r2 = test[0][1];\n\n        if (test.length === 3) {\n            var output  = test[1];\n            var message = test[2];\n        } else { // length is 4 if line overlap is given for range overlap test\n            var output  = test[2];\n            var message = test[3];\n        }\n\n        var outputObject = {startPoint: output[point]};\n        outputObject[lengthLabel] = output[length];\n\n        rangeOverlapTest = [\n            [r1[point], r1[length], r2[point], r2[length]],\n            outputObject,\n            message\n        ];\n\n        rangeOverlapTests.push(rangeOverlapTest);\n    }\n\n    return rangeOverlapTests;\n}", "ruby": "tests = [\n    [\n        [{\n            'left_x' => 5,\n            'bottom_y' => 5,\n            'width' => 2,\n            'height' => 2,\n        }, {\n            'left_x' => 5,\n            'bottom_y' => 6,\n            'width' => 1,\n            'height' => 1,\n        }],\n        {\n            'left_x' => 5,\n            'bottom_y' => 6,\n            'width' => 1,\n            'height' => 1,\n        },\n        'R2 in corner of R1'\n    ], [\n        [{\n            'left_x' => 0,\n            'bottom_y' => 0,\n            'width' => 10,\n            'height' => 10,\n        }, {\n            'left_x' => 5,\n            'bottom_y' => 3,\n            'width' => 2,\n            'height' => 2,\n        }],\n        {\n            'left_x' => 5,\n            'bottom_y' => 3,\n            'width' => 2,\n            'height' => 2,\n        },\n        'R2 inside R1'\n    ], [\n        [{\n            'left_x' => 5,\n            'bottom_y' => 3,\n            'width' => 2,\n            'height' => 2,\n        }, {\n            'left_x' => 0,\n            'bottom_y' => 0,\n            'width' => 10,\n            'height' => 10,\n        }],\n        {\n            'left_x' => 5,\n            'bottom_y' => 3,\n            'width' => 2,\n            'height' => 2,\n        },\n        'R1 inside R2'\n    ], [\n        [{\n            'left_x' => 1,\n            'bottom_y' => 2,\n            'width' => 1,\n            'height' => 5,\n        }, {\n            'left_x' => 1,\n            'bottom_y' => 2,\n            'width' => 5,\n            'height' => 1,\n        }],\n        {\n            'left_x' => 1,\n            'bottom_y' => 2,\n            'width' => 1,\n            'height' => 1,\n        },\n        \"two 'sticks' that overlap for 1 'square'\"\n    ], [\n        [{\n            'left_x' => 0,\n            'bottom_y' => 0,\n            'width' => 10,\n            'height' => 10,\n        }, {\n            'left_x' => 1,\n            'bottom_y' => 0,\n            'width' => 1,\n            'height' => 50,\n        }],\n        {\n            'left_x' => 1,\n            'bottom_y' => 0,\n            'width' => 1,\n            'height' => 10,\n        },\n        'R2 starts inside R1 but shoots out'\n    ], [\n        [{\n            'left_x' => 0,\n            'bottom_y' => 0,\n            'width' => 10,\n            'height' => 10,\n        }, {\n            'left_x' => 20,\n            'bottom_y' => 20,\n            'width' => 10,\n            'height' => 10,\n        }],\n        {\n            'left_x' => nil,\n            'bottom_y' => nil,\n            'width' => nil,\n            'height' => nil,\n        },\n        'no overlap'\n    ], [\n        [{\n            'left_x' => 0,\n            'bottom_y' => 0,\n            'width' => 10,\n            'height' => 10,\n        }, {\n            'left_x' => 10,\n            'bottom_y' => 0,\n            'width' => 10,\n            'height' => 10,\n        }],\n        {\n            'left_x' => nil,\n            'bottom_y' => nil,\n            'width' => nil,\n            'height' => nil,\n        },\n        { # overlap line for range overlap tests\n            'left_x' => nil,\n            'bottom_y' => 0,\n            'width' => nil,\n            'height' => 10,\n        },\n        'left side touches'\n    ], [\n        [{\n            'left_x' => 0,\n            'bottom_y' => 0,\n            'width' => 10,\n            'height' => 10,\n        }, {\n            'left_x' => 0,\n            'bottom_y' => 10,\n            'width' => 10,\n            'height' => 10,\n        }],\n        {\n            'left_x' => nil,\n            'bottom_y' => nil,\n            'width' => nil,\n            'height' => nil,\n        },\n        { # overlap line for range overlap tests\n            'left_x' => 0,\n            'bottom_y' => nil,\n            'width' => 10,\n            'height' => nil,\n        },\n        'top touches'\n    ],\n]\n\ndef get_range_overlap_tests(tests, axis)\n    length = axis == 'x' ? 'width' : 'height'\n    point  = axis == 'x' ? 'left_x' : 'bottom_y'\n    range_overlap_tests = []\n    tests.each do |test|\n        r1 = test[0][0]\n        r2 = test[0][1]\n\n        if test.length == 3\n            output  = test[1]\n            message = test[2]\n        else # length is 4 if line overlap is given for range overlap test\n            output  = test[2]\n            message = test[3]\n        end\n\n        range_overlap_test = [\n            [r1[point], r1[length], r2[point], r2[length]],\n            [output[point], output[length]],\n            message\n        ]\n\n        range_overlap_tests.push(range_overlap_test)\n    end\n\n    return range_overlap_tests\nend", "python": "tests = [\n    [\n        [{\n            'left_x': 5,\n            'bottom_y': 5,\n            'width': 2,\n            'height': 2,\n        }, {\n            'left_x': 5,\n            'bottom_y': 6,\n            'width': 1,\n            'height': 1,\n        }],\n        {\n            'left_x': 5,\n            'bottom_y': 6,\n            'width': 1,\n            'height': 1,\n        },\n        'R2 in corner of R1'\n    ], [\n        [{\n            'left_x': 0,\n            'bottom_y': 0,\n            'width': 10,\n            'height': 10,\n        }, {\n            'left_x': 5,\n            'bottom_y': 3,\n            'width': 2,\n            'height': 2,\n        }],\n        {\n            'left_x': 5,\n            'bottom_y': 3,\n            'width': 2,\n            'height': 2,\n        },\n        'R2 inside R1'\n    ], [\n        [{\n            'left_x': 5,\n            'bottom_y': 3,\n            'width': 2,\n            'height': 2,\n        }, {\n            'left_x': 0,\n            'bottom_y': 0,\n            'width': 10,\n            'height': 10,\n        }],\n        {\n            'left_x': 5,\n            'bottom_y': 3,\n            'width': 2,\n            'height': 2,\n        },\n        'R1 inside R2'\n    ], [\n        [{\n            'left_x': 1,\n            'bottom_y': 2,\n            'width': 1,\n            'height': 5,\n        }, {\n            'left_x': 1,\n            'bottom_y': 2,\n            'width': 5,\n            'height': 1,\n        }],\n        {\n            'left_x': 1,\n            'bottom_y': 2,\n            'width': 1,\n            'height': 1,\n        },\n        \"two 'sticks' that overlap for 1 'square'\"\n    ], [\n        [{\n            'left_x': 0,\n            'bottom_y': 0,\n            'width': 10,\n            'height': 10,\n        }, {\n            'left_x': 1,\n            'bottom_y': 0,\n            'width': 1,\n            'height': 50,\n        }],\n        {\n            'left_x': 1,\n            'bottom_y': 0,\n            'width': 1,\n            'height': 10,\n        },\n        'R2 starts inside R1 but shoots out'\n    ], [\n        [{\n            'left_x': 0,\n            'bottom_y': 0,\n            'width': 10,\n            'height': 10,\n        }, {\n            'left_x': 20,\n            'bottom_y': 20,\n            'width': 10,\n            'height': 10,\n        }],\n        {\n            'left_x': None,\n            'bottom_y': None,\n            'width': None,\n            'height': None,\n        },\n        'no overlap'\n    ], [\n        [{\n            'left_x': 0,\n            'bottom_y': 0,\n            'width': 10,\n            'height': 10,\n        }, {\n            'left_x': 10,\n            'bottom_y': 0,\n            'width': 10,\n            'height': 10,\n        }],\n        {\n            'left_x': None,\n            'bottom_y': None,\n            'width': None,\n            'height': None,\n        },\n        { # overlap line for range overlap tests\n            'left_x': None,\n            'bottom_y': 0,\n            'width': None,\n            'height': 10,\n        },\n        'left side touches'\n    ], [\n        [{\n            'left_x': 0,\n            'bottom_y': 0,\n            'width': 10,\n            'height': 10,\n        }, {\n            'left_x': 0,\n            'bottom_y': 10,\n            'width': 10,\n            'height': 10,\n        }],\n        {\n            'left_x': None,\n            'bottom_y': None,\n            'width': None,\n            'height': None,\n        },\n        { # overlap line for range overlap tests\n            'left_x': 0,\n            'bottom_y': None,\n            'width': 10,\n            'height': None,\n        },\n        'top touches'\n    ],\n]\n\ndef get_range_overlap_tests(tests, axis):\n    length = 'width' if axis == 'x' else 'height'\n    point  = 'left_x' if axis == 'x' else 'bottom_y'\n    range_overlap_tests = []\n    for test in tests:\n        r1 = test[0][0]\n        r2 = test[0][1]\n\n        if len(test) == 3:\n            output  = test[1]\n            message = test[2]\n        else: # length is 4 if line overlap is given for range overlap test\n            output  = test[2]\n            message = test[3]\n\n        range_overlap_test = [\n            [r1[point], r1[length], r2[point], r2[length]],\n            (output[point], output[length]),\n            message\n        ]\n\n        range_overlap_tests.append(range_overlap_test)\n\n    return range_overlap_tests"}, "question__rectangular-love__solution": {"javascript": {"code": "function findRangeOverlap(point1, length1, point2, length2) {\n\n    // find the highest start point and lowest end point.\n    // the highest (\"rightmost\" or \"upmost\") start point is\n    // the start point of the overlap.\n    // the lowest end point is the end point of the overlap.\n    var highestStartPoint = Math.max(point1, point2);\n    var lowestEndPoint = Math.min(point1 + length1, point2 + length2);\n\n    // return null overlap if there is no overlap\n    if (highestStartPoint >= lowestEndPoint) {\n        return {startPoint: null, overlapLength: null};\n    }\n\n    // compute the overlap length\n    var overlapLength = lowestEndPoint - highestStartPoint;\n\n    return {startPoint: highestStartPoint, overlapLength: overlapLength};\n}\n\nfunction findRectangularOverlap(rect1, rect2) {\n\n    // get the x and y overlap points and lengths\n    var xOverlap = findRangeOverlap(rect1.leftX, rect1.width, rect2.leftX, rect2.width);\n    var yOverlap = findRangeOverlap(rect1.bottomY, rect1.height, rect2.bottomY, rect2.height);\n\n    // return null rectangle if there is no overlap\n    if (!xOverlap.overlapLength || !yOverlap.overlapLength) {\n        return {\n            leftX: null,\n            bottomY: null,\n            width: null,\n            height: null,\n        };\n    }\n\n    return {\n        leftX: xOverlap.startPoint,\n        bottomY: yOverlap.startPoint,\n        width: xOverlap.overlapLength,\n        height: yOverlap.overlapLength,\n    };\n}", "tests": "testInputAndOutputLists(findRectangularOverlap, tests, true);"}, "python": {"code": "def find_range_overlap(point1, length1, point2, length2):\n\n    # find the highest start point and lowest end point.\n    # the highest (\"rightmost\" or \"upmost\") start point is\n    # the start point of the overlap.\n    # the lowest end point is the end point of the overlap.\n    highest_start_point = max(point1, point2)\n    lowest_end_point = min(point1 + length1, point2 + length2)\n\n    # return null overlap if there is no overlap\n    if highest_start_point >= lowest_end_point:\n        return (None, None)\n\n    # compute the overlap length\n    overlap_length = lowest_end_point - highest_start_point\n\n    return (highest_start_point, overlap_length)\n\ndef find_rectangular_overlap(rect1, rect2):\n\n    # get the x and y overlap points and lengths\n    x_overlap_point, overlap_width  = find_range_overlap(\\\n        rect1['left_x'], rect1['width'],  rect2['left_x'], rect2['width'])\n    y_overlap_point, overlap_height = find_range_overlap(\\\n        rect1['bottom_y'], rect1['height'], rect2['bottom_y'], rect2['height'])\n\n    # return null rectangle if there is no overlap\n    if not overlap_width or not overlap_height:\n        return {\n            'left_x': None,\n            'bottom_y': None,\n            'width': None,\n            'height': None,\n        }\n\n    return {\n        'left_x': x_overlap_point,\n        'bottom_y': y_overlap_point,\n        'width': overlap_width,\n        'height': overlap_height,\n    }", "tests": "testInputAndOutputLists(find_rectangular_overlap, tests, True)"}, "ruby": {"code": "def find_range_overlap(point1, length1, point2, length2)\n\n    # find the highest start point and lowest end point.\n    # the highest (\"rightmost\" or \"upmost\") start point is\n    # the start point of the overlap.\n    # the lowest end point is the end point of the overlap.\n    highest_start_point = [point1, point2].max\n    lowest_end_point = [point1 + length1, point2 + length2].min\n\n    # return nil overlap if there is no overlap\n    if highest_start_point >= lowest_end_point\n        return [nil, nil]\n    end\n\n    # compute the overlap length\n    overlap_length = lowest_end_point - highest_start_point\n\n    return [highest_start_point, overlap_length]\nend\n\ndef find_rectangular_overlap(rect1, rect2)\n\n    # get the x and y overlap points and lengths\n    x_overlap_point, overlap_width  = find_range_overlap(\\\n        rect1['left_x'], rect1['width'],  rect2['left_x'], rect2['width'])\n    y_overlap_point, overlap_height = find_range_overlap(\\\n        rect1['bottom_y'], rect1['height'], rect2['bottom_y'], rect2['height'])\n\n    # return nil rectangle if there is no overlap\n    if !overlap_width || !overlap_height\n        return {\n            'left_x' => nil,\n            'bottom_y' => nil,\n            'width' => nil,\n            'height' => nil,\n        }\n    end\n\n    return {\n        'left_x' => x_overlap_point,\n        'bottom_y' => y_overlap_point,\n        'width' => overlap_width,\n        'height' => overlap_height,\n    }\nend", "tests": "testInputAndOutputLists(method(:find_rectangular_overlap), tests, true)"}, "c": {"setup": "typedef struct {\n    int leftX;\n    int bottomY;\n    int width;\n    int height;\n} Rectangle;", "code": "#define MAX(a, b) (((a) > (b)) ? (a) : (b))\n#define MIN(a, b) (((a) &lt; (b)) ? (a) : (b))\n\ntypedef struct {\n    int startPoint;\n    int length;\n} RangeOverlap;\n\nRangeOverlap findRangeOverlap(int point1, int length1, int point2, int length2)\n{\n    int highestStartPoint, lowestEndPoint;\n    RangeOverlap rangeOverlap = {0, 0};\n\n    // find the highest start point and lowest end point.\n    // the highest (\"rightmost\" or \"upmost\") start point is\n    // the start point of the overlap.\n    // the lowest end point is the end point of the overlap.\n    highestStartPoint = MAX(point1, point2);\n    lowestEndPoint = MIN(point1 + length1, point2 + length2);\n\n    // return null overlap if there is no overlap\n    if (highestStartPoint >= lowestEndPoint) {\n        return rangeOverlap;\n    }\n\n    // compute the overlap length\n    int overlapLength = lowestEndPoint - highestStartPoint;\n    rangeOverlap.startPoint = highestStartPoint;\n    rangeOverlap.length = overlapLength;\n\n    return rangeOverlap;\n}\n\nRectangle findRectangularOverlap(Rectangle rect1, Rectangle rect2)\n{\n    RangeOverlap xOverlap, yOverlap;\n    Rectangle rectangle = {0, 0, 0, 0};\n\n    // get the x and y overlap points and lengths\n    xOverlap = findRangeOverlap(rect1.leftX, rect1.width, rect2.leftX, rect2.width);\n    yOverlap = findRangeOverlap(rect1.bottomY, rect1.height, rect2.bottomY, rect2.height);\n\n    // return null rectangle if there is no overlap\n    if (xOverlap.length == 0 || yOverlap.length == 0) {\n        return rectangle;\n    }\n\n    rectangle.leftX = xOverlap.startPoint;\n    rectangle.bottomY = yOverlap.startPoint;\n    rectangle.width = xOverlap.length;\n    rectangle.height = yOverlap.length;\n\n    return rectangle;\n}", "tests": "{\n    const Rectangle tests[8][3] = {\n        { /* R2 in corner of R1 */\n            {5, 5, 2, 2}, {5, 6, 1, 1}, {5, 6, 1, 1}\n        },\n        { /* R2 inside R1 */\n            {0, 0, 10, 10}, {5, 3, 2, 2}, {5, 3, 2, 2}\n        },\n        { /* R1 inside R2 */\n            {5, 3, 2, 2}, {0, 0, 10, 10}, {5, 3, 2, 2}\n        },\n        { /* two 'sticks' that overlap for 1 'square' */\n            {1, 2, 1, 5}, {1, 2, 5, 1}, {1, 2, 1, 1}\n        },\n        { /* R2 starts inside R1 but shoots out */\n            {0, 0, 10, 10}, {1, 0, 1, 50}, {1, 0, 1, 10}\n        },\n        { /* no overlap */\n            {0, 0, 10, 10}, {20, 20, 10, 10}, {0, 0, 0, 0}\n        },\n        { /* left side touches */\n            {0, 0, 10, 10}, {10, 0, 10, 10}, {0, 0, 0, 0}\n        },\n        { /* top touches */\n            {0, 0, 10, 10}, {0, 10, 10, 10}, {0, 0, 0, 0}\n        }\n    };\n\n    size_t i;\n    char msg[256];\n\n    for (i = 0; i < 8; i++) {\n        Rectangle rectangle = findRectangularOverlap(tests[i][0], tests[i][1]);\n        snprintf(msg, sizeof(msg), \"'rectangle = tests[%lu][2]'\", i);\n        ASSERT_EQUAL(&rectangle, &tests[i][2], sizeof(Rectangle), msg);\n    }\n}"}, "java": {"setup": "public class Rectangle {\n\n    // coordinates of bottom left corner\n    Integer leftX;\n    Integer bottomY;\n\n    // dimensions\n    Integer width;\n    Integer height;\n\n    public Rectangle(Integer leftX, Integer bottomY, Integer width, Integer height) {\n        this.leftX = leftX;\n        this.bottomY = bottomY;\n        this.width  = width;\n        this.height = height;\n    }\n\n    public Rectangle() {}\n\n    public String toString() {\n        return String.format(\"(%d, %d, %d, %d)\", leftX, bottomY, width, height);\n    }\n}", "code": "public class RangeOverlap {\n\n    Integer startPoint;\n    Integer length;\n\n    public RangeOverlap(Integer startPoint, Integer length) {\n        this.startPoint = startPoint;\n        this.length = length;\n    }\n}\n\npublic RangeOverlap findRangeOverlap(int point1, int length1, int point2, int length2) {\n\n    // find the highest start point and lowest end point.\n    // the highest (\"rightmost\" or \"upmost\") start point is\n    // the start point of the overlap.\n    // the lowest end point is the end point of the overlap.\n    int highestStartPoint = Math.max(point1, point2);\n    int lowestEndPoint = Math.min(point1 + length1, point2 + length2);\n\n    // return null overlap if there is no overlap\n    if (highestStartPoint >= lowestEndPoint) {\n        return new RangeOverlap(null, null);\n    }\n\n    // compute the overlap length\n    int overlapLength = lowestEndPoint - highestStartPoint;\n\n    return new RangeOverlap(highestStartPoint, overlapLength);\n}\n\npublic Rectangle findRectangularOverlap(Rectangle rect1, Rectangle rect2) {\n\n    // get the x and y overlap points and lengths\n    RangeOverlap xOverlap = findRangeOverlap(rect1.leftX, rect1.width, rect2.leftX, rect2.width);\n    RangeOverlap yOverlap = findRangeOverlap(rect1.bottomY, rect1.height, rect2.bottomY, rect2.height);\n\n    // return null rectangle if there is no overlap\n    if (xOverlap.length == null || yOverlap.length == null) {\n        return new Rectangle();\n    }\n\n    return new Rectangle(\n        xOverlap.startPoint,\n        yOverlap.startPoint,\n        xOverlap.length,\n        yOverlap.length\n    );\n}", "tests": "Rectangle[][] tests = new Rectangle[][]{\n    { /* R2 in corner of R1 */\n        t.new Rectangle(5, 5, 2, 2),\n        t.new Rectangle(5, 6, 1, 1),\n        t.new Rectangle(5, 6, 1, 1),\n    }, { /* R2 inside R1 */\n        t.new Rectangle(0, 0, 10, 10),\n        t.new Rectangle(5, 3, 2, 2),\n        t.new Rectangle(5, 3, 2, 2),\n    }, { /* R1 inside R2 */\n        t.new Rectangle(5, 3, 2, 2),\n        t.new Rectangle(0, 0, 10, 10),\n        t.new Rectangle(5, 3, 2, 2),\n    }, { /* two 'sticks' that overlap for 1 'square' */\n        t.new Rectangle(1, 2, 1, 5),\n        t.new Rectangle(1, 2, 5, 1),\n        t.new Rectangle(1, 2, 1, 1),\n    }, { /* R2 starts inside R1 but shoots out */\n        t.new Rectangle(0, 0, 10, 10),\n        t.new Rectangle(1, 0, 1, 50),\n        t.new Rectangle(1, 0, 1, 10),\n    }, { /* no overlap */\n        t.new Rectangle(0, 0, 10, 10),\n        t.new Rectangle(20, 20, 10, 10),\n        t.new Rectangle(null, null, null, null),\n    }, { /* left side touches */\n        t.new Rectangle(0, 0, 10, 10),\n        t.new Rectangle(10, 0, 10, 10),\n        t.new Rectangle(null, null, null, null),\n    }, { /* top touches */\n        t.new Rectangle(0, 0, 10, 10),\n        t.new Rectangle(0, 10, 10, 10),\n        t.new Rectangle(null, null, null, null),\n    },\n};\n\nfor (Rectangle[] test : tests) {\n    assertEqual(t.findRectangularOverlap(test[0], test[1]).toString(), test[2].toString());\n}"}, "swift": {"setup": "struct Rectangle {\n    \n    // coordinates of bottom left corner\n    let leftX: Int\n    let bottomY: Int\n    \n    // dimensions\n    let width: Int\n    let height: Int\n    \n    init(leftX: Int, bottomY: Int, width: Int, height: Int) {\n        self.leftX = leftX\n        self.bottomY = bottomY\n        self.width = width\n        self.height = height\n    }\n    \n    init() {\n        self.init(leftX: 0, bottomY: 0, width: 0, height: 0)\n    }\n    \n    func toString() -> String {\n        return String(format: \"(%d, %d, %d, %d)\", leftX, bottomY, width, height)\n    }\n}", "code": "struct RangeOverlap {\n\n    let startPoint: Int\n    let length: Int\n}\n\nfunc findRangeOverlap(point1: Int, length1: Int,\n                      point2: Int, length2: Int) -> RangeOverlap {\n\n    // find the highest start point and lowest end point.\n    // the highest (\"rightmost\" or \"upmost\") start point is\n    // the start point of the overlap.\n    // the lowest end point is the end point of the overlap.\n    let highestStartPoint = max(point1, point2)\n    let lowestEndPoint = min(point1 + length1, point2 + length2)\n\n    // return null overlap if there is no overlap\n    if highestStartPoint >= lowestEndPoint {\n        return RangeOverlap(startPoint: 0, length: 0)\n    }\n\n    // compute the overlap length\n    let overlapLength = lowestEndPoint - highestStartPoint\n\n    return RangeOverlap(startPoint:highestStartPoint, length:overlapLength)\n}\n\nfunc findRectangularOverlap(rect1:Rectangle, rect2:Rectangle) -> Rectangle {\n\n    // get the x and y overlap points and lengths\n    let xOverlap = findRangeOverlap(point1: rect1.leftX, length1: rect1.width,\n                                    point2: rect2.leftX, length2: rect2.width)\n    let yOverlap = findRangeOverlap(point1: rect1.bottomY, length1: rect1.height,\n                                    point2: rect2.bottomY, length2: rect2.height)\n\n    // return null rectangle if there is no overlap\n    if xOverlap.length == 0 || yOverlap.length == 0 {\n        return Rectangle()\n    }\n\n    return Rectangle(leftX: xOverlap.startPoint, bottomY: yOverlap.startPoint,\n                     width: xOverlap.length, height: yOverlap.length)\n}", "tests": "let tests = [\n    /* R2 in corner of R1 */\n    [\n        Rectangle(leftX: 5, bottomY: 5, width: 2, height: 2),\n        Rectangle(leftX: 5, bottomY: 6, width: 1, height: 1),\n        Rectangle(leftX: 5, bottomY: 6, width: 1, height: 1)\n    ],\n    /* R2 inside R1 */\n    [\n        Rectangle(leftX: 0, bottomY: 0, width: 10, height: 10),\n        Rectangle(leftX: 5, bottomY: 3, width: 2, height: 2),\n        Rectangle(leftX: 5, bottomY: 3, width: 2, height: 2)\n    ],\n    /* R1 inside R2 */\n    [\n        Rectangle(leftX: 5, bottomY: 3, width: 2, height: 2),\n        Rectangle(leftX: 0, bottomY: 0, width: 10, height: 10),\n        Rectangle(leftX: 5, bottomY: 3, width: 2, height: 2)\n    ],\n    /* two 'sticks' that overlap for 1 'square' */\n    [\n        Rectangle(leftX: 1, bottomY: 2, width: 1, height: 5),\n        Rectangle(leftX: 1, bottomY: 2, width: 5, height: 1),\n        Rectangle(leftX: 1, bottomY: 2, width: 1, height: 1)\n    ],\n    /* R2 starts inside R1 but shoots out */\n    [\n        Rectangle(leftX: 0, bottomY: 0, width: 10, height: 10),\n        Rectangle(leftX: 1, bottomY: 0, width: 1, height: 50),\n        Rectangle(leftX: 1, bottomY: 0, width: 1, height: 10)\n    ],\n    /* no overlap */\n    [\n        Rectangle(leftX: 0, bottomY: 0, width: 10, height: 10),\n        Rectangle(leftX: 20, bottomY: 20, width: 10, height: 10),\n        Rectangle(leftX: 0, bottomY: 0, width: 0, height: 0)\n    ],\n    /* left side touches */\n    [\n        Rectangle(leftX: 0, bottomY: 0, width: 10, height: 10),\n        Rectangle(leftX: 10, bottomY: 0, width: 10, height: 10),\n        Rectangle(leftX: 0, bottomY: 0, width: 0, height: 0)\n    ],\n    /* top touches */\n    [\n        Rectangle(leftX: 0, bottomY: 0, width: 10, height: 10),\n        Rectangle(leftX: 0, bottomY: 10, width: 10, height: 10),\n        Rectangle(leftX: 0, bottomY: 0, width: 0, height: 0)\n    ],\n]\nfor test in tests {\n    try assertTrue(findRectangularOverlap(rect1: test[0], rect2: test[1]).toString() == test[2].toString())\n}"}, "cpp": {"setup": "class Rectangle\n{\nprivate:\n    // coordinates of bottom left corner\n    int leftX_;\n    int bottomY_;\n\n    // dimensions\n    int width_;\n    int height_;\n\npublic:\n    Rectangle() :\n        leftX_(0),\n        bottomY_(0),\n        width_(0),\n        height_(0)\n    {\n    }\n\n    Rectangle(int leftX, int bottomY, int width, int height) :\n        leftX_(leftX),\n        bottomY_(bottomY),\n        width_(width),\n        height_(height)\n    {\n    }\n\n    int getLeftX() const\n    {\n        return  leftX_;\n    }\n\n    int getBottomY() const\n    {\n        return  bottomY_;\n    }\n\n    int getWidth() const\n    {\n        return  width_;\n    }\n\n    int getHeight() const\n    {\n        return  height_;\n    }\n\n    bool operator==(const Rectangle& other) const\n    {\n        return\n            leftX_ == other.leftX_\n            && bottomY_ == other.bottomY_\n            && width_ == other.width_\n            && height_ == other.height_;\n    }\n\n    bool operator!=(const Rectangle& other) const\n    {\n        return !(*this == other);\n    }\n};", "code": "class RangeOverlap\n{\nprivate:\n    int startPoint_;\n    int length_;\n\npublic:\n    RangeOverlap() :\n        startPoint_(0),\n        length_(0)\n    {\n    }\n\n    RangeOverlap(int startPoint, int width) :\n        startPoint_(startPoint),\n        length_(width)\n    {\n    }\n\n    int getStartPoint() const\n    {\n        return startPoint_;\n    }\n\n    int getLength() const\n    {\n        return length_;\n    }\n\n    bool overlapExists() const\n    {\n        return length_ > 0;\n    }\n\n    bool operator==(const RangeOverlap& other) const\n    {\n        return\n            startPoint_ == other.startPoint_\n            && length_ == other.length_;\n    }\n\n    bool operator!=(const RangeOverlap& other) const\n    {\n        return !(*this == other);\n    }\n};\n\nRangeOverlap findRangeOverlap(int point1, int length1, int point2, int length2)\n{\n    // find the highest start point and lowest end point.\n    // the highest (\"rightmost\" or \"upmost\") start point is\n    // the start point of the overlap.\n    // the lowest end point is the end point of the overlap.\n    int highestStartPoint = max(point1, point2);\n    int lowestEndPoint = min(point1 + length1, point2 + length2);\n\n    // return null overlap if there is no overlap\n    if (highestStartPoint >= lowestEndPoint) {\n        return RangeOverlap();\n    }\n\n    // compute the overlap length\n    int overlapLength = lowestEndPoint - highestStartPoint;\n\n    return RangeOverlap(highestStartPoint, overlapLength);\n}\n\nRectangle findRectangularOverlap(\n        const Rectangle& rect1,\n        const Rectangle& rect2)\n{\n\n    // get the x overlap points and lengths\n    RangeOverlap xOverlap = findRangeOverlap(\n            rect1.getLeftX(), rect1.getWidth(),\n            rect2.getLeftX(), rect2.getWidth());\n\n    // get the y overlap points and lengths\n    RangeOverlap yOverlap = findRangeOverlap(\n            rect1.getBottomY(), rect1.getHeight(),\n            rect2.getBottomY(), rect2.getHeight());\n\n    // return \"default\" rectangle if there is no overlap\n    if (!xOverlap.overlapExists() || !yOverlap.overlapExists()) {\n        return Rectangle();\n    }\n\n    return Rectangle(\n        xOverlap.getStartPoint(),\n        yOverlap.getStartPoint(),\n        xOverlap.getLength(),\n        yOverlap.getLength()\n    );\n}", "tests": "const Rectangle tests[][3]{\n    { /* R2 in corner of R1 */\n        Rectangle(5, 5, 2, 2),\n        Rectangle(5, 6, 1, 1),\n        Rectangle(5, 6, 1, 1),\n    }, { /* R2 inside R1 */\n        Rectangle(0, 0, 10, 10),\n        Rectangle(5, 3, 2, 2),\n        Rectangle(5, 3, 2, 2),\n    }, { /* R1 inside R2 */\n        Rectangle(5, 3, 2, 2),\n        Rectangle(0, 0, 10, 10),\n        Rectangle(5, 3, 2, 2),\n    }, { /* two 'sticks' that overlap for 1 'square' */\n        Rectangle(1, 2, 1, 5),\n        Rectangle(1, 2, 5, 1),\n        Rectangle(1, 2, 1, 1),\n    }, { /* R2 starts inside R1 but shoots out */\n        Rectangle(0, 0, 10, 10),\n        Rectangle(1, 0, 1, 50),\n        Rectangle(1, 0, 1, 10),\n    }, { /* no overlap */\n        Rectangle(0, 0, 10, 10),\n        Rectangle(20, 20, 10, 10),\n        Rectangle(),\n    }, { /* left side touches */\n        Rectangle(0, 0, 10, 10),\n        Rectangle(10, 0, 10, 10),\n        Rectangle(),\n    }, { /* top touches */\n        Rectangle(0, 0, 10, 10),\n        Rectangle(0, 10, 10, 10),\n        Rectangle(),\n    },\n};\n\nfor (size_t i = 0, n = sizeof(tests)/sizeof(tests[0]); i < n; ++i) {\n    assertEqual(findRectangularOverlap(tests[i][0], tests[i][1]), tests[i][2]);\n}"}, "csharp": {"setup": "public class Rectangle\n{\n    // Coordinates of bottom left corner\n    public int LeftX { get; set; }\n    public int BottomY { get; set; }\n\n    // Dimensions\n    public int Width { get; set; }\n    public int Height { get; set; }\n\n    public Rectangle() {}\n\n    public Rectangle(int leftX, int bottomY, int width, int height)\n    {\n        LeftX = leftX;\n        BottomY = bottomY;\n        Width = width;\n        Height = height;\n    }\n\n    public override bool Equals(System.Object obj)\n    {\n        if (ReferenceEquals(this, obj))\n        {\n            return true;\n        }\n\n        if (obj == null)\n        {\n            return false;\n        }\n\n        Rectangle other = obj as Rectangle;\n        if (other == null)\n        {\n            return false;\n        }\n\n        return\n            LeftX == other.LeftX && BottomY == other.BottomY\n            && Width == other.Width && Height == other.Height;\n    }\n\n    public override int GetHashCode()\n    {\n        return LeftX ^ BottomY ^ Width ^ Height;\n    }\n}", "code": "public class RangeOverlap\n{\n    public readonly int StartPoint;\n    public readonly int Length;\n\n    public RangeOverlap() {}\n\n    public RangeOverlap(int highestStartPoint, int overlapLength)\n    {\n        StartPoint = highestStartPoint;\n        Length = overlapLength;\n    }\n}\n\npublic RangeOverlap FindRangeOverlap(int point1, int length1, int point2, int length2)\n{\n    // Find the highest start point and lowest end point.\n    // The highest (\"rightmost\" or \"upmost\") start point is\n    // the start point of the overlap.\n    // The lowest end point is the end point of the overlap.\n    int highestStartPoint = Math.Max(point1, point2);\n    int lowestEndPoint = Math.Min(point1 + length1, point2 + length2);\n\n    // Return empty overlap if there is no overlap\n    if (highestStartPoint >= lowestEndPoint)\n    {\n        return new RangeOverlap();\n    }\n\n    // Compute the overlap length\n    int overlapLength = lowestEndPoint - highestStartPoint;\n\n    return new RangeOverlap(highestStartPoint, overlapLength);\n}\n\npublic Rectangle FindRectangularOverlap(Rectangle rect1, Rectangle rect2)\n{\n    // Get the x and y overlap points and lengths\n    RangeOverlap xOverlap = FindRangeOverlap(rect1.LeftX, rect1.Width, rect2.LeftX, rect2.Width);\n    RangeOverlap yOverlap = FindRangeOverlap(rect1.BottomY, rect1.Height, rect2.BottomY, rect2.Height);\n\n    // Return null rectangle if there is no overlap\n    if (xOverlap.Length == 0 || yOverlap.Length == 0)\n    {\n        return new Rectangle();\n    }\n\n    return new Rectangle(\n        xOverlap.StartPoint,\n        yOverlap.StartPoint,\n        xOverlap.Length,\n        yOverlap.Length\n    );\n}", "tests": "Rectangle[][] tests = new Rectangle[][]\n{\n    new[] // R2 in corner of R1\n    {\n        new Rectangle(5, 5, 2, 2),\n        new Rectangle(5, 6, 1, 1),\n        new Rectangle(5, 6, 1, 1),\n    },\n    new[] // R2 inside R1\n    {\n        new Rectangle(0, 0, 10, 10),\n        new Rectangle(5, 3, 2, 2),\n        new Rectangle(5, 3, 2, 2),\n    },\n    new[] // R1 inside R2\n    {\n        new Rectangle(5, 3, 2, 2),\n        new Rectangle(0, 0, 10, 10),\n        new Rectangle(5, 3, 2, 2),\n    },\n    new[] // Two 'sticks' that overlap for 1 'square'\n    {\n        new Rectangle(1, 2, 1, 5),\n        new Rectangle(1, 2, 5, 1),\n        new Rectangle(1, 2, 1, 1),\n    },\n    new[] // R2 starts inside R1 but shoots out\n    {\n        new Rectangle(0, 0, 10, 10),\n        new Rectangle(1, 0, 1, 50),\n        new Rectangle(1, 0, 1, 10),\n    },\n    new[] // No overlap\n    {\n        new Rectangle(0, 0, 10, 10),\n        new Rectangle(20, 20, 10, 10),\n        new Rectangle(),\n    },\n    new[] // Left side touches\n    {\n        new Rectangle(0, 0, 10, 10),\n        new Rectangle(10, 0, 10, 10),\n        new Rectangle(),\n    },\n    new[] // Top touches\n    {\n        new Rectangle(0, 0, 10, 10),\n        new Rectangle(0, 10, 10, 10),\n        new Rectangle(),\n    },\n};\n\nforeach (Rectangle[] test in tests)\n{\n    AssertEqual(FindRectangularOverlap(test[0], test[1]), test[2]);\n}"}}, "question__rectangular-love__find-range-overlap": {"javascript": {"code": "function findRangeOverlap(point1, length1, point2, length2) {\n\n    // find the highest start point and lowest end point.\n    // the highest (\"rightmost\" or \"upmost\") start point is\n    // the start point of the overlap.\n    // the lowest end point is the end point of the overlap.\n    var highestStartPoint = Math.max(point1, point2);\n    var lowestEndPoint = Math.min(point1 + length1, point2 + length2);\n\n    // return null overlap if there is no overlap\n    if (highestStartPoint >= lowestEndPoint) {\n        return {startPoint: null, overlapLength: null};\n    }\n\n    // compute the overlap length\n    var overlapLength = lowestEndPoint - highestStartPoint;\n\n    return {startPoint: highestStartPoint, overlapLength: overlapLength};\n}", "tests": "testInputAndOutputLists(findRangeOverlap, getRangeOverlapTests(tests, 'x'), true);\ntestInputAndOutputLists(findRangeOverlap, getRangeOverlapTests(tests, 'y'), true);"}, "python": {"code": "def find_range_overlap(point1, length1, point2, length2):\n\n    # find the highest start point and lowest end point.\n    # the highest (\"rightmost\" or \"upmost\") start point is\n    # the start point of the overlap.\n    # the lowest end point is the end point of the overlap.\n    highest_start_point = max(point1, point2)\n    lowest_end_point = min(point1 + length1, point2 + length2)\n\n    # return null overlap if there is no overlap\n    if highest_start_point >= lowest_end_point:\n        return (None, None)\n\n    # compute the overlap length\n    overlap_length = lowest_end_point - highest_start_point\n\n    return (highest_start_point, overlap_length)", "tests": "testInputAndOutputLists(find_range_overlap, get_range_overlap_tests(tests, 'x'), True)\ntestInputAndOutputLists(find_range_overlap, get_range_overlap_tests(tests, 'y'), True)"}, "ruby": {"code": "def find_range_overlap(point1, length1, point2, length2)\n\n    # find the highest start point and lowest end point.\n    # the highest (\"rightmost\" or \"upmost\") start point is\n    # the start point of the overlap.\n    # the lowest end point is the end point of the overlap.\n    highest_start_point = [point1, point2].max\n    lowest_end_point = [point1 + length1, point2 + length2].min\n\n    # return nil overlap if there is no overlap\n    if highest_start_point >= lowest_end_point\n        return [nil, nil]\n    end\n\n    # compute the overlap length\n    overlap_length = lowest_end_point - highest_start_point\n\n    return [highest_start_point, overlap_length]\nend", "tests": "testInputAndOutputLists(method(:find_range_overlap), get_range_overlap_tests(tests, 'x'), true)\ntestInputAndOutputLists(method(:find_range_overlap), get_range_overlap_tests(tests, 'y'), true)"}, "c": {"code": "#define MAX(a, b) (((a) > (b)) ? (a) : (b))\n#define MIN(a, b) (((a) &lt; (b)) ? (a) : (b))\n\ntypedef struct {\n    int startPoint;\n    int length;\n} RangeOverlap;\n\nRangeOverlap findRangeOverlap(int point1, int length1, int point2, int length2)\n{\n    int highestStartPoint, lowestEndPoint;\n    RangeOverlap rangeOverlap = {0, 0};\n\n    // find the highest start point and lowest end point.\n    // the highest (\"rightmost\" or \"upmost\") start point is\n    // the start point of the overlap.\n    // the lowest end point is the end point of the overlap.\n    highestStartPoint = MAX(point1, point2);\n    lowestEndPoint = MIN(point1 + length1, point2 + length2);\n\n    // return null overlap if there is no overlap\n    if (highestStartPoint >= lowestEndPoint) {\n        return rangeOverlap;\n    }\n\n    // compute the overlap length\n    int overlapLength = lowestEndPoint - highestStartPoint;\n    rangeOverlap.startPoint = highestStartPoint;\n    rangeOverlap.length = overlapLength;\n\n    return rangeOverlap;\n}", "tests": "{\n    const int xInputs[8][4] = {\n        {5, 2, 5, 1},\n        {0, 10, 5, 2},\n        {0, 10, 5, 2},\n        {1, 1, 1, 5},\n        {0, 10, 1, 1},\n        {0, 10, 20, 10},\n        {0, 10, 10, 10},\n        {0, 10, 0, 10}\n    };\n\n    const RangeOverlap xExpectedOutputs[8] = {\n        {5, 1},\n        {5, 2},\n        {5, 2},\n        {1, 1},\n        {1, 1},\n        {0, 0},\n        {0, 0},\n        {0, 10}\n    };\n\n    const int yInputs[8][4] = {\n        {5, 2, 6, 1},\n        {0, 10, 3, 2},\n        {0, 10, 3, 2},\n        {2, 5, 2, 1},\n        {0, 10, 0, 50},\n        {0, 10, 20, 10},\n        {0, 10, 0, 10},\n        {0, 10, 10, 10},\n    };\n\n    const RangeOverlap yExpectedOutputs[8] = {\n        {6, 1},\n        {3, 2},\n        {3, 2},\n        {2, 1},\n        {0, 10},\n        {0, 0},\n        {0, 10},\n        {0, 0}\n    };\n\n    size_t i;\n    RangeOverlap actualOutput;\n    char msg[256];\n\n    for (i = 0; i < 8; i++) {\n        actualOutput = findRangeOverlap(xInputs[i][0], xInputs[i][1],\n                                        xInputs[i][2], xInputs[i][3]);\n        snprintf(msg, sizeof(msg), \"'actualOutput = xExpectedOutputs[%lu]'\", i);\n        ASSERT_EQUAL(&actualOutput, &xExpectedOutputs[i],\n                     sizeof(RangeOverlap), msg);\n\n        actualOutput = findRangeOverlap(yInputs[i][0], yInputs[i][1],\n                                        yInputs[i][2], yInputs[i][3]);\n        snprintf(msg, sizeof(msg), \"'actualOutput = yExpectedOutputs[%lu]'\", i);\n        ASSERT_EQUAL(&actualOutput, &yExpectedOutputs[i],\n                     sizeof(RangeOverlap), msg);\n    }\n}"}, "java": {"code": "public class RangeOverlap {\n\n    Integer startPoint;\n    Integer length;\n\n    public RangeOverlap(Integer highestStartPoint, Integer overlapLength) {\n        this.startPoint = highestStartPoint;\n        this.length = overlapLength;\n    }\n}\n\npublic RangeOverlap findRangeOverlap(int point1, int length1, int point2, int length2) {\n\n    // find the highest start point and lowest end point.\n    // the highest (\"rightmost\" or \"upmost\") start point is\n    // the start point of the overlap.\n    // the lowest end point is the end point of the overlap.\n    int highestStartPoint = Math.max(point1, point2);\n    int lowestEndPoint = Math.min(point1 + length1, point2 + length2);\n\n    // return null overlap if there is no overlap\n    if (highestStartPoint >= lowestEndPoint) {\n        return new RangeOverlap(null, null);\n    }\n\n    // compute the overlap length\n    int overlapLength = lowestEndPoint - highestStartPoint;\n\n    return new RangeOverlap(highestStartPoint, overlapLength);\n}", "tests": "int[][] xInputs = new int[][]{\n    {5, 2, 5, 1},\n    {0, 10, 5, 2},\n    {0, 10, 5, 2},\n    {1, 1, 1, 5},\n    {0, 10, 1, 1},\n    {0, 10, 20, 10},\n    {0, 10, 10, 10},\n    {0, 10, 0, 10},\n};\n\nRangeOverlap[] xExpectedOutputs = new RangeOverlap[]{\n    t.new RangeOverlap(5, 1),\n    t.new RangeOverlap(5, 2),\n    t.new RangeOverlap(5, 2),\n    t.new RangeOverlap(1, 1),\n    t.new RangeOverlap(1, 1),\n    t.new RangeOverlap(null, null),\n    t.new RangeOverlap(null, null),\n    t.new RangeOverlap(0, 10),\n};\n\nint[][] yInputs = new int[][]{\n    {5, 2, 6, 1},\n    {0, 10, 3, 2},\n    {0, 10, 3, 2},\n    {2, 5, 2, 1},\n    {0, 10, 0, 50},\n    {0, 10, 20, 10},\n    {0, 10, 0, 10},\n    {0, 10, 10, 10},\n};\n\nRangeOverlap[] yExpectedOutputs = new RangeOverlap[]{\n    t.new RangeOverlap(6, 1),\n    t.new RangeOverlap(3, 2),\n    t.new RangeOverlap(3, 2),\n    t.new RangeOverlap(2, 1),\n    t.new RangeOverlap(0, 10),\n    t.new RangeOverlap(null, null),\n    t.new RangeOverlap(0, 10),\n    t.new RangeOverlap(null, null),\n};\n\nfor (int n = 0; n < xInputs.length; n++) {\n    RangeOverlap actualOutput = t.findRangeOverlap(xInputs[n][0], xInputs[n][1], xInputs[n][2], xInputs[n][3]);\n    assertTrue(\n        actualOutput.startPoint == xExpectedOutputs[n].startPoint\n        && actualOutput.length == xExpectedOutputs[n].length\n    );\n}\n\nfor (int n = 0; n < yInputs.length; n++) {\n    RangeOverlap actualOutput = t.findRangeOverlap(yInputs[n][0], yInputs[n][1], yInputs[n][2], yInputs[n][3]);\n    assertTrue(\n        actualOutput.startPoint == yExpectedOutputs[n].startPoint\n        && actualOutput.length == yExpectedOutputs[n].length\n    );\n}"}, "swift": {"code": "struct RangeOverlap {\n\n    let startPoint: Int\n    let length: Int\n}\n\nfunc findRangeOverlap(point1: Int, length1: Int,\n                      point2: Int, length2: Int) -> RangeOverlap {\n\n    // find the highest start point and lowest end point.\n    // the highest (\"rightmost\" or \"upmost\") start point is\n    // the start point of the overlap.\n    // the lowest end point is the end point of the overlap.\n    let highestStartPoint = max(point1, point2)\n    let lowestEndPoint = min(point1 + length1, point2 + length2)\n\n    // return null overlap if there is no overlap\n    if highestStartPoint >= lowestEndPoint {\n        return RangeOverlap(startPoint: 0, length: 0)\n    }\n\n    // compute the overlap length\n    let overlapLength = lowestEndPoint - highestStartPoint\n\n    return RangeOverlap(startPoint:highestStartPoint, length:overlapLength)\n}", "tests": "let xInputs = [\n    [5, 2, 5, 1],\n    [0, 10, 5, 2],\n    [0, 10, 5, 2],\n    [1, 1, 1, 5],\n    [0, 10, 1, 1],\n    [0, 10, 20, 10],\n    [0, 10, 10, 10],\n    [0, 10, 0, 10]\n]\n\nlet xExpectedOutputs = [\n    RangeOverlap(startPoint: 5, length: 1),\n    RangeOverlap(startPoint: 5, length: 2),\n    RangeOverlap(startPoint: 5, length: 2),\n    RangeOverlap(startPoint: 1, length: 1),\n    RangeOverlap(startPoint: 1, length: 1),\n    RangeOverlap(startPoint: 0, length: 0),\n    RangeOverlap(startPoint: 0, length: 0),\n    RangeOverlap(startPoint: 0, length: 10),\n]\n\nlet yInputs = [\n    [5, 2, 6, 1],\n    [0, 10, 3, 2],\n    [0, 10, 3, 2],\n    [2, 5, 2, 1],\n    [0, 10, 0, 50],\n    [0, 10, 20, 10],\n    [0, 10, 0, 10],\n    [0, 10, 10, 10]\n]\n\nlet yExpectedOutputs = [\n    RangeOverlap(startPoint: 6, length: 1),\n    RangeOverlap(startPoint: 3, length: 2),\n    RangeOverlap(startPoint: 3, length: 2),\n    RangeOverlap(startPoint: 2, length: 1),\n    RangeOverlap(startPoint: 0, length: 10),\n    RangeOverlap(startPoint: 0, length: 0),\n    RangeOverlap(startPoint: 0, length: 10),\n    RangeOverlap(startPoint: 0, length: 0)\n]\nfor (i, xInput) in xInputs.enumerated() {\n    let actualOutput = findRangeOverlap(point1: xInput[0], length1: xInput[1], point2: xInput[2], length2: xInput[3])\n    let expectedOutput = xExpectedOutputs[i]\n    try assertTrue( actualOutput.startPoint == expectedOutput.startPoint &&\n            actualOutput.length == expectedOutput.length)\n}\n\nfor (i, yInput) in yInputs.enumerated() {\n    let actualOutput = findRangeOverlap(point1: yInput[0], length1: yInput[1], point2: yInput[2], length2: yInput[3])\n    let expectedOutput = yExpectedOutputs[i]\n    try assertTrue( actualOutput.startPoint == expectedOutput.startPoint &&\n            actualOutput.length == expectedOutput.length)\n}"}, "cpp": {"code": "class RangeOverlap\n{\nprivate:\n    int startPoint_;\n    int length_;\n\npublic:\n    RangeOverlap() :\n        startPoint_(0),\n        length_(0)\n    {\n    }\n\n    RangeOverlap(int startPoint, int width) :\n        startPoint_(startPoint),\n        length_(width)\n    {\n    }\n\n    int getStartPoint() const\n    {\n        return startPoint_;\n    }\n\n    int getLength() const\n    {\n        return length_;\n    }\n\n    bool overlapExists() const\n    {\n        return length_ > 0;\n    }\n\n    bool operator==(const RangeOverlap& other) const\n    {\n        return\n            startPoint_ == other.startPoint_\n            && length_ == other.length_;\n    }\n\n    bool operator!=(const RangeOverlap& other) const\n    {\n        return !(*this == other);\n    }\n};\n\n\nRangeOverlap findRangeOverlap(int point1, int length1, int point2, int length2)\n{\n\n    // find the highest start point and lowest end point.\n    // the highest (\"rightmost\" or \"upmost\") start point is\n    // the start point of the overlap.\n    // the lowest end point is the end point of the overlap.\n    int highestStartPoint = max(point1, point2);\n    int lowestEndPoint = min(point1 + length1, point2 + length2);\n\n    // return null overlap if there is no overlap\n    if (highestStartPoint >= lowestEndPoint) {\n        return RangeOverlap();\n    }\n\n    // compute the overlap length\n    int overlapLength = lowestEndPoint - highestStartPoint;\n\n    return RangeOverlap(highestStartPoint, overlapLength);\n}", "tests": "const int xInputs[][4] {\n    {5, 2, 5, 1},\n    {0, 10, 5, 2},\n    {0, 10, 5, 2},\n    {1, 1, 1, 5},\n    {0, 10, 1, 1},\n    {0, 10, 20, 10},\n    {0, 10, 10, 10},\n    {0, 10, 0, 10},\n};\n\nconst RangeOverlap xExpectedOutputs [] {\n    RangeOverlap(5, 1),\n    RangeOverlap(5, 2),\n    RangeOverlap(5, 2),\n    RangeOverlap(1, 1),\n    RangeOverlap(1, 1),\n    RangeOverlap(),\n    RangeOverlap(),\n    RangeOverlap(0, 10),\n};\n\nconst int yInputs[][4] {\n    {5, 2, 6, 1},\n    {0, 10, 3, 2},\n    {0, 10, 3, 2},\n    {2, 5, 2, 1},\n    {0, 10, 0, 50},\n    {0, 10, 20, 10},\n    {0, 10, 0, 10},\n    {0, 10, 10, 10},\n};\n\nconst RangeOverlap yExpectedOutputs[] {\n    RangeOverlap(6, 1),\n    RangeOverlap(3, 2),\n    RangeOverlap(3, 2),\n    RangeOverlap(2, 1),\n    RangeOverlap(0, 10),\n    RangeOverlap(),\n    RangeOverlap(0, 10),\n    RangeOverlap(),\n};\n\n// ensure we have consistent tests\nassert((sizeof(xInputs)/sizeof(xInputs[0])) == (sizeof(xExpectedOutputs)/sizeof(xExpectedOutputs[0])));\nassert((sizeof(yInputs)/sizeof(yInputs[0])) == (sizeof(yExpectedOutputs)/sizeof(yExpectedOutputs[0])));\n\nfor (size_t i = 0, n = sizeof(xInputs) / sizeof(xInputs[0]); i < n; ++i) {\n    assertEqual(findRangeOverlap(xInputs[i][0], xInputs[i][1], xInputs[i][2], xInputs[i][3]), xExpectedOutputs[i]);\n}\n\nfor (size_t i = 0, n = sizeof(yInputs) / sizeof(yInputs[0]); i < n; ++i) {\n    assertEqual(findRangeOverlap(yInputs[i][0], yInputs[i][1], yInputs[i][2], yInputs[i][3]), yExpectedOutputs[i]);\n}"}, "csharp": {"code": "public class RangeOverlap\n{\n    public readonly int StartPoint;\n    public readonly int Length;\n\n    public RangeOverlap() {}\n\n    public RangeOverlap(int highestStartPoint, int overlapLength)\n    {\n        StartPoint = highestStartPoint;\n        Length = overlapLength;\n    }\n}\n\npublic RangeOverlap FindRangeOverlap(int point1, int length1, int point2, int length2)\n{\n    // Find the highest start point and lowest end point.\n    // The highest (\"rightmost\" or \"upmost\") start point is\n    // the start point of the overlap.\n    // The lowest end point is the end point of the overlap.\n    int highestStartPoint = Math.Max(point1, point2);\n    int lowestEndPoint = Math.Min(point1 + length1, point2 + length2);\n\n    // Return empty overlap if there is no overlap\n    if (highestStartPoint >= lowestEndPoint)\n    {\n        return new RangeOverlap();\n    }\n\n    // Compute the overlap length\n    int overlapLength = lowestEndPoint - highestStartPoint;\n\n    return new RangeOverlap(highestStartPoint, overlapLength);\n}", "tests": "int[][] xInputs = new int[][]\n{\n    new[] {5, 2, 5, 1},\n    new[] {0, 10, 5, 2},\n    new[] {0, 10, 5, 2},\n    new[] {1, 1, 1, 5},\n    new[] {0, 10, 1, 1},\n    new[] {0, 10, 20, 10},\n    new[] {0, 10, 10, 10},\n    new[] {0, 10, 0, 10},\n};\n\nRangeOverlap[] xExpectedOutputs = new RangeOverlap[]\n{\n    new RangeOverlap(5, 1),\n    new RangeOverlap(5, 2),\n    new RangeOverlap(5, 2),\n    new RangeOverlap(1, 1),\n    new RangeOverlap(1, 1),\n    new RangeOverlap(0, 0),\n    new RangeOverlap(0, 0),\n    new RangeOverlap(0, 10),\n};\n\nint[][] yInputs = new int[][]\n{\n    new[] {5, 2, 6, 1},\n    new[] {0, 10, 3, 2},\n    new[] {0, 10, 3, 2},\n    new[] {2, 5, 2, 1},\n    new[] {0, 10, 0, 50},\n    new[] {0, 10, 20, 10},\n    new[] {0, 10, 0, 10},\n    new[] {0, 10, 10, 10},\n};\n\nRangeOverlap[] yExpectedOutputs = new RangeOverlap[]\n{\n    new RangeOverlap(6, 1),\n    new RangeOverlap(3, 2),\n    new RangeOverlap(3, 2),\n    new RangeOverlap(2, 1),\n    new RangeOverlap(0, 10),\n    new RangeOverlap(0, 0),\n    new RangeOverlap(0, 10),\n    new RangeOverlap(0, 0),\n};\n\nfor (int i = 0; i < xInputs.Length; i++)\n{\n    RangeOverlap actualOutput = FindRangeOverlap(xInputs[i][0], xInputs[i][1], xInputs[i][2], xInputs[i][3]);\n    AssertTrue(\n        actualOutput.StartPoint == xExpectedOutputs[i].StartPoint\n        && actualOutput.Length == xExpectedOutputs[i].Length\n    );\n}\n\nfor (int i = 0; i < yInputs.Length; i++)\n{\n    RangeOverlap actualOutput = FindRangeOverlap(yInputs[i][0], yInputs[i][1], yInputs[i][2], yInputs[i][3]);\n    AssertTrue(\n        actualOutput.StartPoint == yExpectedOutputs[i].StartPoint\n        && actualOutput.Length == yExpectedOutputs[i].Length\n    );\n}"}}}, "funcs": {"question__rectangular-love__find-x-overlap": {"snake": "find_x_overlap", "csharp": "FindXOverlap", "camel": "findXOverlap"}, "question__rectangular-love__find-range-overlap": {"snake": "find_range_overlap", "csharp": "FindRangeOverlap", "camel": "findRangeOverlap"}}, "vars": {"question__rectangular-love__rectangle-class": {"default": "Rectangle"}, "question__rectangular-love__lowest-end-point": {"snake": "lowest_end_point", "camel": "lowestEndPoint"}, "question__rectangular-love__highest-start-point": {"snake": "highest_start_point", "camel": "highestStartPoint"}, "question__rectangular-love__y": {"default": "y"}, "question__rectangular-love__height": {"default": "height"}}, "words": {"question__rectangular-love__a-standard-list": {"javascript": "an array", "python": "a list", "default": "a list", "php": "an array", "ruby": "an array", "swift": "an array", "cpp": "a vector", "objectivec": "an array", "csharp": "a list", "c": "an array", "java": "an array"}, "question__rectangular-love__rectangle-explanation": {"javascript": "<span concept=\"hash-map\">objects</span> like this", "python": "<span concept=\"hash-map\">dictionaries</span> like this", "ruby": "<span concept=\"hash-map\">hashes</span> like this", "c": "instances of the <span var=\"rectangle-class\">Rectangle</span> structure", "java": "objects of <span var=\"rectangle-class\">Rectangle</span> class", "cpp": "instances of the <span var=\"rectangle-class\">Rectangle</span> class", "csharp": "objects of <span var=\"rectangle-class\"/> class"}, "question__rectangular-love__standard-list": {"javascript": "array", "python": "list", "default": "list", "php": "array", "ruby": "array", "swift": "array", "cpp": "vector", "objectivec": "array", "csharp": "list", "c": "array", "java": "array"}, "question__rectangular-love__be-this-type-of-rectangle": {"ruby": "use this format", "csharp": "be a <span var=\"rectangle-class\"/> object", "python": "use this format", "javascript": "use this format", "default": "use this format", "c": "be a <span var=\"rectangle-class\">Rectangle</span> structure", "java": "be a <span var=\"rectangle-class\">Rectangle</span> object", "cpp": "be a <span var=\"rectangle-class\">Rectangle</span> object"}}};
            var codeTypes = ['words', 'code-blocks', 'vars', 'funcs', 'code-inlines'];

            var mergeObjects = function(objectA, objectB) {
                objectA = objectA || {};
                objectB = objectB || {};
                for (var key in objectB) {
                    objectA[key] = objectB[key];
                }
                return objectA;
            }

            if (!window.contentTranslations) {
                window.contentTranslations = elTranslations;
            } else {
                for (var i=0; i<codeTypes.length; i++) {
                    window.contentTranslations[codeTypes[i]] = mergeObjects(window.contentTranslations[codeTypes[i]], elTranslations[codeTypes[i]]);
                }
            }
            </script>
</div>


    </div>

    <div class="btn-sets">

        <p class="prompt ng-binding" ng-bind="getPromptStr()" ng-hide="&#39;full&#39; !== &#39;full&#39; &amp;&amp; endedQuestion">Do you have an answer?</p>

        <div class="btn-set btn-set-during ng-hide" ng-show="isSingleTrack &amp;&amp; getBtnSet()==&#39;during&#39;">
                <a ng-click="showPress()" id="btn-show" class="btn btn-default btn-large" style=""><span class="glyphicon glyphicon-chevron-down"></span><span class="text ng-binding" ng-bind="getShowBtnText()">Show answer</span></a>
        </div>

        <div class="btn-set btn-set-during" ng-show="!isSingleTrack &amp;&amp; getBtnSet()==&#39;during&#39;">
                <a ng-click="haveAnswerPress()" id="btn-got-it" class="btn btn-default btn-large" style=""><span class="glyphicon glyphicon-ok"></span><span class="text ng-binding" ng-bind="getHaveAnswerBtnText()">I have an answer</span></a>
                <a ng-click="dontHaveAnswerPress()" id="btn-hint" class="btn btn-default btn-large" style=""><span class="fa fa-question"></span><span class="text ng-binding" ng-bind="getDontHaveAnswerBtnText()">I need a hint</span></a>
        </div>

        
            <div class="btn-set btn-set-after-option ng-hide" ng-show="getBtnSet()==&#39;after-option&#39;">
                    <a ng-click="feelExpertPress()" id="btn-feel-good" class="btn btn-default btn-large" style=""><span class="glyphicon glyphicon-ok"></span><span class="text">Yes, I'm expert on this</span></a>
                    <a ng-click="dontFeelExpertPress()" id="btn-need-review" class="btn btn-default btn-large" style=""><span class="glyphicon glyphicon-repeat"></span><span class="text">Not quite, review later</span></a>
            </div>
            <div class="btn-set btn-set-after-must-review ng-hide" ng-show="getBtnSet()==&#39;after-must-review&#39;">
                    <a ng-click="nextQuestionPress()" id="btn-next" class="btn btn-default btn-large" style=""><span class="glyphicon glyphicon-chevron-right"></span><span class="text">Next question</span></a>
            </div>
        

        <div class="share-btns share-btns-quiz-end ng-hide" ng-show="getBtnSet()==&#39;after-option&#39;">
            <p>
                Like this problem? Pass it on!
            </p>

            

<a class="custom-share facebook-share ng-isolate-scope" href="https://www.facebook.com/sharer/sharer.php?u=https%3A//www.interviewcake.com/question/python/rectangular-love" target="_blank" tracklink="" the-event="FB share click" the-properties="{&quot;which&quot; : &quot;post-question option&quot;}"><i class="fa fa-facebook"> </i> Share</a>
<a class="custom-share twitter-share ng-isolate-scope" href="https://twitter.com/intent/tweet?text=Solved%20this%20coding%20interview%20question%21&amp;via=interviewcake&amp;related=interviewcake&amp;url=https%3A//www.interviewcake.com/question/python/rectangular-love" target="_blank" tracklink="" the-event="Twitter share click" the-properties="{&quot;which&quot; : &quot;post-question option&quot;}"><i class="fa fa-twitter"> </i> Tweet</a>
<a class="custom-share linkedin-share ng-isolate-scope" href="https://www.linkedin.com/shareArticle?mini=true&amp;url=https%3A//www.interviewcake.com/question/python/rectangular-love&amp;title=&amp;summary=Solved%20this%20coding%20interview%20question%21&amp;source=Interview%20Cake" target="_blank" tracklink="" the-event="LinkedIn share click" the-properties="{&quot;which&quot; : &quot;post-question option&quot;}"><i class="fa fa-linkedin"> </i> Share</a>


        </div>
        <div class="share-btns share-btns-quiz-end ng-hide" ng-show="getBtnSet()==&#39;after-must-review&#39;">
            <p>
                Like this problem? Pass it on!
            </p>

            

<a class="custom-share facebook-share ng-isolate-scope" href="https://www.facebook.com/sharer/sharer.php?u=https%3A//www.interviewcake.com/question/python/rectangular-love" target="_blank" tracklink="" the-event="FB share click" the-properties="{&quot;which&quot; : &quot;post-question must review&quot;}"><i class="fa fa-facebook"> </i> Share</a>
<a class="custom-share twitter-share ng-isolate-scope" href="https://twitter.com/intent/tweet?text=Tough%20coding%20interview%20question%21&amp;via=interviewcake&amp;related=interviewcake&amp;url=https%3A//www.interviewcake.com/question/python/rectangular-love" target="_blank" tracklink="" the-event="Twitter share click" the-properties="{&quot;which&quot; : &quot;post-question must review&quot;}"><i class="fa fa-twitter"> </i> Tweet</a>
<a class="custom-share linkedin-share ng-isolate-scope" href="https://www.linkedin.com/shareArticle?mini=true&amp;url=https%3A//www.interviewcake.com/question/python/rectangular-love&amp;title=&amp;summary=Tough%20coding%20interview%20question%21&amp;source=Interview%20Cake" target="_blank" tracklink="" the-event="LinkedIn share click" the-properties="{&quot;which&quot; : &quot;post-question must review&quot;}"><i class="fa fa-linkedin"> </i> Share</a>

        </div>

    </div>

    
        <div ng-controller="NotepadCtrl" class="notepad-outer-wrapper ng-scope tab-mode" ng-class="notepadMode" style="bottom: 0px;">
    <div class="notepad-inner-wrapper tab-mode" ng-class="notepadMode">
        <div class="notepad-buttons tab-mode" ng-class="notepadMode">
            <div class="select-language ng-hide" ng-mousedown="isNotepadRelatedElementClicked=true" ng-mouseup="isNotepadRelatedElementClicked=false" ng-show="notepadMode!==&#39;tab-mode&#39;">
                <select ng-model="selectedLanguage" ng-options="language.display_name for language in codemirrorLanguages | orderBy: &#39;dropdown_rank&#39;" ng-change="selectFromLanguageDropdown()" class="ng-pristine ng-untouched ng-valid"><option value="0" selected="selected" label="Python">Python</option><option value="1" label="Java">Java</option><option value="2" label="Ruby">Ruby</option><option value="3" label="JavaScript">JavaScript</option><option value="4" label="C (beta)">C (beta)</option><option value="5" label="C++ (beta)">C++ (beta)</option><option value="6" label="C# (beta)">C# (beta)</option><option value="7" label="Objective-C (beta)">Objective-C (beta)</option><option value="8" label="PHP (beta)">PHP (beta)</option><option value="9" label="Haskell">Haskell</option><option value="10" label="No syntax">No syntax</option></select>
            </div>
            <span class="tab ng-hide" ng-mousedown="isNotepadRelatedElementClicked=true" ng-click="clickIcon(&#39;tab-mode&#39;)" ng-mouseup="isNotepadRelatedElementClicked=false" ng-show="notepadMode!==&#39;tab-mode&#39;"></span>
            <span class="type-and-look" ng-mousedown="isNotepadRelatedElementClicked=true" ng-click="clickIcon(&#39;type-and-look-mode&#39;)" ng-mouseup="isNotepadRelatedElementClicked=false"></span>
            <span class="focus" ng-mousedown="isNotepadRelatedElementClicked=true" ng-click="clickIcon(&#39;focus-mode&#39;)" ng-mouseup="isNotepadRelatedElementClicked=false"></span>
        </div>
        <div class="notepad-typing tab-mode" ng-class="{&#39;output-displayed&#39;: outputDisplayed &amp;&amp; selectedLanguage.codewars}">
            <div class="ng-pristine ng-untouched ng-valid cm-s-default CodeMirror" ui-codemirror-opts="editorOptions" ui-refresh="isCodemirrorUpdated" ng-model="userCode"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 26px; left: 22px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;" tabindex="0"></textarea></div><div class="CodeMirror-vscrollbar" not-content="true" style="min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" not-content="true" style="min-height: 18px;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" not-content="true"></div><div class="CodeMirror-gutter-filler" not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 30px; min-width: 86.9688px; min-height: 29px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"><span><span>​</span>x</span></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17.85px;">&nbsp;</div></div><div class="CodeMirror-code"><pre><span style="padding-right: 0.1px;"><span class="cm-variable">Type</span> <span class="cm-variable">code</span><span class="cm-operator">!</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 29px;"></div><div class="CodeMirror-gutters" style="display: none; height: 62px;"></div></div></div>
        </div>

        

        <div class="notepad-run tab-mode" ng-class="notepadMode" ng-show="selectedLanguage.codewars">
            <span class="output-button ng-binding ng-hide" ng-mousedown="isNotepadRelatedElementClicked=true" ng-click="outputDisplayed = !outputDisplayed; codemirrorElement.focus()" ng-mouseup="isNotepadRelatedElementClicked=false" ng-show="outputDisplayed || output !== undefined" ng-bind="outputDisplayed ? &#39;HIDE&#39; : &#39;SHOW&#39;">SHOW</span>
            <span class="output-button" ng-mousedown="isNotepadRelatedElementClicked=true" ng-click="runCode()" ng-mouseup="isNotepadRelatedElementClicked=false">RUN</span>
        </div>
        <div class="notepad-output tab-mode" ng-class="notepadMode" ng-show="selectedLanguage.codewars" ng-mousedown="isNotepadRelatedElementClicked=true" ng-mouseup="isNotepadRelatedElementClicked=false">
            <span class="powered-by">
                Code execution powered by Qualified.io
            </span>
            <p class="content output-help ng-binding ng-hide" ng-show="outputHelp" ng-bind="outputHelp"></p>
            <p class="content output ng-binding ng-hide" ng-show="output" ng-bind="output"></p>
            <p class="content output-error ng-binding" ng-bind="outputError"></p>
        </div>

        
    </div>
</div>

    

</div>
</div>



    <div ng-view=""></div>
</div>


    
    
    


    <div id="print-footer">
        <p>
            Want more coding interview help?
        </p>

        <p>
            Check out <span class="url">interviewcake.com</span> for more advice, guides, and practice questions.
        </p>
    </div>

    <div id="footer">

        <a class="newsletter-link" href="https://www.interviewcake.com/free-weekly-coding-interview-problem-newsletter">Subscribe to our weekly question email list »</a>

        <div class="links">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-md-6">
                        <div class="by-company">
                            <h5>
                                Programming interview questions by company:
                            </h5>
                            <ul>
                                <li>
                                    <a href="https://www.interviewcake.com/google-interview-questions">Google interview questions</a>
                                </li>
                                <li>
                                    <a href="https://www.interviewcake.com/facebook-interview-questions">Facebook interview questions</a>
                                </li>
                                <li>
                                    <a href="https://www.interviewcake.com/amazon-interview-questions">Amazon interview questions</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="by-language">
                            <h5>
                                Programming interview questions by language:
                            </h5>
                            <ul>
                                <li>
                                    <a href="https://www.interviewcake.com/java-interview-questions">Java interview questions</a>
                                </li>
                                <li>
                                    <a href="https://www.interviewcake.com/python-interview-questions">Python interview questions</a>
                                </li>
                                <li>
                                    <a href="https://www.interviewcake.com/ruby-interview-questions">Ruby interview questions</a>
                                </li>
                                <li>
                                    <a href="https://www.interviewcake.com/javascript-interview-questions">JavaScript interview questions</a>
                                </li>
                                <li>
                                    <a href="https://www.interviewcake.com/sql-interview-questions">SQL interview questions</a>
                                </li>
                                <li>
                                    <a href="https://www.interviewcake.com/testing-and-qa-interview-questions">Testing and QA interview questions</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="social-media">

            <a class="facebook ng-isolate-scope" href="https://www.facebook.com/interviewcake" target="_blank" tracklink="" the-event="FB footer click"><i class="fa fa-facebook"></i></a>
            <a class="twitter ng-isolate-scope" href="https://www.twitter.com/interviewcake" target="_blank" tracklink="" the-event="Twitter footer click"><i class="fa fa-twitter"></i></a>
        </div>

        

            <div itemscope="" itemtype="http://schema.org/Corporation">
                <span class="schemaorghide" itemprop="description">Programming interview practice and tips for software engineers looking for jobs.</span>

                Copyright © 2016
                <span itemprop="name">Cake Labs, Inc.</span> All rights reserved.
                <span class="schemaorghide" itemprop="image">https://www.interviewcake.com/static//images/cake_white_on_blue_600.png</span>
                <span class="schemaorghide" itemprop="logo">https://www.interviewcake.com/static//images/cake_white_on_blue_600.png</span>
                <span class="schemaorghide" itemprop="url">https://www.interviewcake.com</span>
                <span class="schemaorghide" itemprop="telephone">(804) 876-2253</span>

                <address itemprop="address" itemscope="" itemtype="http://schema.org/PostalAddress">
                    <span itemprop="streetAddress">228 Park Ave S #82632</span>,
                    <span itemprop="addressLocality">New York</span>,
                    <span itemprop="addressRegion">NY</span>
                    <span itemprop="addressCountry">US</span>
                    <span itemprop="postalCode">10003</span>
                    <span itemprop="telephone">(804) 876-2253</span>
                </address>

                <address class="schemaorghide" itemprop="location" itemscope="" itemtype="http://schema.org/PostalAddress">
                    <span itemprop="addressCountry">US</span>
                    <span itemprop="addressLocality">New York</span>
                    <span itemprop="addressRegion">NY</span>
                    <span itemprop="streetAddress">228 Park Ave S #82632</span>
                    <span itemprop="postalCode">10003</span>
                    <span itemprop="telephone">(804) 876-2253</span>
                </address>

                <div itemprop="location" itemscope="" itemtype="http://schema.org/Place">
                    <div itemprop="geo" itemscope="" itemtype="http://schema.org/GeoCoordinates">
                        <meta itemprop="latitude" content="37.76480">
                        <meta itemprop="longitude" content="-122.41872">
                    </div>
                </div>
            </div>
        
        <div>

            
                <a href="https://www.interviewcake.com/about">About</a>
                |
            
            <a rel="nofollow" href="https://www.interviewcake.com/privacy-policy">Privacy</a>
            |
            <a rel="nofollow" href="https://www.interviewcake.com/terms-and-conditions">Terms</a>
        </div>
    </div>

    

</div> <!-- /"below-nav" -->

    
    <script src="./06.Rectangular Love _ Interview Cake_files/jquery.min.js"></script>
    <script src="./06.Rectangular Love _ Interview Cake_files/bootstrap.min.js"></script>
    <script src="./06.Rectangular Love _ Interview Cake_files/angular.min.js"></script>
    <script src="./06.Rectangular Love _ Interview Cake_files/angular-route.min.js"></script>
    <script src="./06.Rectangular Love _ Interview Cake_files/angular-cookies.min.js"></script>
    <script src="./06.Rectangular Love _ Interview Cake_files/angular-animate.min.js"></script>
    <script src="./06.Rectangular Love _ Interview Cake_files/katex.min.js"></script>

    

    
    <script src="./06.Rectangular Love _ Interview Cake_files/underscore-min.js"></script>
    <script src="./06.Rectangular Love _ Interview Cake_files/angular-django-rest-resource.js"></script>
    <script src="./06.Rectangular Love _ Interview Cake_files/angular-seo.js"></script>
    <script src="./06.Rectangular Love _ Interview Cake_files/sticky.js"></script>
    

    <script type="text/javascript">
        (function(){
  var FLAGS = {
    'learnings': true,'only_3_free_questions': true,'new_header': true,'allow_anonymous_purchase': false
    },
    SWITCHES = {
    
    },
    SAMPLES = {
    
    };
  window.waffle = {
    "flag_is_active": function waffle_flag(flag_name) {
      
      return !!FLAGS[flag_name];
    },
    "switch_is_active": function waffle_switch(switch_name) {
      
      return !!SWITCHES[switch_name];
    },
    "sample_is_active": function waffle_sample(sample_name) {
      
      return !!SAMPLES[sample_name];
    },
    "FLAGS": FLAGS,
    "SWITCHES": SWITCHES,
    "SAMPLES": SAMPLES
  };
})();

    </script>

    <script src="./06.Rectangular Love _ Interview Cake_files/base.js"></script>

    
    <script src="./06.Rectangular Love _ Interview Cake_files/prism.min.js"></script>
    <script src="./06.Rectangular Love _ Interview Cake_files/codemirror.js"></script>
    <script src="./06.Rectangular Love _ Interview Cake_files/python.js"></script>
    <script src="./06.Rectangular Love _ Interview Cake_files/ruby.js"></script>
    <script src="./06.Rectangular Love _ Interview Cake_files/javascript.js"></script>
    <script src="./06.Rectangular Love _ Interview Cake_files/clike.js"></script>
    <script src="./06.Rectangular Love _ Interview Cake_files/php.js"></script>
    <script src="./06.Rectangular Love _ Interview Cake_files/haskell.js"></script>
    <script src="./06.Rectangular Love _ Interview Cake_files/ui-codemirror.js"></script>
    <script src="./06.Rectangular Love _ Interview Cake_files/jquery.payment.js"></script>
    <script src="./06.Rectangular Love _ Interview Cake_files/edgeUtils.js"></script>
    




    <script type="text/javascript">
        window.CACHEBUST_QUERY_STR = '?bust=135';
        //TODO: move above into the below
        window.JS_CONSTANTS = {"INTEGRATIONS_SETTING_ONLY_INTEGRATIONS_THAT_SUPPORT_FRONT_END_ONLY": {"All": false, "Google Analytics": true, "Optimizely": true, "Adwords": true, "Facebook Pixel": true}, "C18N_LANGUAGES": [{"dropdown_rank": 1, "prism": "python", "codemirror": "text/x-python", "codewars": "python", "short_name": "python", "case_convention": "snake", "notepad_template": "def my_function(arg):\n    # write the body of your function here\n    return 'running with %s' % arg\n\n# run your function through some test cases here\n# remember: debugging is half the battle!\nprint my_function('test input')\n", "display_name": "Python"}, {"dropdown_rank": 3, "prism": "ruby", "codemirror": "text/x-ruby", "codewars": "ruby", "short_name": "ruby", "case_convention": "snake", "notepad_template": "def my_function(arg)\n    # write the body of your function here\n    return \"running with #{arg}\"\nend\n\n# run your function through some test cases here\n# remember: debugging is half the battle!\nputs my_function('test input')\n", "display_name": "Ruby"}, {"dropdown_rank": 2, "prism": "java", "codemirror": "text/x-java", "codewars": "java", "short_name": "java", "case_convention": "camel", "notepad_template": "public class Solution {\n    public static String myFunction(String arg) {\n        // write the body of your function here\n        return \"running with \" + arg;\n    }\n    public static void main(String[] args) {\n        // run your function through some test cases here\n        // remember: debugging is half the battle!\n        String testInput = \"test input\";\n        System.out.println(myFunction(testInput));\n    }\n}", "display_name": "Java"}, {"dropdown_rank": 4, "prism": "javascript", "codemirror": "text/javascript", "codewars": "javascript", "short_name": "javascript", "case_convention": "camel", "notepad_template": "function myFunction(arg) {\n    // write the body of your function here\n    return 'running with ' + arg;\n}\n\n// run your function through some test cases here\n// remember: debugging is half the battle!\nconsole.log(myFunction('test input'));\n", "display_name": "JavaScript"}, {"dropdown_rank": 5, "closest_languages": ["cpp", "java"], "prism": "c", "codemirror": "text/x-csrc", "codewars": "c", "short_name": "c", "case_convention": "camel", "notepad_template": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nconst char * my_function(char * arg) {\n    // write the body of your function here\n    return arg;\n}\n\nint main() {\n    // run your function through some test cases here\n    // remember: debugging is half the battle!\n    printf(\"%s\", my_function(\"test input\"));\n    return 0;\n}", "display_name": "C (beta)"}, {"dropdown_rank": 6, "closest_languages": ["c", "java"], "prism": "cpp", "codemirror": "text/x-c++src", "codewars": "cpp", "short_name": "cpp", "case_convention": "camel", "notepad_template": "#include <iostream>\nusing namespace std;\n\nstring myFunction (const string& arg)\n{\n    // write the body of your function here\n    return \"running with \" + arg;\n}\n\nint main ()\n{\n    // run your function through some test cases here\n    // remember: debugging is half the battle!\n    cout << myFunction (\"test input\");\n    return 0;\n}", "display_name": "C++ (beta)"}], "CODEMIRROR_LANGUAGES": [{"dropdown_rank": 10, "codemirror": "text/x-haskell", "codewars": "haskell", "short_name": "haskell", "display_name": "Haskell", "notepad_template": "myFunction :: String -> String\n-- write the body of your function here\nmyFunction arg = \"running with \" ++ arg\n\nmain = do\n  -- run your function through some test cases here\n  -- remember: debugging is half the battle!\n  let result = myFunction \"test input\"\n  putStrLn result\n"}, {"dropdown_rank": 11, "codemirror": "", "short_name": "nolanguage", "prism": "none", "display_name": "No syntax"}, {"dropdown_rank": 1, "prism": "python", "codemirror": "text/x-python", "codewars": "python", "short_name": "python", "case_convention": "snake", "notepad_template": "def my_function(arg):\n    # write the body of your function here\n    return 'running with %s' % arg\n\n# run your function through some test cases here\n# remember: debugging is half the battle!\nprint my_function('test input')\n", "display_name": "Python"}, {"dropdown_rank": 3, "prism": "ruby", "codemirror": "text/x-ruby", "codewars": "ruby", "short_name": "ruby", "case_convention": "snake", "notepad_template": "def my_function(arg)\n    # write the body of your function here\n    return \"running with #{arg}\"\nend\n\n# run your function through some test cases here\n# remember: debugging is half the battle!\nputs my_function('test input')\n", "display_name": "Ruby"}, {"dropdown_rank": 2, "prism": "java", "codemirror": "text/x-java", "codewars": "java", "short_name": "java", "case_convention": "camel", "notepad_template": "public class Solution {\n    public static String myFunction(String arg) {\n        // write the body of your function here\n        return \"running with \" + arg;\n    }\n    public static void main(String[] args) {\n        // run your function through some test cases here\n        // remember: debugging is half the battle!\n        String testInput = \"test input\";\n        System.out.println(myFunction(testInput));\n    }\n}", "display_name": "Java"}, {"dropdown_rank": 4, "prism": "javascript", "codemirror": "text/javascript", "codewars": "javascript", "short_name": "javascript", "case_convention": "camel", "notepad_template": "function myFunction(arg) {\n    // write the body of your function here\n    return 'running with ' + arg;\n}\n\n// run your function through some test cases here\n// remember: debugging is half the battle!\nconsole.log(myFunction('test input'));\n", "display_name": "JavaScript"}, {"dropdown_rank": 5, "closest_languages": ["cpp", "java"], "prism": "c", "codemirror": "text/x-csrc", "codewars": "c", "short_name": "c", "case_convention": "camel", "notepad_template": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nconst char * my_function(char * arg) {\n    // write the body of your function here\n    return arg;\n}\n\nint main() {\n    // run your function through some test cases here\n    // remember: debugging is half the battle!\n    printf(\"%s\", my_function(\"test input\"));\n    return 0;\n}", "display_name": "C (beta)"}, {"dropdown_rank": 6, "closest_languages": ["c", "java"], "prism": "cpp", "codemirror": "text/x-c++src", "codewars": "cpp", "short_name": "cpp", "case_convention": "camel", "notepad_template": "#include <iostream>\nusing namespace std;\n\nstring myFunction (const string& arg)\n{\n    // write the body of your function here\n    return \"running with \" + arg;\n}\n\nint main ()\n{\n    // run your function through some test cases here\n    // remember: debugging is half the battle!\n    cout << myFunction (\"test input\");\n    return 0;\n}", "display_name": "C++ (beta)"}, {"dropdown_rank": 7, "closest_languages": ["java"], "prism": "csharp", "codemirror": "text/x-csharp", "codewars": "csharp", "short_name": "csharp", "case_convention": "camel", "notepad_template": "using System;\n\nnamespace Solution\n{\n    class Solution\n    {\n        public static string MyFunction(string arg)\n        {\n            // Write the body of your function here\n            return $\"Running with {arg}\";\n        }\n\n        public static void Main(string[] args)\n        {\n            // Run your function through some test cases here.\n            // Remember: debugging is half the battle!\n            string testInput = \"test input\";\n            Console.WriteLine(MyFunction(testInput));\n        }\n    }\n}\n", "display_name": "C# (beta)"}, {"dropdown_rank": 9, "closest_languages": ["javascript"], "prism": "php", "codemirror": "text/x-php", "codewars": "php", "short_name": "php", "case_convention": "camel", "notepad_template": "<?php\n\nfunction myFunction($arg) {\n    // write the body of your function here\n    return \"running with \" . $arg;\n}\n\n// run your function through some test cases here\n// remember: debugging is half the battle!\necho myFunction(\"test input\");\n\n?>", "display_name": "PHP (beta)"}, {"dropdown_rank": 8, "closest_languages": ["c", "java"], "prism": "objectivec", "codemirror": "text/x-objectivec", "short_name": "objectivec", "case_convention": "camel", "notepad_template": "#import <Foundation/Foundation.h>\n#import <stdio.h>\n\n@interface Solution : NSObject\n\n+ (NSString *)myFunction:(NSString *)arg;\n\n@end\n\n@implementation Solution\n\n+ (NSString *)myFunction:(NSString *)arg\n{\n  // write the body of your function here\n  return [@\"running with \" stringByAppendingString:arg];\n}\n\n@end\n\nint main (int argc, const char * argv[])\n{\n  @autoreleasepool {\n    // run your function through some test cases here\n    // remember: debugging is half the battle!\n    NSString * result = [Solution myFunction:@\"test input\"];\n    printf(\"%s\", [result UTF8String]);\n  }\n}", "display_name": "Objective-C (beta)"}], "PRISM_LANGUAGES": [{"dropdown_rank": 11, "codemirror": "", "short_name": "nolanguage", "prism": "none", "display_name": "No syntax"}, {"short_name": "html", "prism": "markup", "display_name": "HTML"}, {"short_name": "sql", "prism": "sql", "display_name": "SQL"}, {"dropdown_rank": 1, "prism": "python", "codemirror": "text/x-python", "codewars": "python", "short_name": "python", "case_convention": "snake", "notepad_template": "def my_function(arg):\n    # write the body of your function here\n    return 'running with %s' % arg\n\n# run your function through some test cases here\n# remember: debugging is half the battle!\nprint my_function('test input')\n", "display_name": "Python"}, {"dropdown_rank": 3, "prism": "ruby", "codemirror": "text/x-ruby", "codewars": "ruby", "short_name": "ruby", "case_convention": "snake", "notepad_template": "def my_function(arg)\n    # write the body of your function here\n    return \"running with #{arg}\"\nend\n\n# run your function through some test cases here\n# remember: debugging is half the battle!\nputs my_function('test input')\n", "display_name": "Ruby"}, {"dropdown_rank": 2, "prism": "java", "codemirror": "text/x-java", "codewars": "java", "short_name": "java", "case_convention": "camel", "notepad_template": "public class Solution {\n    public static String myFunction(String arg) {\n        // write the body of your function here\n        return \"running with \" + arg;\n    }\n    public static void main(String[] args) {\n        // run your function through some test cases here\n        // remember: debugging is half the battle!\n        String testInput = \"test input\";\n        System.out.println(myFunction(testInput));\n    }\n}", "display_name": "Java"}, {"dropdown_rank": 4, "prism": "javascript", "codemirror": "text/javascript", "codewars": "javascript", "short_name": "javascript", "case_convention": "camel", "notepad_template": "function myFunction(arg) {\n    // write the body of your function here\n    return 'running with ' + arg;\n}\n\n// run your function through some test cases here\n// remember: debugging is half the battle!\nconsole.log(myFunction('test input'));\n", "display_name": "JavaScript"}, {"dropdown_rank": 5, "closest_languages": ["cpp", "java"], "prism": "c", "codemirror": "text/x-csrc", "codewars": "c", "short_name": "c", "case_convention": "camel", "notepad_template": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nconst char * my_function(char * arg) {\n    // write the body of your function here\n    return arg;\n}\n\nint main() {\n    // run your function through some test cases here\n    // remember: debugging is half the battle!\n    printf(\"%s\", my_function(\"test input\"));\n    return 0;\n}", "display_name": "C (beta)"}, {"dropdown_rank": 6, "closest_languages": ["c", "java"], "prism": "cpp", "codemirror": "text/x-c++src", "codewars": "cpp", "short_name": "cpp", "case_convention": "camel", "notepad_template": "#include <iostream>\nusing namespace std;\n\nstring myFunction (const string& arg)\n{\n    // write the body of your function here\n    return \"running with \" + arg;\n}\n\nint main ()\n{\n    // run your function through some test cases here\n    // remember: debugging is half the battle!\n    cout << myFunction (\"test input\");\n    return 0;\n}", "display_name": "C++ (beta)"}, {"dropdown_rank": 7, "closest_languages": ["java"], "prism": "csharp", "codemirror": "text/x-csharp", "codewars": "csharp", "short_name": "csharp", "case_convention": "camel", "notepad_template": "using System;\n\nnamespace Solution\n{\n    class Solution\n    {\n        public static string MyFunction(string arg)\n        {\n            // Write the body of your function here\n            return $\"Running with {arg}\";\n        }\n\n        public static void Main(string[] args)\n        {\n            // Run your function through some test cases here.\n            // Remember: debugging is half the battle!\n            string testInput = \"test input\";\n            Console.WriteLine(MyFunction(testInput));\n        }\n    }\n}\n", "display_name": "C# (beta)"}, {"dropdown_rank": 9, "closest_languages": ["javascript"], "prism": "php", "codemirror": "text/x-php", "codewars": "php", "short_name": "php", "case_convention": "camel", "notepad_template": "<?php\n\nfunction myFunction($arg) {\n    // write the body of your function here\n    return \"running with \" . $arg;\n}\n\n// run your function through some test cases here\n// remember: debugging is half the battle!\necho myFunction(\"test input\");\n\n?>", "display_name": "PHP (beta)"}, {"closest_languages": ["java"], "prism": "swift", "codewars": "swift", "short_name": "swift", "case_convention": "camel", "display_name": "Swift (beta)"}, {"dropdown_rank": 8, "closest_languages": ["c", "java"], "prism": "objectivec", "codemirror": "text/x-objectivec", "short_name": "objectivec", "case_convention": "camel", "notepad_template": "#import <Foundation/Foundation.h>\n#import <stdio.h>\n\n@interface Solution : NSObject\n\n+ (NSString *)myFunction:(NSString *)arg;\n\n@end\n\n@implementation Solution\n\n+ (NSString *)myFunction:(NSString *)arg\n{\n  // write the body of your function here\n  return [@\"running with \" stringByAppendingString:arg];\n}\n\n@end\n\nint main (int argc, const char * argv[])\n{\n  @autoreleasepool {\n    // run your function through some test cases here\n    // remember: debugging is half the battle!\n    NSString * result = [Solution myFunction:@\"test input\"];\n    printf(\"%s\", [result UTF8String]);\n  }\n}", "display_name": "Objective-C (beta)"}], "next_step_type_enum": {"login": "_NEXT_STEP_TYPE_LOGIN_", "purchase": "_NEXT_STEP_TYPE_PURCHASE_", "done": "_NEXT_STEP_TYPE_DONE_", "question": "_NEXT_STEP_TYPE_QUESTION_"}, "CACHEBUST_QUERY_STR": "?bust=135", "DEFAULT_C18N_LANGUAGE": {"dropdown_rank": 1, "prism": "python", "codemirror": "text/x-python", "codewars": "python", "short_name": "python", "case_convention": "snake", "notepad_template": "def my_function(arg):\n    # write the body of your function here\n    return 'running with %s' % arg\n\n# run your function through some test cases here\n# remember: debugging is half the battle!\nprint my_function('test input')\n", "display_name": "Python"}};

        
        window.JS_VARS = {"questions_fully_attempted": ["largest-stack", "find-in-ordered-set", "stock-price", "queue-two-stacks", "which-appears-twice", "find-rotation-point", "matching-parens", "reverse-string-in-place", "balanced-binary-tree", "compress-url-list", "bst-checker", "bracket-validator", "permutation-palindrome", "temperature-tracker", "inflight-entertainment", "recursive-string-permutations", "shuffle", "highest-product-of-3", "top-scores", "simulate-5-sided-die", "reverse-linked-list", "linked-list-cycles", "merging-ranges", "second-largest-item-in-bst", "find-duplicate-optimize-for-space", "rectangular-love", "word-cloud", "two-egg-problem", "simulate-7-sided-die", "nth-fibonacci", "product-of-other-numbers", "find-unique-int-among-duplicates", "cake-thief", "delete-node", "kth-to-last-node-in-singly-linked-list", "reverse-words"], "url_content_type": "question"};
        

        
    </script>



    

    
    <script type="text/javascript" src="./06.Rectangular Love _ Interview Cake_files/saved_resource"></script>
    <script type="text/javascript">
        Stripe.setPublishableKey('pk_live_4wtgGTkgBtk4YIB9JDjYdOD0');
    </script>
    

    
    
    <div id="fb-root" class=" fb_reset"><div style="position: absolute; top: -10000px; height: 0px; width: 0px;"><div><iframe name="fb_xdm_frame_https" frameborder="0" allowtransparency="true" allowfullscreen="true" scrolling="no" id="fb_xdm_frame_https" aria-hidden="true" title="Facebook Cross Domain Communication Frame" tabindex="-1" src="./06.Rectangular Love _ Interview Cake_files/iPrOY23SGAp.html" style="border: none;"></iframe></div></div><div style="position: absolute; top: -10000px; height: 0px; width: 0px;"><div></div></div></div>
    <script>(function(d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) return;
        js = d.createElement(s); js.id = id;
        js.src = "//connect.facebook.net/en_US/all.js#xfbml=1&appId=149278655279066";
        fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));</script>

    <script id="twitter-wjs" src="./06.Rectangular Love _ Interview Cake_files/widgets.js"></script>
    

    
    
        
            <script type="text/ng-template" id="/partials/animation.html"><div class="animation-wrapper">
    <div class="animation" id="Stage-[[getCompId()]]" ng-class="getCompId()">
    </div>
</div>
</script>
        
    
        
            <script type="text/ng-template" id="/partials/animation_iframe.html"><div class="animation-iframe-wrapper">
    <iframe class="animation-iframe animation-iframe-[[getCompId()]]"></iframe>
</div>
</script>
        
    
        
            <script type="text/ng-template" id="/partials/code-inline.html"><span class="ic-code-inline" ng-transclude></span></script>
        
    
        
            <script type="text/ng-template" id="/partials/code-block.html"><pre class="language-[[language]]">
  <code class="language-[[language]]" ng-transclude></code>
</pre>
<span class="warning-message" ng-show="warningMessage" ng-bind="warningMessage"></span>
<div class="select-content-language" ng-hide="staticLanguage" ng-cloak>

    <select ng-model="contentLanguage" ng-options="language.display_name for language in contentLanguages" ng-change="updateLanguage(contentLanguage)"></select>

</div>
<span class="only-content-language" ng-show="staticLanguage" ng-bind="onlyLanguage"></span>
<!-- FE TESTING <button class="run-tests" ng-show="showTests && hasTests" ng-click="runTests()">TEST</button> -->
</script>
        
    
        
            <script type="text/ng-template" id="/partials/complexity.html"><span class="complexity"><span math>O([[getComplexityMarkup()]])</span></span>
</script>
        
    
        
            <script type="text/ng-template" id="/partials/concept.html"><span class="concept-wrapper" ng-init="showConcept=false">

    <span ng-click="showConcept=!showConcept" class="concept">
        <span class="concept-name" ng-transclude></span>
        <span class="show-concept-icon">&#8628;</span>
    </span>

    <div ng-show="showConcept" class="slide concept-explanation" ng-include="conceptPartialUrl">
        Loading...
    </div>

</span>
</script>
        
    
        
            <script type="text/ng-template" id="/partials/function.html"><span class="ic-function"><span class="name" ng-transclude></span>()</span>
</script>
        
    
        
            <script type="text/ng-template" id="/partials/heading.html"><h3 class="heading slide" ng-show="shouldShow()" ng-cloak>[[getHeadingText()]]</h3>
</script>
        
    
        
            <script type="text/ng-template" id="/partials/inline-footnote.html"><span class="footnote-wrapper" ng-init="show = false">
    <span class="show-footnote-icon" ng-click="show = !show">&#8628;</span>
    <p class="footnote" ng-transclude ng-show="show">Loading...</p>
</span>
</script>
        
    
        
            <script type="text/ng-template" id="/partials/loading.html"><div class="Loading">
    Loading...
</div>
</script>
        
    
        
            <script type="text/ng-template" id="/partials/math.html"><span class="ic-math" ng-class="{'block': isBlock()}" ng-transclude></span>
</script>
        
    
        
            <script type="text/ng-template" id="/partials/note.html"><div class="note slide" ng-show="shouldShow()">
    <div class="note-content" ng-transclude>
    </div>
</div>
</script>
        
    
        
            <script type="text/ng-template" id="/partials/section.html"><div class="section-wrapper" ng-class="getSectionClass()" ng-init="ready=false" ng-show="shouldShow()">
    <span heading="[[section]]" hide-heading="[[hideHeading]]"></span>

    <div class="section" ng-class="getSectionClass()" ng-transclude>
    </div>

    
</div>
</script>
        
    
        
            <script type="text/ng-template" id="/partials/variable.html"><span class="ic-variable" ng-transclude></span>
</script>
        
    
        
            <script type="text/ng-template" id="/partials/words.html"><span class="ic-words" ng-transclude></span>
</script>
        
    


    <!-- load current-user json with initial http request -->
    <div class="hidden" data-preload-resource="/api/v1/current-user/" data-thejson="{&quot;id&quot;:2385549,&quot;username&quot;:&quot;gokumd&quot;,&quot;email&quot;:&quot;gokumd@gmail.com&quot;,&quot;date_joined&quot;:&quot;2016-01-02T20:29:37.549407+00:00&quot;,&quot;first_name&quot;:&quot;Goku&quot;,&quot;last_name&quot;:&quot;Mohandas&quot;,&quot;full_name&quot;:&quot;Goku Mohandas&quot;,&quot;short_name&quot;:&quot;Goku&quot;,&quot;is_anonymous&quot;:false,&quot;is_on_last_question&quot;:false,&quot;percent_done&quot;:66,&quot;num_questions_done&quot;:29,&quot;num_questions_remaining&quot;:15,&quot;recruiting_is_interested_in_intros&quot;:true,&quot;is_full_access&quot;:true,&quot;first_payment_date&quot;:&quot;2016-01-02T22:17:39.210063Z&quot;,&quot;last_payment_date&quot;:&quot;2016-01-02T22:17:37Z&quot;,&quot;num_free_questions_left&quot;:0,&quot;terms_has_agreed_to_latest&quot;:false,&quot;preferred_content_language&quot;:&quot;python&quot;,&quot;preferred_notepad_language&quot;:&quot;python&quot;,&quot;is_staff&quot;:false,&quot;auth_providers_human_readable_list&quot;:&quot;Google&quot;,&quot;num_auth_providers&quot;:1,&quot;auth_email&quot;:&quot;gokumd@gmail.com&quot;}">
        {"id":2385549,"username":"gokumd","email":"gokumd@gmail.com","date_joined":"2016-01-02T20:29:37.549407+00:00","first_name":"Goku","last_name":"Mohandas","full_name":"Goku Mohandas","short_name":"Goku","is_anonymous":false,"is_on_last_question":false,"percent_done":66,"num_questions_done":29,"num_questions_remaining":15,"recruiting_is_interested_in_intros":true,"is_full_access":true,"first_payment_date":"2016-01-02T22:17:39.210063Z","last_payment_date":"2016-01-02T22:17:37Z","num_free_questions_left":0,"terms_has_agreed_to_latest":false,"preferred_content_language":"python","preferred_notepad_language":"python","is_staff":false,"auth_providers_human_readable_list":"Google","num_auth_providers":1,"auth_email":"gokumd@gmail.com"}
    </div>

    

    <!-- Login Modal -->
    <div ng-controller="LoginModalCtrl" class="modal fade login-modal ng-scope" id="loginModal" tabindex="-1" role="dialog" aria-labelledby="Log In" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-body">
                    <h3 ng-bind="note" class="ng-binding">Log in to continue</h3>
                    <button type="button" ng-show="closeable" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                    <div class="login-btns">
    <a ng-href="/auth/login/github/?next=%2Fnext" class="btn btn-soc-github" href="https://www.interviewcake.com/auth/login/github/?next=%2Fnext"><i class="fa fa-github"></i> | Log in with Github</a>
    <a ng-href="/auth/login/google-oauth2/?next=%2Fnext" class="btn btn-soc-google-plus" href="https://www.interviewcake.com/auth/login/google-oauth2/?next=%2Fnext"><i class="fa my-fa-google-plus"></i> | Log in with Google</a>
    <a ng-href="/auth/login/facebook/?next=%2Fnext" class="btn btn-soc-facebook" href="https://www.interviewcake.com/auth/login/facebook/?next=%2Fnext"><i class="fa my-fa-facebook"></i> | Log in with Facebook</a>
</div>
<p class="login-reassurance">
    <small>
        We'll never post on your wall or message your friends.
    </small>
</p>

                </div>
            </div>
        </div>
    </div>


    

    <input type="hidden" name="csrfmiddlewaretoken" value="xDDBPjhxCTG9B1CCFZXLzw0uuIMaomJB4c2X7osr8sYQq6OI3uc46focPx2DCAXQ">
<div id="loading">
. . .
</div>


<link href="./06.Rectangular Love _ Interview Cake_files/css(1)" rel="stylesheet" type="text/css">

<iframe name="stripeXDM_default680756_provider" id="stripeXDM_default680756_provider" src="./06.Rectangular Love _ Interview Cake_files/channel.html" frameborder="0" style="position: absolute; top: -2000px; left: 0px;"></iframe><iframe id="rufous-sandbox" scrolling="no" frameborder="0" allowtransparency="true" allowfullscreen="true" style="position: absolute; visibility: hidden; display: none; width: 0px; height: 0px; padding: 0px; border: none;" title="Twitter analytics iframe" src="./06.Rectangular Love _ Interview Cake_files/saved_resource(1).html"></iframe><span style="display: none;"><iframe style="display: none !important;" id="_olark_framesocket57699" src="./06.Rectangular Love _ Interview Cake_files/storage.html"></iframe></span><div><div id="olark-wrapper" class="" data-reactid=".0"><style rel="stylesheet" type="text/css" data-reactid=".0.0">#olark-wrapper .olark-launch-button {
  background-color: #59a8c4 !important;
}
#olark-wrapper .olark-launch-button svg path {
  fill: #ffffff !important;
}
#olark-wrapper .olark-launch-button .olark-button-text {
  color: #ffffff !important;
}
#olark-wrapper .olark-top-bar {
  background-color: #59a8c4 !important;
  color: #ffffff !important;
  border-color: #469dbe !important;
}
#olark-wrapper .olark-top-bar-text {
  color: #ffffff !important;
}
#olark-wrapper .olark-top-bar-arrow {
  fill: #ffffff !important;
}
#olark-wrapper #olark-container .olark-visitor-message {
  background-color: rgba(89, 168, 196, 0.25) !important;
  border: none !important;
}
#olark-wrapper #olark-container .olark-form-send-button {
  background-color: #59a8c4 !important;
  color: #ffffff !important;
}
#olark-wrapper #olark-container .olark-feedback-form-button {
  background-color: #59a8c4 !important;
  color: #ffffff !important;
}
#olark-wrapper #olark-container .olark-branding-panel .olark-branding-cancel-button {
  background-color: #59a8c4 !important;
  border: none !important;
  color: #ffffff !important;
}
#olark-wrapper #olark-container .olark-branding-panel .olark-branding-go-button {
  border: none !important;
  background: rgba(89, 168, 196, 0.35) !important;
}
#olark-wrapper .olark-end-chat-flag {
  fill: #59a8c4 !important;
}
#olark-wrapper #olark-container .olark-form-confirmation-icon .olark-launch-button-icon {
  fill: #59a8c4 !important;
}
#olark-wrapper #olark-container .olark-form-input:focus {
  border-color: #59a8c4 !important;
}
#olark-wrapper #olark-container .olark-form-message-input:focus {
  border-color: #59a8c4 !important;
}
</style><button class="olark-launch-button" data-reactid=".0.2"><svg x="0px" y="0px" viewBox="0 0 28 18" data-reactid=".0.2.0"><path fill="#ffffff" d="M28,3.2C28,1.5,26.5,0,24.8,0H3.2C1.5,0,0,1.5,0,3.2v11.5C0,16.5,1.5,18,3.2,18h21.5c1.8,0,3.2-1.5,3.2-3.2 V3.2z M24.7,14.8c-0.2,0.1-0.4,0.2-0.6,0.2c-0.2,0-0.4-0.1-0.6-0.3l-5-5.3l-3.6,3c-0.3,0.2-0.6,0.3-0.9,0.3s-0.7-0.1-0.9-0.4l-3.6-3 l-5,5.3c-0.2,0.2-0.4,0.3-0.6,0.3c-0.2,0-0.4-0.1-0.6-0.2c-0.3-0.3-0.4-0.8,0-1.2l4.9-5.3L3.3,4.5C3,4.2,2.9,3.6,3.2,3.3 C3.5,2.9,4,2.9,4.4,3.2l9.6,7.9l9.6-7.9c0.4-0.3,0.9-0.2,1.2,0.1c0.3,0.4,0.2,0.9-0.1,1.2l-4.8,3.9l4.9,5.3 C25.1,14,25,14.5,24.7,14.8z" data-reactid=".0.2.0.0"></path></svg><div class="olark-notification-badge olark-hidden" data-reactid=".0.2.1"><div class="olark-notification-badge-text" data-reactid=".0.2.1.0">0</div></div></button><div id="olark-container" class="olark-hidden" data-reactid=".0.3"><div class="olark-top-bar" data-reactid=".0.3.0"><div class="olark-top-bar-text" data-reactid=".0.3.0.0">Send me a message!</div><div class="olark-top-bar-button" data-reactid=".0.3.0.1"><svg viewBox="0 0 15.1 8.9" fill="#ffffff" data-reactid=".0.3.0.1.0"><polygon class="olark-top-bar-arrow" points="0.2,1.4 7.6,8.9 15.1,1.4 13.7,0 7.6,6 1.6,0" data-reactid=".0.3.0.1.0.0"></polygon></svg></div></div><div class="olark-conversation-container olark-form-conversation-container olark-no-message-form" data-reactid=".0.3.1"><div class="olark-form-message" data-reactid=".0.3.1.0">Parker from Interview Cake here. You can reach my email inbox through this handy form!</div><div class="olark-form-container" data-reactid=".0.3.1.1"><form class="olark-form" novalidate="" data-reactid=".0.3.1.1.0"><div class="olark-form-input-container" data-reactid=".0.3.1.1.0.0:$fname"><input type="text" name="fname" class="olark-form-input-filled olark-form-input" id="olark-form-input-fname" tabindex="1" autocomplete="on" value="Goku Mohandas" required="" data-reactid=".0.3.1.1.0.0:$fname.0"><label class="olark-float-label" for="olark-form-input-fname" data-reactid=".0.3.1.1.0.0:$fname.1">click here and type your Name</label><span class="olark-required-asterisk" data-reactid=".0.3.1.1.0.0:$fname.2"><svg viewBox="0 0 20 20" x="0" y="0" fill="currentcolor" data-reactid=".0.3.1.1.0.0:$fname.2.0"><path d="M10,0C4.5,0,0,4.5,0,10c0,5.5,4.5,10,10,10s10-4.5,10-10C20,4.5,15.5,0,10,0z M13.8,13.6L12,15l-2-3L8,15l-1.8-1.4l2-2.8 L5,9.6l0.8-2.2L9,8.6L8.8,5h2.4L11,8.6l3.2-1.3L15,9.6l-3.2,1.1L13.8,13.6z" data-reactid=".0.3.1.1.0.0:$fname.2.0.0"></path></svg></span></div><div class="olark-form-input-container" data-reactid=".0.3.1.1.0.0:$email"><input type="email" name="email" class="olark-form-input-filled olark-form-input" id="olark-form-input-email" tabindex="2" autocomplete="on" value="gokumd@gmail.com" required="" data-reactid=".0.3.1.1.0.0:$email.0"><label class="olark-float-label" for="olark-form-input-email" data-reactid=".0.3.1.1.0.0:$email.1">click here and type your Email</label><span class="olark-required-asterisk" data-reactid=".0.3.1.1.0.0:$email.2"><svg viewBox="0 0 20 20" x="0" y="0" fill="currentcolor" data-reactid=".0.3.1.1.0.0:$email.2.0"><path d="M10,0C4.5,0,0,4.5,0,10c0,5.5,4.5,10,10,10s10-4.5,10-10C20,4.5,15.5,0,10,0z M13.8,13.6L12,15l-2-3L8,15l-1.8-1.4l2-2.8 L5,9.6l0.8-2.2L9,8.6L8.8,5h2.4L11,8.6l3.2-1.3L15,9.6l-3.2,1.1L13.8,13.6z" data-reactid=".0.3.1.1.0.0:$email.2.0.0"></path></svg></span></div><div class="olark-form-input-container" data-reactid=".0.3.1.1.0.0:$body"><div data-reactid=".0.3.1.1.0.0:$body.0"><div class="olark-form-message-input olark-clone-textarea" data-reactid=".0.3.1.1.0.0:$body.0.0" style="width: 330px !important; overflow-wrap: break-word;">Type a message...</div><textarea class="olark-form-message-input" tabindex="3" name="body" id="olark-form-input-body" placeholder="Type a message..." title="Type a message..." required="" data-reactid=".0.3.1.1.0.0:$body.0.1"></textarea></div><span class="olark-required-asterisk" data-reactid=".0.3.1.1.0.0:$body.2"><svg viewBox="0 0 20 20" x="0" y="0" fill="currentcolor" data-reactid=".0.3.1.1.0.0:$body.2.0"><path d="M10,0C4.5,0,0,4.5,0,10c0,5.5,4.5,10,10,10s10-4.5,10-10C20,4.5,15.5,0,10,0z M13.8,13.6L12,15l-2-3L8,15l-1.8-1.4l2-2.8 L5,9.6l0.8-2.2L9,8.6L8.8,5h2.4L11,8.6l3.2-1.3L15,9.6l-3.2,1.1L13.8,13.6z" data-reactid=".0.3.1.1.0.0:$body.2.0.0"></path></svg></span></div><button class="olark-form-send-button" type="submit" data-reactid=".0.3.1.1.0.2">Send</button></form></div></div></div></div></div></body></html>