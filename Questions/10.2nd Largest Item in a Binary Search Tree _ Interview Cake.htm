<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!-- saved from url=(0072)https://www.interviewcake.com/question/python/second-largest-item-in-bst -->
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><script async="" defer="true" src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/jquery.js"></script><script async="" defer="true" src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/visits"></script><script src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/nr-998.min.js"></script><script type="text/javascript" src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/track"></script><script type="text/javascript" src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/identify"></script><style type="text/css">@charset "UTF-8";[ng\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\:form{display:block;}</style>
    <script type="text/javascript" async="" src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/prum.min.js"></script><script type="text/javascript" async="" src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/f78ae8e419ed65a0b5d9f07bb19c8d3a987aef19.js"></script><script type="text/javascript" async="" src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/4774384.js"></script><script type="text/javascript" async="" src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/mixpanel-2-latest.min.js"></script><script type="text/javascript" async="" src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/0751fb0485a5b0be210d27b9cefd9842c5c65cc6.2.js"></script><script type="text/javascript" async="" src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/analytics.js"></script><script type="text/javascript" async="" src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/fbevents.js"></script><script type="text/javascript" async="" src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/conversion_async.js"></script><script id="facebook-jssdk" src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/all.js"></script><script type="text/javascript" async="" src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/analytics.min.js"></script><script type="text/javascript">
        
        window.IC = window.IC || {};
        window.IC.currentUser = JSON.parse('{"id":2385549,"username":"gokumd","email":"gokumd@gmail.com","date_joined":"2016-01-02T20:29:37.549407+00:00","first_name":"Goku","last_name":"Mohandas","full_name":"Goku Mohandas","short_name":"Goku","is_anonymous":false,"is_on_last_question":false,"percent_done":66,"num_questions_done":29,"num_questions_remaining":15,"recruiting_is_interested_in_intros":true,"is_full_access":true,"first_payment_date":"2016-01-02T22:17:39.210063Z","last_payment_date":"2016-01-02T22:17:37Z","num_free_questions_left":0,"terms_has_agreed_to_latest":false,"preferred_content_language":"python","preferred_notepad_language":"python","is_staff":false,"auth_providers_human_readable_list":"Google","num_auth_providers":1,"auth_email":"gokumd@gmail.com"}');
        
    </script>


    
    <script src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/1358232165.js"></script>
    

    
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        
        <meta http-equiv="X-UA-Compatible" content="IE=Edge"><script type="text/javascript">window.NREUM||(NREUM={}),__nr_require=function(e,t,n){function r(n){if(!t[n]){var o=t[n]={exports:{}};e[n][0].call(o.exports,function(t){var o=e[n][1][t];return r(o||t)},o,o.exports)}return t[n].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<n.length;o++)r(n[o]);return r}({1:[function(e,t,n){function r(){}function o(e,t,n){return function(){return i(e,[(new Date).getTime()].concat(u(arguments)),t?null:this,n),t?void 0:this}}var i=e("handle"),a=e(2),u=e(3),c=e("ee").get("tracer"),f=NREUM;"undefined"==typeof window.newrelic&&(newrelic=f);var s=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit"],l="api-",p=l+"ixn-";a(s,function(e,t){f[t]=o(l+t,!0,"api")}),f.addPageAction=o(l+"addPageAction",!0),f.setCurrentRouteName=o(l+"routeName",!0),t.exports=newrelic,f.interaction=function(){return(new r).get()};var d=r.prototype={createTracer:function(e,t){var n={},r=this,o="function"==typeof t;return i(p+"tracer",[Date.now(),e,n],r),function(){if(c.emit((o?"":"no-")+"fn-start",[Date.now(),r,o],n),o)try{return t.apply(this,arguments)}finally{c.emit("fn-end",[Date.now()],n)}}}};a("setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(e,t){d[t]=o(p+t)}),newrelic.noticeError=function(e){"string"==typeof e&&(e=new Error(e)),i("err",[e,(new Date).getTime()])}},{}],2:[function(e,t,n){function r(e,t){var n=[],r="",i=0;for(r in e)o.call(e,r)&&(n[i]=t(r,e[r]),i+=1);return n}var o=Object.prototype.hasOwnProperty;t.exports=r},{}],3:[function(e,t,n){function r(e,t,n){t||(t=0),"undefined"==typeof n&&(n=e?e.length:0);for(var r=-1,o=n-t||0,i=Array(o<0?0:o);++r<o;)i[r]=e[t+r];return i}t.exports=r},{}],ee:[function(e,t,n){function r(){}function o(e){function t(e){return e&&e instanceof r?e:e?c(e,u,i):i()}function n(n,r,o){if(!p.aborted){e&&e(n,r,o);for(var i=t(o),a=v(n),u=a.length,c=0;c<u;c++)a[c].apply(i,r);var f=s[w[n]];return f&&f.push([y,n,r,i]),i}}function d(e,t){b[e]=v(e).concat(t)}function v(e){return b[e]||[]}function g(e){return l[e]=l[e]||o(n)}function m(e,t){f(e,function(e,n){t=t||"feature",w[n]=t,t in s||(s[t]=[])})}var b={},w={},y={on:d,emit:n,get:g,listeners:v,context:t,buffer:m,abort:a,aborted:!1};return y}function i(){return new r}function a(){(s.api||s.feature)&&(p.aborted=!0,s=p.backlog={})}var u="nr@context",c=e("gos"),f=e(2),s={},l={},p=t.exports=o();p.backlog=s},{}],gos:[function(e,t,n){function r(e,t,n){if(o.call(e,t))return e[t];var r=n();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(e,t,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return e[t]=r,r}var o=Object.prototype.hasOwnProperty;t.exports=r},{}],handle:[function(e,t,n){function r(e,t,n,r){o.buffer([e],r),o.emit(e,t,n)}var o=e("ee").get("handle");t.exports=r,r.ee=o},{}],id:[function(e,t,n){function r(e){var t=typeof e;return!e||"object"!==t&&"function"!==t?-1:e===window?0:a(e,i,function(){return o++})}var o=1,i="nr@id",a=e("gos");t.exports=r},{}],loader:[function(e,t,n){function r(){if(!h++){var e=y.info=NREUM.info,t=l.getElementsByTagName("script")[0];if(setTimeout(f.abort,3e4),!(e&&e.licenseKey&&e.applicationID&&t))return f.abort();c(b,function(t,n){e[t]||(e[t]=n)}),u("mark",["onload",a()],null,"api");var n=l.createElement("script");n.src="https://"+e.agent,t.parentNode.insertBefore(n,t)}}function o(){"complete"===l.readyState&&i()}function i(){u("mark",["domContent",a()],null,"api")}function a(){return(new Date).getTime()}var u=e("handle"),c=e(2),f=e("ee"),s=window,l=s.document,p="addEventListener",d="attachEvent",v=s.XMLHttpRequest,g=v&&v.prototype;NREUM.o={ST:setTimeout,CT:clearTimeout,XHR:v,REQ:s.Request,EV:s.Event,PR:s.Promise,MO:s.MutationObserver},e(1);var m=""+location,b={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-998.min.js"},w=v&&g&&g[p]&&!/CriOS/.test(navigator.userAgent),y=t.exports={offset:a(),origin:m,features:{},xhrWrappable:w};l[p]?(l[p]("DOMContentLoaded",i,!1),s[p]("load",r,!1)):(l[d]("onreadystatechange",o),s[d]("onload",r)),u("mark",["firstbyte",a()],null,"api");var h=0},{}]},{},["loader"]);</script><script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"licenseKey":"9e57878e2e","queueTime":0,"agent":"","applicationID":"7328113","applicationTime":335,"beacon":"bam.nr-data.net","errorBeacon":"bam.nr-data.net","transactionName":"ZVwAbEQCDUQCAUwKDFwWJE1YABdeDAwXDhpBUBZdGA4CXg0DSBNNRFAHT0VZMkIGEUwKDFxvC11BTQRSFw=="}</script>
        <link rel="shortcut icon" type="image/x-icon" href="https://www.interviewcake.com/images/favicon.ico?bust=135">
        <link rel="canonical" href="https://www.interviewcake.com/question/java/second-largest-item-in-bst">
        <meta name="description" content="Find the second largest element in a binary search tree.">

        

        <meta property="og:title" content="2nd Largest Item in a Binary Search Tree | Interview Cake">
        <meta property="og:description" content="Find the second largest element in a binary search tree.">
        <meta property="og:image" content="https://www.interviewcake.com/static/images/cake_white_on_blue_600_600_unrounded.png">
        <meta property="og:type" content="website">
        <meta property="og:locale" content="en_US">
        <meta property="og:site_name" content="Interview Cake: Programming Interview Questions and Tips">
        <meta property="fb:app_id" content="149278655279066">
        <meta property="fb:admins" content="514407734">
        <meta property="og:url" content="https://www.interviewcake.com/question/java/second-largest-item-in-bst">

        <meta name="twitter:card" content="summary">
        <meta name="twitter:site" content="@interviewcake">
        <meta name="twitter:title" content="2nd Largest Item in a Binary Search Tree | Interview Cake">
        <meta name="twitter:description" content="Find the second largest element in a binary search tree.">
        <meta name="twitter:creator" content="@interviewcake">
        <meta name="twitter:image:src" content="https://www.interviewcake.com/static/images/cake_white_on_blue_600_600_unrounded.png">
        <meta name="twitter:domain" content="interviewcake.com">

        <title>2nd Largest Item in a Binary Search Tree | Interview Cake</title>
    


    

    
    <script type="text/javascript">
        window.analytics||(window.analytics=[]),window.analytics.methods=["identify","track","trackLink","trackForm","trackClick","trackSubmit","page","pageview","ab","alias","ready","group","on","once","off"],window.analytics.factory=function(a){return function(){var t=Array.prototype.slice.call(arguments);return t.unshift(a),window.analytics.push(t),window.analytics}};for(var i=0;i<window.analytics.methods.length;i++){var method=window.analytics.methods[i];window.analytics[method]=window.analytics.factory(method)}window.analytics.load=function(a){var t=document.createElement("script");t.type="text/javascript",t.async=!0,t.src=("https:"===document.location.protocol?"https://":"http://")+"d2dq2ahtl5zl1z.cloudfront.net/analytics.js/v1/"+a+"/analytics.min.js";var n=document.getElementsByTagName("script")[0];n.parentNode.insertBefore(t,n)},window.analytics.SNIPPET_VERSION="2.0.6",
        window.analytics.load("rowk0wc1g6"),
        window.analytics.page();
    </script>
    
    


    


    

        <link href="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/bootstrap.min.css" rel="stylesheet">
        <link href="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/bootstrap-glyphicons.css" rel="stylesheet">
        <link href="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/font-awesome.min.css" rel="stylesheet">
        <link href="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/katex.min.css" rel="stylesheet">
    
    
        
            <link rel="stylesheet" href="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/4d3ba14d6001.css" type="text/css" media="all">
        
    




<!--
<link href='http://fonts.googleapis.com/css?family=Raleway:500,700,100' rel='stylesheet' type='text/css'>
-->
<!--
<link href='http://fonts.googleapis.com/css?family=Arimo:400,700,400italic,700italic' rel='stylesheet' type='text/css'>
-->
<link href="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/css" rel="stylesheet" type="text/css">

<link rel="apple-touch-icon" href="https://www.interviewcake.com/images/cake_white_on_blue_128_128_unrounded.png">
<!--
thought maybe for headings. but nope.
<link href='http://fonts.googleapis.com/css?family=Open+Sans+Condensed:300,700,300italic' rel='stylesheet' type='text/css'>
<link href='http://fonts.googleapis.com/css?family=Droid+Sans:400,700' rel='stylesheet' type='text/css'>
-->




<meta name="50fc73d52056532c18787976ceb78fddb87b78b2" content="ceb4cec06fc4a780c7b31b85c07cf75d1ca58d9d">





<script type="text/javascript">
var _vwo_code=(function(){
var account_id=50155,
settings_tolerance=2000,
library_tolerance=2500,
use_existing_jquery=false,
// DO NOT EDIT BELOW THIS LINE
f=false,d=document;return{use_existing_jquery:function(){return use_existing_jquery;},library_tolerance:function(){return library_tolerance;},finish:function(){if(!f){f=true;var a=d.getElementById('_vis_opt_path_hides');if(a)a.parentNode.removeChild(a);}},finished:function(){return f;},load:function(a){var b=d.createElement('script');b.src=a;b.type='text/javascript';b.innerText;b.onerror=function(){_vwo_code.finish();};d.getElementsByTagName('head')[0].appendChild(b);},init:function(){settings_timer=setTimeout('_vwo_code.finish()',settings_tolerance);var a=d.createElement('style'),b='body{opacity:0 !important;filter:alpha(opacity=0) !important;background:none !important;}',h=d.getElementsByTagName('head')[0];a.setAttribute('id','_vis_opt_path_hides');a.setAttribute('type','text/css');if(a.styleSheet)a.styleSheet.cssText=b;else a.appendChild(d.createTextNode(b));h.appendChild(a);this.load('//dev.visualwebsiteoptimizer.com/j.php?a='+account_id+'&u='+encodeURIComponent(d.URL)+'&r='+Math.random());return settings_timer;}};}());_vwo_settings_timer=_vwo_code.init();
</script><script src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/j.php" type="text/javascript"></script>

<script src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/application2.js" async="" defer="" data-cfasync="false"></script><style type="text/css">.olark-key,#hbl_code,#olark-data{display: none !important;}</style><style type="text/css">.fb_hidden{position:absolute;top:-10000px;z-index:10001}.fb_reposition{overflow:hidden;position:relative}.fb_invisible{display:none}.fb_reset{background:none;border:0;border-spacing:0;color:#000;cursor:auto;direction:ltr;font-family:"lucida grande", tahoma, verdana, arial, sans-serif;font-size:11px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:1;margin:0;overflow:visible;padding:0;text-align:left;text-decoration:none;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;word-spacing:normal}.fb_reset>div{overflow:hidden}.fb_link img{border:none}@keyframes fb_transform{from{opacity:0;transform:scale(.95)}to{opacity:1;transform:scale(1)}}.fb_animate{animation:fb_transform .3s forwards}
.fb_dialog{background:rgba(82, 82, 82, .7);position:absolute;top:-10000px;z-index:10001}.fb_reset .fb_dialog_legacy{overflow:visible}.fb_dialog_advanced{padding:10px;-moz-border-radius:8px;-webkit-border-radius:8px;border-radius:8px}.fb_dialog_content{background:#fff;color:#333}.fb_dialog_close_icon{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 0 transparent;_background-image:url(https://static.xx.fbcdn.net/rsrc.php/v3/yL/r/s816eWC-2sl.gif);cursor:pointer;display:block;height:15px;position:absolute;right:18px;top:17px;width:15px}.fb_dialog_mobile .fb_dialog_close_icon{top:5px;left:5px;right:auto}.fb_dialog_padding{background-color:transparent;position:absolute;width:1px;z-index:-1}.fb_dialog_close_icon:hover{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -15px transparent;_background-image:url(https://static.xx.fbcdn.net/rsrc.php/v3/yL/r/s816eWC-2sl.gif)}.fb_dialog_close_icon:active{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -30px transparent;_background-image:url(https://static.xx.fbcdn.net/rsrc.php/v3/yL/r/s816eWC-2sl.gif)}.fb_dialog_loader{background-color:#f6f7f9;border:1px solid #606060;font-size:24px;padding:20px}.fb_dialog_top_left,.fb_dialog_top_right,.fb_dialog_bottom_left,.fb_dialog_bottom_right{height:10px;width:10px;overflow:hidden;position:absolute}.fb_dialog_top_left{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/ye/r/8YeTNIlTZjm.png) no-repeat 0 0;left:-10px;top:-10px}.fb_dialog_top_right{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/ye/r/8YeTNIlTZjm.png) no-repeat 0 -10px;right:-10px;top:-10px}.fb_dialog_bottom_left{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/ye/r/8YeTNIlTZjm.png) no-repeat 0 -20px;bottom:-10px;left:-10px}.fb_dialog_bottom_right{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/ye/r/8YeTNIlTZjm.png) no-repeat 0 -30px;right:-10px;bottom:-10px}.fb_dialog_vert_left,.fb_dialog_vert_right,.fb_dialog_horiz_top,.fb_dialog_horiz_bottom{position:absolute;background:#525252;filter:alpha(opacity=70);opacity:.7}.fb_dialog_vert_left,.fb_dialog_vert_right{width:10px;height:100%}.fb_dialog_vert_left{margin-left:-10px}.fb_dialog_vert_right{right:0;margin-right:-10px}.fb_dialog_horiz_top,.fb_dialog_horiz_bottom{width:100%;height:10px}.fb_dialog_horiz_top{margin-top:-10px}.fb_dialog_horiz_bottom{bottom:0;margin-bottom:-10px}.fb_dialog_iframe{line-height:0}.fb_dialog_content .dialog_title{background:#6d84b4;border:1px solid #365899;color:#fff;font-size:14px;font-weight:bold;margin:0}.fb_dialog_content .dialog_title>span{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/yd/r/Cou7n-nqK52.gif) no-repeat 5px 50%;float:left;padding:5px 0 7px 26px}body.fb_hidden{-webkit-transform:none;height:100%;margin:0;overflow:visible;position:absolute;top:-10000px;left:0;width:100%}.fb_dialog.fb_dialog_mobile.loading{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/ya/r/3rhSv5V8j3o.gif) white no-repeat 50% 50%;min-height:100%;min-width:100%;overflow:hidden;position:absolute;top:0;z-index:10001}.fb_dialog.fb_dialog_mobile.loading.centered{width:auto;height:auto;min-height:initial;min-width:initial;background:none}.fb_dialog.fb_dialog_mobile.loading.centered #fb_dialog_loader_spinner{width:100%}.fb_dialog.fb_dialog_mobile.loading.centered .fb_dialog_content{background:none}.loading.centered #fb_dialog_loader_close{color:#fff;display:block;padding-top:20px;clear:both;font-size:18px}#fb-root #fb_dialog_ipad_overlay{background:rgba(0, 0, 0, .45);position:absolute;bottom:0;left:0;right:0;top:0;width:100%;min-height:100%;z-index:10000}#fb-root #fb_dialog_ipad_overlay.hidden{display:none}.fb_dialog.fb_dialog_mobile.loading iframe{visibility:hidden}.fb_dialog_content .dialog_header{-webkit-box-shadow:white 0 1px 1px -1px inset;background:-webkit-gradient(linear, 0% 0%, 0% 100%, from(#738ABA), to(#2C4987));border-bottom:1px solid;border-color:#1d4088;color:#fff;font:14px Helvetica, sans-serif;font-weight:bold;text-overflow:ellipsis;text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0;vertical-align:middle;white-space:nowrap}.fb_dialog_content .dialog_header table{-webkit-font-smoothing:subpixel-antialiased;height:43px;width:100%}.fb_dialog_content .dialog_header td.header_left{font-size:12px;padding-left:5px;vertical-align:middle;width:60px}.fb_dialog_content .dialog_header td.header_right{font-size:12px;padding-right:5px;vertical-align:middle;width:60px}.fb_dialog_content .touchable_button{background:-webkit-gradient(linear, 0% 0%, 0% 100%, from(#4966A6), color-stop(.5, #355492), to(#2A4887));border:1px solid #29487d;-webkit-background-clip:padding-box;-webkit-border-radius:3px;-webkit-box-shadow:rgba(0, 0, 0, .117188) 0 1px 1px inset, rgba(255, 255, 255, .167969) 0 1px 0;display:inline-block;margin-top:3px;max-width:85px;line-height:18px;padding:4px 12px;position:relative}.fb_dialog_content .dialog_header .touchable_button input{border:none;background:none;color:#fff;font:12px Helvetica, sans-serif;font-weight:bold;margin:2px -12px;padding:2px 6px 3px 6px;text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0}.fb_dialog_content .dialog_header .header_center{color:#fff;font-size:16px;font-weight:bold;line-height:18px;text-align:center;vertical-align:middle}.fb_dialog_content .dialog_content{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/y9/r/jKEcVPZFk-2.gif) no-repeat 50% 50%;border:1px solid #555;border-bottom:0;border-top:0;height:150px}.fb_dialog_content .dialog_footer{background:#f6f7f9;border:1px solid #555;border-top-color:#ccc;height:40px}#fb_dialog_loader_close{float:left}.fb_dialog.fb_dialog_mobile .fb_dialog_close_button{text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0}.fb_dialog.fb_dialog_mobile .fb_dialog_close_icon{visibility:hidden}#fb_dialog_loader_spinner{animation:rotateSpinner 1.2s linear infinite;background-color:transparent;background-image:url(https://static.xx.fbcdn.net/rsrc.php/v3/yD/r/t-wz8gw1xG1.png);background-repeat:no-repeat;background-position:50% 50%;height:24px;width:24px}@keyframes rotateSpinner{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}
.fb_iframe_widget{display:inline-block;position:relative}.fb_iframe_widget span{display:inline-block;position:relative;text-align:justify}.fb_iframe_widget iframe{position:absolute}.fb_iframe_widget_fluid_desktop,.fb_iframe_widget_fluid_desktop span,.fb_iframe_widget_fluid_desktop iframe{max-width:100%}.fb_iframe_widget_fluid_desktop iframe{min-width:220px;position:relative}.fb_iframe_widget_lift{z-index:1}.fb_hide_iframes iframe{position:relative;left:-10000px}.fb_iframe_widget_loader{position:relative;display:inline-block}.fb_iframe_widget_fluid{display:inline}.fb_iframe_widget_fluid span{width:100%}.fb_iframe_widget_loader iframe{min-height:32px;z-index:2;zoom:1}.fb_iframe_widget_loader .FB_Loader{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/y9/r/jKEcVPZFk-2.gif) no-repeat;height:32px;width:32px;margin-left:-16px;position:absolute;left:50%;z-index:4}</style><link id="habla_style_div" type="text/css" rel="stylesheet" href="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/df26100e954276593311a44753620fda.css"><style type="text/css">@media print {#habla_beta_container_do_not_rely_on_div_classes_or_names {display: none !important}}</style><link rel="stylesheet" href="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/theme.css" type="text/css"></head>
<body ng-app="prepApp" ng-init="questionIsEmbedded = false" class="user-is-full-access   ng-scope"><div id="olark" style="display: none;"><olark><iframe frameborder="0" id="olark-loader" src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/saved_resource.html"></iframe></olark></div>

<div class="print-header navbar-print-header navbar navbar-inverse">
    <div class="navbar-header">
        <span class="navbar-brand">
            <img src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/cake_white_20_21.png" class="logo">
            Interview Cake
        </span>
    </div>
</div>




<div class="navbar navbar-normal navbar-inverse ng-scope" role="navigation" ng-controller="HeaderCtrl" language="python">
    <div class="navbar-header">
        <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
            <span class="sr-only">Toggle navigation</span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
            <span class="icon-bar"></span>
        </button>
        <a class="navbar-brand" href="https://www.interviewcake.com/">
            Interview Cake
        </a>
    </div>

  <div class="collapse navbar-collapse">
        <ul class="nav navbar-nav navbar-left">
            <li>
                <a href="https://www.interviewcake.com/coding-interview-tips">Tips and Tricks</a>
            </li>

            <li class="dropdown">
                <a href="https://www.interviewcake.com/question/python/second-largest-item-in-bst" class="dropdown-toggle" data-toggle="dropdown" rel="nofollow">
                    Glossary <span class="caret"></span>
                </a>
                <ul class="dropdown-menu" role="menu">
                    <li>
                        <a href="https://www.interviewcake.com/big-o-notation-time-and-space-complexity">Big O Notation: <span complexity="n" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mclose">)</span></span></span></span></span></span></span>, <span complexity="n^2" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><msup><mi>n</mi><mn>2</mn></msup><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.814108em;"></span><span class="strut bottom" style="height: 1.06411em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathit">n</span><span class="vlist"><span class="" style="top: -0.363em; margin-right: 0.05em;"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span class="" style="font-size: 0em;">​</span></span>​</span></span></span><span class="mclose">)</span></span></span></span></span></span></span>, etc</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/article/logarithms">Logarithms</a>
                    </li>

                    <li role="separator" class="divider"></li>

                    <li>
                        <a href="https://www.interviewcake.com/concept/binary-search">Binary Search</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/counting-sort">Counting Sort</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/overlapping-subproblems">Overlapping Subproblems</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/memoization">Memoization</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/bottom-up">Bottom-Up Algorithms</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/lazy">Lazy Evaluation</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/garbage-collection">Garbage Collection</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/integer-overflow">Integer Overflow</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/js-closure">Closure</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/slice">Array Slicing</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/hashing">Hashing</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/mutable">Mutable vs Immutable</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/in-place">In-Place Operation</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/triangular-series">Triangular Series</a>
                    </li>

                    <li role="separator" class="divider"></li>

                    <li>
                        <a href="https://www.interviewcake.com/concept/array">Array</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/dynamic-array-amortized-analysis">Dynamic Array</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/hash-map">Hash Table</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/linked-list">Linked List</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/queue">Queue</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/stack">Stack</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/binary-tree">Binary Tree</a>
                    </li>

                    <li role="separator" class="divider"></li>

                    <li>
                        <a href="https://www.interviewcake.com/concept/binary-numbers">Binary Numbers</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/and">Bitwise AND</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/or">Bitwise OR</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/not">Bitwise NOT</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/xor">Bitwise XOR</a>
                    </li>
                    <li>
                        <a href="https://www.interviewcake.com/concept/bit-shift">Bit Shifting</a>
                    </li>
                </ul>
            </li>

            
            
            
            <li>
                
                <a href="https://www.interviewcake.com/all-questions/python">All Questions</a>
                
            </li>
            
            <li>
                
                
            </li>
        </ul>



        <ul class="nav navbar-nav navbar-right" ng-show="currentUserSet">

            
            <li>
                

                <a class="upgrade ng-hide" ng-hide="currentUser.is_full_access" href="https://www.interviewcake.com/upgrade">
                    <!--
                    <i class="fa fa-unlock-alt fa-lg" style="margin-right: 5px;" ></i>
                    -->

                    Get the full course

                    <span class="glyphicon glyphicon-chevron-right full-access-badge"></span>

</a>
            </li>
            



            
            <li class="dropdown language-dropdown ng-scope" ng-controller="NavbarTranslationCtrl" ng-show="contentLanguage&amp;&amp;currentUser.is_full_access ">
                <a rel="nofollow" href="https://www.interviewcake.com/question/python/second-largest-item-in-bst" class="dropdown-toggle ng-binding" data-toggle="dropdown">
                    Python <span class="caret"></span>
                </a>
                <ul class="dropdown-menu" role="menu">
                
                    <!-- ngRepeat: language in contentLanguages --><li ng-repeat="language in contentLanguages" class="ng-scope">
                        <a href="https://www.interviewcake.com/question/python/second-largest-item-in-bst" ng-click="updateLanguage(language, true)" class="ng-binding">Python</a>
                    </li><!-- end ngRepeat: language in contentLanguages --><li ng-repeat="language in contentLanguages" class="ng-scope">
                        <a href="https://www.interviewcake.com/question/python/second-largest-item-in-bst" ng-click="updateLanguage(language, true)" class="ng-binding">Ruby</a>
                    </li><!-- end ngRepeat: language in contentLanguages --><li ng-repeat="language in contentLanguages" class="ng-scope">
                        <a href="https://www.interviewcake.com/question/python/second-largest-item-in-bst" ng-click="updateLanguage(language, true)" class="ng-binding">Java</a>
                    </li><!-- end ngRepeat: language in contentLanguages --><li ng-repeat="language in contentLanguages" class="ng-scope">
                        <a href="https://www.interviewcake.com/question/python/second-largest-item-in-bst" ng-click="updateLanguage(language, true)" class="ng-binding">JavaScript</a>
                    </li><!-- end ngRepeat: language in contentLanguages --><li ng-repeat="language in contentLanguages" class="ng-scope">
                        <a href="https://www.interviewcake.com/question/python/second-largest-item-in-bst" ng-click="updateLanguage(language, true)" class="ng-binding">C (beta)</a>
                    </li><!-- end ngRepeat: language in contentLanguages --><li ng-repeat="language in contentLanguages" class="ng-scope">
                        <a href="https://www.interviewcake.com/question/python/second-largest-item-in-bst" ng-click="updateLanguage(language, true)" class="ng-binding">C++ (beta)</a>
                    </li><!-- end ngRepeat: language in contentLanguages -->
                
                </ul>
            </li>
            

            <li>
                <p class="navbar-text">
                    
                    'sup <a rel="nofollow" trackling="" the-event="Settings Link Click" href="https://www.interviewcake.com/account">Goku</a>.
                    
                    <span ng-show="currentUser.is_full_access" class="glyphicon glyphicon-star full-access-badge"></span>
                </p>
            </li>
            <li ng-hide="currentUser.is_anonymous">
                <a rel="nofollow" tracklink="" the-event="Logout Link Click" the-properties="{&quot;which&quot; : &quot;header top right&quot;}" href="https://www.interviewcake.com/auth/logout/?next=/" class="ng-isolate-scope">Log out</a>
            </li>

            <li ng-show="currentUser.is_anonymous" class="ng-hide">
                <a href="https://www.interviewcake.com/question/python/second-largest-item-in-bst" rel="nofollow" ng-click="loginClick(&#39;header top right&#39;)">Log in to save progress</a>
            </li>
        </ul>
    </div>

</div>


<div class="below-nav">

    <div class="ic-alerts">
        
        
    </div>

    

    
    

<div class="quiz ng-scope" ng-controller="PrepSeshApp">
    
        
            

<div ng-controller="NumberlineCtrl" class="numberline-wrapper  user-is-full-access ng-scope">

    <section ng-controller="NumberlineScrollingCtrl" class="numberline-scrolling ng-scope" ngc-scroll="setEdgeFadeIntensity()">
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/stock-price" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Apple Stocks">
    
    

            <span class="number">
                1
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/product-of-other-numbers" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Product of All Other Numbers">
    
    

            <span class="number">
                2
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/highest-product-of-3" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Highest Product of 3">
    
    

            <span class="number">
                3
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/merging-ranges" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Merging Meeting Times">
    
    

            <span class="number">
                4
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                unfinished
                           ">

    
    
        <a href="https://www.interviewcake.com/question/coin" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Making Change">
    
    

            <span class="number">
                5
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/rectangular-love" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Rectangular Love">
    
    

            <span class="number">
                6
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/temperature-tracker" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Temperature Tracker">
    
    

            <span class="number">
                7
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                unfinished
                           ">

    
    
        <a href="https://www.interviewcake.com/question/balanced-binary-tree" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Balanced Binary Tree">
    
    

            <span class="number">
                8
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/bst-checker" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Binary Search Tree Checker">
    
    

            <span class="number">
                9
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper current                                                              done                             ng-scope" ng-controller="NumberlineCurrentQuestionCtrl">

    
    
        <a href="https://www.interviewcake.com/question/second-largest-item-in-bst" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="2nd Largest Item in a Binary Search Tree">
    
    

            <span class="number">
                10
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                unfinished
                           ">

    
    
        <a href="https://www.interviewcake.com/question/compress-url-list" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="MillionGazillion">
    
    

            <span class="number">
                11
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                unfinished
                           ">

    
    
        <a href="https://www.interviewcake.com/question/find-in-ordered-set" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Find in Ordered Set">
    
    

            <span class="number">
                12
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/find-rotation-point" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Find Rotation Point">
    
    

            <span class="number">
                13
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/inflight-entertainment" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Inflight Entertainment">
    
    

            <span class="number">
                14
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/nth-fibonacci" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Compute nth Fibonacci Number">
    
    

            <span class="number">
                15
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                unfinished
                           ">

    
    
        <a href="https://www.interviewcake.com/question/cake-thief" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="The Cake Thief">
    
    

            <span class="number">
                16
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                unfinished
                           ">

    
    
        <a href="https://www.interviewcake.com/question/js-scope" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="JavaScript Scope">
    
    

            <span class="number">
                17
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                unfinished
                           ">

    
    
        <a href="https://www.interviewcake.com/question/js-whats-wrong" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="What&#39;s Wrong with This JavaScript?">
    
    

            <span class="number">
                18
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                unfinished
                           ">

    
    
        <a href="https://www.interviewcake.com/question/queue-two-stacks" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Queue Two Stacks">
    
    

            <span class="number">
                19
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/largest-stack" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Largest Stack">
    
    

            <span class="number">
                20
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                unfinished
                           ">

    
    
        <a href="https://www.interviewcake.com/question/find-unique-int-among-duplicates" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="The Stolen Breakfast Drone">
    
    

            <span class="number">
                21
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/delete-node" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Delete Node">
    
    

            <span class="number">
                22
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/linked-list-cycles" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Does This Linked List Have A Cycle?">
    
    

            <span class="number">
                23
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/reverse-linked-list" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Reverse A Linked List">
    
    

            <span class="number">
                24
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/kth-to-last-node-in-singly-linked-list" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Kth to Last Node in a Singly-Linked List">
    
    

            <span class="number">
                25
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/reverse-string-in-place" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Reverse String in Place">
    
    

            <span class="number">
                26
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/reverse-words" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Reverse Words">
    
    

            <span class="number">
                27
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/matching-parens" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Parenthesis Matching">
    
    

            <span class="number">
                28
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/bracket-validator" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Bracket Validator">
    
    

            <span class="number">
                29
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/permutation-palindrome" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Permutation Palindrome">
    
    

            <span class="number">
                30
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/recursive-string-permutations" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Recursive String Permutations">
    
    

            <span class="number">
                31
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                unfinished
                           ">

    
    
        <a href="https://www.interviewcake.com/question/top-scores" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Top Scores">
    
    

            <span class="number">
                32
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/which-appears-twice" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Which Appears Twice">
    
    

            <span class="number">
                33
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/word-cloud" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Word Cloud Data">
    
    

            <span class="number">
                34
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/shuffle" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="In-Place Shuffle">
    
    

            <span class="number">
                35
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                unfinished
                           ">

    
    
        <a href="https://www.interviewcake.com/question/single-rifle-check" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Single Riffle Shuffle">
    
    

            <span class="number">
                36
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/simulate-5-sided-die" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Simulate 5-sided die">
    
    

            <span class="number">
                37
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/simulate-7-sided-die" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Simulate 7-sided die">
    
    

            <span class="number">
                38
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/two-egg-problem" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Two Egg Problem">
    
    

            <span class="number">
                39
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                done
                           ">

    
    
        <a href="https://www.interviewcake.com/question/find-duplicate-optimize-for-space" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Find Repeat, Space Edition">
    
    

            <span class="number">
                40
            </span>

            
                <i class="fa fa-check"></i>
            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                unfinished
                           ">

    
    
        <a href="https://www.interviewcake.com/question/find-duplicate-optimize-for-space-beast-mode" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Find Repeat, Space Edition BEAST MODE">
    
    

            <span class="number">
                41
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                unfinished
                           ">

    
    
        <a href="https://www.interviewcake.com/question/find-duplicate-files" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Find Duplicate Files">
    
    

            <span class="number">
                42
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                unfinished
                           ">

    
    
        <a href="https://www.interviewcake.com/question/merge-sorted-arrays" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="Merge Sorted Arrays">
    
    

            <span class="number">
                43
            </span>

            

    
    
        </a>
    
    
</div>

            
        
            
                <div class="numberline-number-wrapper 
                           
                                unfinished
                           ">

    
    
        <a href="https://www.interviewcake.com/question/url-shortener" title="" data-toggle="tooltip" data-placement="bottom" data-delay="{ &quot;show&quot;: 0, &quot;hide&quot;: 0}" data-original-title="URL Shortener">
    
    

            <span class="number">
                44
            </span>

            

    
    
        </a>
    
    
</div>

            
        
    </section>

    <div class="edge-fade left" ng-style="{left: edgeFadePositions.left + &#39;px&#39;}" style="left: -160px;"></div>
    <div class="edge-fade right" ng-style="{right: edgeFadePositions.right + &#39;px&#39;}" style="right: 0px;"></div>

    <div class="scroll-on-hover left ng-hide" ng-mouseenter="scrollDirection = &#39;-&#39;; toggleScroll()" ng-mouseleave="toggleScroll()" ng-hide="edgeFadePositions.left === -edgeFadeWidth">
    </div>
    <div class="scroll-on-hover right" ng-mouseenter="scrollDirection = &#39;+&#39;; toggleScroll()" ng-mouseleave="toggleScroll()" ng-hide="edgeFadePositions.right &lt;= -(edgeFadeWidth - 2)"> <!-- cuz chrome only scrolls to 2px less than it can -->
    </div>

</div>

        
    

    
        <div class="free-questions-left ng-hide" ng-show="currentUserSet &amp;&amp; !currentUser.is_full_access">


<p>
<span ng-show="currentUser.getNumFreeQuestionsLeft()&gt;0" class="ng-hide">

    <span ng-show="currentUser.getNumFreeQuestionsLeft()==1" class="ng-hide">Just </span>
    <strong class="num ng-binding">0</strong>

</span>
<span ng-show="currentUser.getNumFreeQuestionsLeft()==0">
    No
</span>

more free question<span ng-show="currentUser.getNumFreeQuestionsLeft() != 1">s</span>

left!
</p>



<a href="https://www.interviewcake.com/upgrade" class="btn btn-default btn-sm btn-rarr">
    Upgrade Now
</a>

</div>

    

    
    <div class="wrapper-hack" ng-init="slug=&#39;second-largest-item-in-bst&#39;">
<div class="card ng-scope" ng-class="{&#39;started&#39;: btnPresses.length &gt; 0}" ng-controller="CardCtrl">

    <div class="sections">
        
    <div>
<span class="question-data" data-name="2nd Largest Item in a Binary Search Tree" data-meta_desc="Find the second largest element in a binary search tree." data-title="" data-meta_keywords="" data-weight="1" data-difficulty="10" data-num-hints="6" data-num-gotchas="3" ng-init="setNumHints(6); setNumGotchas(3); ">
</span>

<div class="section-wrapper ng-isolate-scope section-question" ng-class="getSectionClass()" ng-init="ready=false" ng-show="shouldShow()" section="question">
    <h3 class="heading slide ng-binding ng-isolate-scope ng-hide" ng-show="shouldShow()" heading="question" hide-heading=""></h3>

    <div class="section section-question" ng-class="getSectionClass()" ng-transclude="">

<p class="ng-scope">
<strong>
Write a function to find the 2nd largest element in a <span concept="bst" class="ng-isolate-scope"><span class="concept-wrapper" ng-init="showConcept=false">

    <span ng-click="showConcept=!showConcept" class="concept">
        <span class="concept-name" ng-transclude=""><span class="ng-scope">binary search tree</span></span>
        <span class="show-concept-icon">↴</span>
    </span>

    <!-- ngInclude: conceptPartialUrl --><div ng-show="showConcept" class="slide concept-explanation ng-scope ng-hide" ng-include="conceptPartialUrl"><div class="ng-scope">
<p>
A <strong>binary search tree</strong> is a <strong>binary tree</strong> in which, for each node:
</p>

<ol>
<li>
The node's value is greater than all values in the left subtree.
</li>
<li>
The node's value is less than all values in the right subtree.
</li>
</ol>

<!-- #illustrate -->

<p>
<strong>BST</strong>s are useful for quick lookups. If the tree is <strong>balanced</strong>, we can search for a given value in the tree in <span complexity="lgn" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mo>lg</mo><mrow><mi>n</mi></mrow><mo>)</mo></mrow><annotation encoding="application/x-tex">O(\lg{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mop">l<span style="margin-right: 0.01389em;">g</span></span><span class="mord textstyle uncramped"><span class="mord mathit">n</span></span><span class="mclose">)</span></span></span></span></span></span></span> time.
</p>
<script type="text/javascript"></script>
</div>
</div>

</span>
</span>.
</strong>
</p>

<p class="ng-scope">
Here's a sample binary tree node class:
</p>

<div code-block="question__second-largest-item-in-bst__binary-tree-node-class" language="python" translation-highlighting="dynamic" class="ng-scope ng-isolate-scope" style="width: 100%;"><pre class="  language-python">  <code class="  language-python" ng-transclude=""><span class="token keyword">class</span> <span class="token class-name">BinaryTreeNode</span><span class="token punctuation">:</span>

    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>value <span class="token operator">=</span> value
        self<span class="token punctuation">.</span>left  <span class="token operator">=</span> None
        self<span class="token punctuation">.</span>right <span class="token operator">=</span> None

    <span class="token keyword">def</span> <span class="token function">insert_left</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>left <span class="token operator">=</span> BinaryTreeNode<span class="token punctuation">(</span>value<span class="token punctuation">)</span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>left

    <span class="token keyword">def</span> <span class="token function">insert_right</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">:</span>
        self<span class="token punctuation">.</span>right <span class="token operator">=</span> BinaryTreeNode<span class="token punctuation">(</span>value<span class="token punctuation">)</span>
        <span class="token keyword">return</span> self<span class="token punctuation">.</span>right</code>
</pre>
<span class="warning-message ng-binding ng-hide" ng-show="warningMessage" ng-bind="warningMessage"></span>
<div class="select-content-language" ng-hide="staticLanguage">

    <select ng-model="contentLanguage" ng-options="language.display_name for language in contentLanguages" ng-change="updateLanguage(contentLanguage)" class="ng-pristine ng-untouched ng-valid"><option value="0" selected="selected" label="Python">Python</option><option value="1" label="Ruby">Ruby</option><option value="2" label="Java">Java</option><option value="3" label="JavaScript">JavaScript</option><option value="4" label="C (beta)">C (beta)</option><option value="5" label="C++ (beta)">C++ (beta)</option></select>

</div>
<span class="only-content-language ng-binding ng-hide" ng-show="staticLanguage" ng-bind="onlyLanguage"></span>
<!-- FE TESTING <button class="run-tests" ng-show="showTests && hasTests" ng-click="runTests()">TEST</button> -->
</div>
</div>

    
</div>

<div class="section-wrapper ng-isolate-scope section-gotchas ng-hide" ng-class="getSectionClass()" ng-init="ready=false" ng-show="shouldShow()" section="gotchas">
    <h3 class="heading slide ng-binding ng-isolate-scope ng-hide" ng-show="shouldShow()" heading="gotchas" hide-heading="">Gotchas</h3>

    <div class="section section-gotchas" ng-class="getSectionClass()" ng-transclude="">
<div class="note slide ng-isolate-scope ng-hide" ng-show="shouldShow()" note="" number="1" type="gotcha">
    <div class="note-content" ng-transclude="">
<p class="ng-scope">
Our first thought might be to do an <span concept="bst-in-order-traversal" class="ng-isolate-scope"><span class="concept-wrapper" ng-init="showConcept=false">

    <span ng-click="showConcept=!showConcept" class="concept">
        <span class="concept-name" ng-transclude=""><span class="ng-scope">in-order traversal of the BST</span></span>
        <span class="show-concept-icon">↴</span>
    </span>

    <!-- ngInclude: conceptPartialUrl --><div ng-show="showConcept" class="slide concept-explanation ng-scope ng-hide" ng-include="conceptPartialUrl"><div class="ng-scope">
<p>
Sometimes we have a BST and we want to <strong>go through the items in order from smallest to largest</strong>. This is called an "in-order traversal."
</p>

<p>
We can write a recursive algorithm for this:
</p>

<ul>
<li>
Everything in the left subtree is smaller, so print that first, then,
</li>
<li>
print the current node, then
</li>
<li>
print the right subtree.
</li>
</ul>

<div code-block="concept__bst-in-order-traversal__print-in-order" language="python" translation-highlighting="dynamic" class="ng-isolate-scope"><pre class=" language-python">  <code class=" language-python" ng-transclude=""><span class="token keyword">def</span> <span class="token function">inorder_print</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> node<span class="token punctuation">:</span>
        inorder_print<span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">)</span>
        <span class="token keyword">print</span> node<span class="token punctuation">.</span>value
        inorder_print<span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">)</span></code>
</pre>
<span class="warning-message ng-binding ng-hide" ng-show="warningMessage" ng-bind="warningMessage"></span>
<div class="select-content-language" ng-hide="staticLanguage">

    <select ng-model="contentLanguage" ng-options="language.display_name for language in contentLanguages" ng-change="updateLanguage(contentLanguage)" class="ng-pristine ng-untouched ng-valid"><option value="0" selected="selected" label="Python">Python</option><option value="1" label="Ruby">Ruby</option><option value="2" label="Java">Java</option><option value="3" label="JavaScript">JavaScript</option><option value="4" label="C (beta)">C (beta)</option><option value="5" label="C++ (beta)">C++ (beta)</option></select>

</div>
<span class="only-content-language ng-binding ng-hide" ng-show="staticLanguage" ng-bind="onlyLanguage"></span>
<!-- FE TESTING <button class="run-tests" ng-show="showTests && hasTests" ng-click="runTests()">TEST</button> -->
</div>

<p>
This takes <span complexity="n" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mclose">)</span></span></span></span></span></span></span> time (we're traversing the whole tree, so we're looking at all <span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span></span></span></span></span> items) and <span complexity="h" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>h</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(h)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mord mathit">h</span><span class="mclose">)</span></span></span></span></span></span></span> space, where <span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">h</span></span></span></span></span> is the <em>height</em> of the tree (this is the max depth of the call stack during our recursion).
</p>

<p>
If the tree is <strong>balanced</strong> its height is <span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mi>g</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">lgn</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.88888em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathit" style="margin-right: 0.03588em;">g</span><span class="mord mathit">n</span></span></span></span></span>, so we have <span complexity="lgn" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mo>lg</mo><mrow><mi>n</mi></mrow><mo>)</mo></mrow><annotation encoding="application/x-tex">O(\lg{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mop">l<span style="margin-right: 0.01389em;">g</span></span><span class="mord textstyle uncramped"><span class="mord mathit">n</span></span><span class="mclose">)</span></span></span></span></span></span></span> space. If we can't make any assumptions about the "shape" of the tree, in the worst case it's just one continuous line, giving us a height of <span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span></span></span></span></span>, and a space complexity of <span complexity="n" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mclose">)</span></span></span></span></span></span></span> for our recursive in-order traversal.
</p>

<script type="text/javascript">
            var elTranslations = {"code-blocks": {"concept__bst-in-order-traversal__print-in-order": {"python": {"code": "def inorder_print(node):\n    if node:\n        inorder_print(node.left)\n        print node.value\n        inorder_print(node.right)", "tests": "assertRunsWithoutError(inorder_print, a)"}, "javascript": {"code": "function inorderPrint(node) {\n    if (node) {\n        inorderPrint(node.left);\n        console.log(node.value);\n        inorderPrint(node.right);\n    }\n}", "tests": "assertRunsWithoutError(inorderPrint, a);"}, "ruby": {"code": "def inorder_print(node)\n    if node\n        inorder_print(node.left)\n        print node.value\n        inorder_print(node.right)\n    end\nend", "tests": "assertRunsWithoutError(method(:inorder_print), a)"}, "java": {"setup": "public class InorderPrint implements VoidFunctionToTest {\n    public void call() {\n        BinaryTreeNode a = new BinaryTreeNode(5);\n        BinaryTreeNode b = a.insertLeft(3);\n        BinaryTreeNode c = a.insertRight(8);\n        b.insertLeft(1);\n        b.insertRight(4);\n        c.insertLeft(7);\n        c.insertRight(9);\n\n        t.inorderPrint(a);\n    }\n}", "code": "public void inorderPrint(BinaryTreeNode node) {\n    if (node != null) {\n        inorderPrint(node.left);\n        System.out.println(node.value);\n        inorderPrint(node.right);\n    }\n}", "tests": "assertRunsWithoutError(t.new InorderPrint());"}, "c": {"code": "void inorderPrint(BinaryTreeNode* node) {\n    if (node != NULL) {\n        inorderPrint(node->left);\n        printf(\"%d\\n\", *(int *) node->value);\n        inorderPrint(node->right);\n    }\n}", "tests": "{\n    int value = 5;\n    BinaryTreeNode *a = binaryTreeNodeNew(&value, sizeof(int));\n    value = 3;\n    BinaryTreeNode *b = binaryTreeNodeInsertLeft(a, &value, sizeof(int));\n    value = 8;\n    BinaryTreeNode *c = binaryTreeNodeInsertRight(a, &value, sizeof(int));\n    value = 1;\n    binaryTreeNodeInsertLeft(b, &value, sizeof(int));\n    value = 4;\n    binaryTreeNodeInsertRight(b, &value, sizeof(int));\n    value = 7;\n    binaryTreeNodeInsertLeft(c, &value, sizeof(int));\n    value = 9;\n    binaryTreeNodeInsertRight(c, &value, sizeof(int));\n    inorderPrint(a);\n}"}, "cpp": {"code": "void inorderPrint(const BinaryTreeNode* node) {\n    if (node) {\n        inorderPrint(node->left_);\n        cout &lt;&lt; node->value_ &lt;&lt; endl;\n        inorderPrint(node->right_);\n    }\n}", "tests": "assertRunsWithoutError(\"inorderPrint\", &inorderPrint, a);"}}, "setup": {"ruby": "a = BinaryTreeNode.new(5)\nb = a.insert_left(3)\nc = a.insert_right(8)\nb.insert_left(1)\nb.insert_right(4)\nc.insert_left(7)\nc.insert_right(9)", "python": "a = BinaryTreeNode(5)\nb = a.insert_left(3)\nc = a.insert_right(8)\nb.insert_left(1)\nb.insert_right(4)\nc.insert_left(7)\nc.insert_right(9)", "javascript": "var a = new BinaryTreeNode(5);\nvar b = a.insertLeft(3);\nvar c = a.insertRight(8);\nb.insertLeft(1);\nb.insertRight(4);\nc.insertLeft(7);\nc.insertRight(9);", "cpp": "BinaryTreeNode *a, *b, *c;\n\nstruct SetupTestData\n{\n    SetupTestData()\n    {\n        a = new BinaryTreeNode(5);\n        b = a->insertLeft(3);\n        c = a->insertRight(8);\n        b->insertLeft(1);\n        b->insertRight(4);\n        c->insertLeft(7);\n        c->insertRight(9);\n    }\n};\n\nSetupTestData setupTestDataObject;"}}};
            var codeTypes = ['words', 'code-blocks', 'vars', 'funcs', 'code-inlines'];

            var mergeObjects = function(objectA, objectB) {
                objectA = objectA || {};
                objectB = objectB || {};
                for (var key in objectB) {
                    objectA[key] = objectB[key];
                }
                return objectA;
            }

            if (!window.contentTranslations) {
                window.contentTranslations = elTranslations;
            } else {
                for (var i=0; i<codeTypes.length; i++) {
                    window.contentTranslations[codeTypes[i]] = mergeObjects(window.contentTranslations[codeTypes[i]], elTranslations[codeTypes[i]]);
                }
            }
            </script>
</div>
</div>

</span>
</span> and return the second-to-last item. This means looking at <em>every node in the BST</em>. That would take <span complexity="n" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mclose">)</span></span></span></span></span></span></span> time and <span complexity="h" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>h</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(h)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mord mathit">h</span><span class="mclose">)</span></span></span></span></span></span></span> space, where <span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">h</span></span></span></span></span> is the max <em>height</em> of the tree (which is <span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>l</mi><mi>g</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">lgn</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.88888em; vertical-align: -0.19444em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.01968em;">l</span><span class="mord mathit" style="margin-right: 0.03588em;">g</span><span class="mord mathit">n</span></span></span></span></span> if the tree is <span concept="balanced-tree" class="ng-isolate-scope"><span class="concept-wrapper" ng-init="showConcept=false">

    <span ng-click="showConcept=!showConcept" class="concept">
        <span class="concept-name" ng-transclude=""><span class="ng-scope">balanced</span></span>
        <span class="show-concept-icon">↴</span>
    </span>

    <!-- ngInclude: conceptPartialUrl --><div ng-show="showConcept" class="slide concept-explanation ng-scope ng-hide" ng-include="conceptPartialUrl"><div class="ng-scope">
<p>
Formally, a tree is said to be <strong>balanced</strong> if the <em>difference between the depths</em> of <em>any node's</em> left tree and right tree is no greater than 1.
</p>

<p>
Thus a 'balanced' tree 'looks full', without any apparent chunks missing or any branches that end much earlier than other branches.
</p>
<script type="text/javascript"></script>
</div>
</div>

</span>
</span>, but could be as much as <span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.43056em;"></span><span class="strut bottom" style="height: 0.43056em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span></span></span></span></span> if not).
</p>
<p class="ng-scope">
We can do better than <span complexity="n" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mclose">)</span></span></span></span></span></span></span> time and <span complexity="h" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>h</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(h)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mord mathit">h</span><span class="mclose">)</span></span></span></span></span></span></span> space.
</p>
</div>
</div>
<div class="note slide ng-isolate-scope ng-hide" ng-show="shouldShow()" note="" number="2" type="gotcha">
    <div class="note-content" ng-transclude="">
<p class="ng-scope">
We can do this in <em>one</em> walk from top to bottom of our BST. This means <span complexity="h" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>h</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(h)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mord mathit">h</span><span class="mclose">)</span></span></span></span></span></span></span> time (again, that's <span complexity="lgn" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mo>lg</mo><mrow><mi>n</mi></mrow><mo>)</mo></mrow><annotation encoding="application/x-tex">O(\lg{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mop">l<span style="margin-right: 0.01389em;">g</span></span><span class="mord textstyle uncramped"><span class="mord mathit">n</span></span><span class="mclose">)</span></span></span></span></span></span></span> if the tree is balanced, <span complexity="n" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mclose">)</span></span></span></span></span></span></span> otherwise).
</p>
</div>
</div>
<div class="note slide ng-isolate-scope ng-hide" ng-show="shouldShow()" note="" number="3" type="gotcha">
    <div class="note-content" ng-transclude="">
<p class="ng-scope">
A clean recursive implementation will take <span complexity="h" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>h</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(h)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mord mathit">h</span><span class="mclose">)</span></span></span></span></span></span></span> space in the <span concept="call-stack" class="ng-isolate-scope"><span class="concept-wrapper" ng-init="showConcept=false">

    <span ng-click="showConcept=!showConcept" class="concept">
        <span class="concept-name" ng-transclude=""><span class="ng-scope">call stack</span></span>
        <span class="show-concept-icon">↴</span>
    </span>

    <!-- ngInclude: conceptPartialUrl --><div ng-show="showConcept" class="slide concept-explanation ng-scope ng-hide" ng-include="conceptPartialUrl"><div class="ng-scope">
<p>
The <strong>call stack</strong> is what a program uses to keep track of what function it's currently running and what to do with that function's return value.
</p>

<p>
Whenever you call a function, a new <strong>frame</strong> gets pushed onto the call stack, which is popped off when the function returns. As functions call other functions, the stack gets taller. In recursive functions, the stack can get as tall as the number of times the function calls itself. This can cause a problem: the stack has a limited amount of space, and if it gets too big you can get a <strong>stack overflow</strong> error.
</p>

<!-- #illustrate -->
<script type="text/javascript"></script>
</div>
</div>

</span>
</span>, but we can bring our algorithm down to <span complexity="1" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mn>1</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></span></span> space overall.
</p>
</div>
</div>
</div>

    
</div>


<div class="section-wrapper ng-isolate-scope section-breakdown ng-hide" ng-class="getSectionClass()" ng-init="ready=false" ng-show="shouldShow()" section="breakdown">
    <h3 class="heading slide ng-binding ng-isolate-scope ng-hide" ng-show="shouldShow()" heading="breakdown" hide-heading="">Breakdown</h3>

    <div class="section section-breakdown" ng-class="getSectionClass()" ng-transclude="">
<div class="note slide ng-isolate-scope ng-hide" ng-show="shouldShow()" note="" number="1" type="hint">
    <div class="note-content" ng-transclude="">
<p class="ng-scope">
Let's start by solving a simplified version of the problem and see if we can adapt our approach from there. <strong>How would we find <em>the largest</em> element in a BST?</strong>
</p>
</div>
</div>




<div class="note slide ng-isolate-scope ng-hide" ng-show="shouldShow()" note="" number="2" type="hint">
    <div class="note-content" ng-transclude="">
<p class="ng-scope">
A reasonable guess is to say <strong>the largest element is simply the "rightmost" element</strong>.
</p>

<p class="ng-scope">
So maybe we can start from the root and just step down right child pointers until we can't anymore (until the right child is <span class="ic-code-inline ng-isolate-scope" ng-transclude="" code-inline="question__second-largest-item-in-bst__none"><span class="ng-scope">None</span></span>). At that point the current node is the largest in the whole tree.
</p>

<p class="ng-scope">
Is this sufficient? We can prove it is by contradiction:
</p>

<p class="ng-scope">
If the largest element <em>were not</em> the "rightmost," then the largest element would either:
</p>

<ol class="ng-scope">
<li>
be in some ancestor node's left subtree, or
</li>
<li>
have a right child.
</li>
</ol>

<p class="ng-scope">
But each of these leads to a contradiction:
</p>

<ol class="ng-scope">
<li>
If the node is in some ancestor node's left subtree it's <em>smaller</em> than that ancestor node, so it's not the largest.
</li>
<li>
If the node has a right child that child is larger than it, so it's not the largest.
</li>
</ol>

<p class="ng-scope">
So the "rightmost" element <em>must be</em> the largest.
</p>

<p class="ng-scope">
<strong>How would we formalize getting the "rightmost" element in code?</strong>
</p>
</div>
</div>

<div class="note slide ng-isolate-scope ng-hide" ng-show="shouldShow()" note="" number="3" type="hint">
    <div class="note-content" ng-transclude="">
<p class="ng-scope">
We can use a simple recursive approach. At each step:
</p>

<ol class="ng-scope">
<li>
If there is a right child, that node and the subtree below it are all greater than the current node. So step down to this child and recurse.
</li>
<li>
Else there is no right child and we're already at the "rightmost" element, so we return its value.
</li>
</ol>

<div code-block="question__second-largest-item-in-bst__largest-recursive" language="python" translation-highlighting="dynamic" class="ng-scope ng-isolate-scope"><pre class="  language-python">  <code class="  language-python" ng-transclude=""><span class="token keyword">def</span> <span class="token function">find_largest</span><span class="token punctuation">(</span>root_node<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> root_node<span class="token punctuation">.</span>right<span class="token punctuation">:</span>
        <span class="token keyword">return</span> find_largest<span class="token punctuation">(</span>root_node<span class="token punctuation">.</span>right<span class="token punctuation">)</span>
    <span class="token keyword">return</span> root_node<span class="token punctuation">.</span>value</code>
</pre>
<span class="warning-message ng-binding ng-hide" ng-show="warningMessage" ng-bind="warningMessage"></span>
<div class="select-content-language" ng-hide="staticLanguage">

    <select ng-model="contentLanguage" ng-options="language.display_name for language in contentLanguages" ng-change="updateLanguage(contentLanguage)" class="ng-pristine ng-untouched ng-valid"><option value="0" selected="selected" label="Python">Python</option><option value="1" label="Ruby">Ruby</option><option value="2" label="Java">Java</option><option value="3" label="JavaScript">JavaScript</option><option value="4" label="C (beta)">C (beta)</option><option value="5" label="C++ (beta)">C++ (beta)</option></select>

</div>
<span class="only-content-language ng-binding ng-hide" ng-show="staticLanguage" ng-bind="onlyLanguage"></span>
<!-- FE TESTING <button class="run-tests" ng-show="showTests && hasTests" ng-click="runTests()">TEST</button> -->
</div>

<p class="ng-scope">
Okay, so we can find the largest element. <strong>How can we adapt this approach to find the <em>second</em> largest element?</strong>
</p>
</div>
</div>

<div class="note slide ng-isolate-scope ng-hide" ng-show="shouldShow()" note="" number="4" type="hint">
    <div class="note-content" ng-transclude="">
<p class="ng-scope">
Our first thought might be, "it's simply the parent of the largest element!" That seems obviously true when we imagine a nicely balanced tree like this one:
</p>


<div code-block="question__second-largest-item-in-bst__nicely-balanced-tree" language="none" translation-highlighting="static" class="ng-scope ng-isolate-scope"><pre class="  language-none">  <code class="  language-none" ng-transclude="">.        ( 5 )
        /     \
      (3)     (8)
     /  \     /  \
   (1)  (4) (7)  (9)</code>
</pre>
<span class="warning-message ng-binding ng-hide" ng-show="warningMessage" ng-bind="warningMessage"></span>
<div class="select-content-language ng-hide" ng-hide="staticLanguage">

    <select ng-model="contentLanguage" ng-options="language.display_name for language in contentLanguages" ng-change="updateLanguage(contentLanguage)" class="ng-pristine ng-untouched ng-valid"><option value="0" selected="selected" label="Python">Python</option><option value="1" label="Ruby">Ruby</option><option value="2" label="Java">Java</option><option value="3" label="JavaScript">JavaScript</option><option value="4" label="C (beta)">C (beta)</option><option value="5" label="C++ (beta)">C++ (beta)</option></select>

</div>
<span class="only-content-language ng-binding" ng-show="staticLanguage" ng-bind="onlyLanguage"></span>
<!-- FE TESTING <button class="run-tests" ng-show="showTests && hasTests" ng-click="runTests()">TEST</button> -->
</div>

<p class="ng-scope">
But what if the largest element itself has a left subtree?
</p>

<div code-block="question__second-largest-item-in-bst__largest-element-has-left-subtree" language="none" translation-highlighting="static" class="ng-scope ng-isolate-scope"><pre class="  language-none">  <code class="  language-none" ng-transclude="">.        ( 5 )
        /     \
      (3)     (8)
     /  \     /  \
   (1)  (4) (7)  (12)
                 /
               (10)
               /  \
             (9)  (11)</code>
</pre>
<span class="warning-message ng-binding ng-hide" ng-show="warningMessage" ng-bind="warningMessage"></span>
<div class="select-content-language ng-hide" ng-hide="staticLanguage">

    <select ng-model="contentLanguage" ng-options="language.display_name for language in contentLanguages" ng-change="updateLanguage(contentLanguage)" class="ng-pristine ng-untouched ng-valid"><option value="0" selected="selected" label="Python">Python</option><option value="1" label="Ruby">Ruby</option><option value="2" label="Java">Java</option><option value="3" label="JavaScript">JavaScript</option><option value="4" label="C (beta)">C (beta)</option><option value="5" label="C++ (beta)">C++ (beta)</option></select>

</div>
<span class="only-content-language ng-binding" ng-show="staticLanguage" ng-bind="onlyLanguage"></span>
<!-- FE TESTING <button class="run-tests" ng-show="showTests && hasTests" ng-click="runTests()">TEST</button> -->
</div>

<p class="ng-scope">
Here the parent of our largest is 8, but the second largest is 11!
</p>

<p class="ng-scope">
Drat, okay so the second largest isn't necessarily the parent of the largest...back to the drawing board...
</p>

<p class="ng-scope">
Wait. No. The second largest <em>is</em> the parent of the largest <em>if the largest does not have a left subtree</em>. If we can handle the case where the largest <em>does</em> have a left subtree, we can handle all cases, and we have a solution.
</p>

<p class="ng-scope">
So let's try sticking with this. <strong>How do we find the second largest when the largest has a left subtree?</strong>
</p>

</div>
</div>

<div class="note slide ng-isolate-scope ng-hide" ng-show="shouldShow()" note="" number="5" type="hint">
    <div class="note-content" ng-transclude="">
<!--
In this case, elements in the left subtree of the largest element must be larger than the parent of the largest element (because they're in its right subtree)! so the second largest must lie within that left subtree.

so our 2nd largest is definitely in the left subtree of the largest. but that subtree could be big. how do we know which element in that subtree is the 2nd largest.
-->
<p class="ng-scope">
<strong>It's the <em>largest</em> item in that left subtree!</strong> Whoa, we freaking <em>just wrote</em> a function for finding the largest element in a tree. We could use that here!
</p>

<p class="ng-scope">
How would we code this up?
</p>
</div>
</div>

<div class="note slide ng-isolate-scope ng-hide" ng-show="shouldShow()" note="" number="6" type="hint">
    <div class="note-content" ng-transclude="">

<div code-block="question__second-largest-item-in-bst__solution-h-space-call-stack" language="python" translation-highlighting="dynamic" class="ng-scope ng-isolate-scope"><pre class="  language-python">  <code class="  language-python" ng-transclude=""><span class="token keyword">def</span> <span class="token function">find_largest</span><span class="token punctuation">(</span>root_node<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> root_node <span class="token keyword">is</span> None<span class="token punctuation">:</span>
        <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">'Tree must have at least 1 node'</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> root_node<span class="token punctuation">.</span>right <span class="token keyword">is</span> <span class="token operator">not</span> None<span class="token punctuation">:</span>
        <span class="token keyword">return</span> find_largest<span class="token punctuation">(</span>root_node<span class="token punctuation">.</span>right<span class="token punctuation">)</span>
    <span class="token keyword">return</span> root_node<span class="token punctuation">.</span>value

<span class="token keyword">def</span> <span class="token function">find_second_largest</span><span class="token punctuation">(</span>root_node<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> root_node <span class="token keyword">is</span> None <span class="token operator">or</span> \
            <span class="token punctuation">(</span>root_node<span class="token punctuation">.</span>left <span class="token keyword">is</span> None <span class="token operator">and</span> root_node<span class="token punctuation">.</span>right <span class="token keyword">is</span> None<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">'Tree must have at least 2 nodes'</span><span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true"># case: we're currently at largest, and</span>
    <span class="token comment" spellcheck="true"># largest has a left subtree</span>
    <span class="token comment" spellcheck="true"># 2nd largest is largest in said subtree</span>
    <span class="token keyword">if</span> root_node<span class="token punctuation">.</span>left <span class="token operator">and</span> <span class="token operator">not</span> root_node<span class="token punctuation">.</span>right<span class="token punctuation">:</span>
        <span class="token keyword">return</span> find_largest<span class="token punctuation">(</span>root_node<span class="token punctuation">.</span>left<span class="token punctuation">)</span>

    <span class="token comment" spellcheck="true"># case: we're at parent of largest,</span>
    <span class="token comment" spellcheck="true"># and largest has no left subtree</span>
    <span class="token comment" spellcheck="true"># so 2nd largest must be current node</span>
    <span class="token keyword">if</span> root_node<span class="token punctuation">.</span>right <span class="token operator">and</span> \
       <span class="token operator">not</span> root_node<span class="token punctuation">.</span>right<span class="token punctuation">.</span>left <span class="token operator">and</span> \
       <span class="token operator">not</span> root_node<span class="token punctuation">.</span>right<span class="token punctuation">.</span>right<span class="token punctuation">:</span>
        <span class="token keyword">return</span> root_node<span class="token punctuation">.</span>value

    <span class="token comment" spellcheck="true"># otherwise: step right</span>
    <span class="token keyword">return</span> find_second_largest<span class="token punctuation">(</span>root_node<span class="token punctuation">.</span>right<span class="token punctuation">)</span></code>
</pre>
<span class="warning-message ng-binding ng-hide" ng-show="warningMessage" ng-bind="warningMessage"></span>
<div class="select-content-language" ng-hide="staticLanguage">

    <select ng-model="contentLanguage" ng-options="language.display_name for language in contentLanguages" ng-change="updateLanguage(contentLanguage)" class="ng-pristine ng-untouched ng-valid"><option value="0" selected="selected" label="Python">Python</option><option value="1" label="Ruby">Ruby</option><option value="2" label="Java">Java</option><option value="3" label="JavaScript">JavaScript</option><option value="4" label="C (beta)">C (beta)</option><option value="5" label="C++ (beta)">C++ (beta)</option></select>

</div>
<span class="only-content-language ng-binding ng-hide" ng-show="staticLanguage" ng-bind="onlyLanguage"></span>
<!-- FE TESTING <button class="run-tests" ng-show="showTests && hasTests" ng-click="runTests()">TEST</button> -->
</div>

<p class="ng-scope">
Okay awesome. This'll work. It'll take <span complexity="h" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>h</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(h)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mord mathit">h</span><span class="mclose">)</span></span></span></span></span></span></span> time (where <span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">h</span></span></span></span></span> is the height of the tree) and <span complexity="h" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>h</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(h)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mord mathit">h</span><span class="mclose">)</span></span></span></span></span></span></span> space.
</p>

<p class="ng-scope">
But that <span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">h</span></span></span></span></span> space in the call <span concept="call-stack" class="ng-isolate-scope"><span class="concept-wrapper" ng-init="showConcept=false">

    <span ng-click="showConcept=!showConcept" class="concept">
        <span class="concept-name" ng-transclude=""><span class="ng-scope">stack</span></span>
        <span class="show-concept-icon">↴</span>
    </span>

    <!-- ngInclude: conceptPartialUrl --><div ng-show="showConcept" class="slide concept-explanation ng-scope ng-hide" ng-include="conceptPartialUrl"><div class="ng-scope">
<p>
The <strong>call stack</strong> is what a program uses to keep track of what function it's currently running and what to do with that function's return value.
</p>

<p>
Whenever you call a function, a new <strong>frame</strong> gets pushed onto the call stack, which is popped off when the function returns. As functions call other functions, the stack gets taller. In recursive functions, the stack can get as tall as the number of times the function calls itself. This can cause a problem: the stack has a limited amount of space, and if it gets too big you can get a <strong>stack overflow</strong> error.
</p>

<!-- #illustrate -->
<script type="text/javascript"></script>
</div>
</div>

</span>
</span> is avoidable. <strong>How can we get this down to constant space?</strong>
</p>

</div>
</div>
</div>

    
</div>


<div class="section-wrapper ng-isolate-scope section-solution ng-hide" ng-class="getSectionClass()" ng-init="ready=false" ng-show="shouldShow()" section="solution">
    <h3 class="heading slide ng-binding ng-isolate-scope" ng-show="shouldShow()" heading="solution" hide-heading="">Solution</h3>

    <div class="section section-solution" ng-class="getSectionClass()" ng-transclude="">
<p class="ng-scope">
We start with a function for getting <strong>the largest</strong> value. The largest value is simply the "rightmost" one, so we can get it in one walk down the tree by traversing rightward until we don't have a right child anymore:
</p>

<div code-block="question__second-largest-item-in-bst__find-largest" language="python" translation-highlighting="dynamic" class="ng-scope ng-isolate-scope"><pre class="  language-python">  <code class="  language-python" ng-transclude=""><span class="token keyword">def</span> <span class="token function">find_largest</span><span class="token punctuation">(</span>root_node<span class="token punctuation">)</span><span class="token punctuation">:</span>
    current <span class="token operator">=</span> root_node
    <span class="token keyword">while</span> current<span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token operator">not</span> current<span class="token punctuation">.</span>right<span class="token punctuation">:</span>
            <span class="token keyword">return</span> current<span class="token punctuation">.</span>value
        current <span class="token operator">=</span> current<span class="token punctuation">.</span>right</code>
</pre>
<span class="warning-message ng-binding ng-hide" ng-show="warningMessage" ng-bind="warningMessage"></span>
<div class="select-content-language" ng-hide="staticLanguage">

    <select ng-model="contentLanguage" ng-options="language.display_name for language in contentLanguages" ng-change="updateLanguage(contentLanguage)" class="ng-pristine ng-untouched ng-valid"><option value="0" selected="selected" label="Python">Python</option><option value="1" label="Ruby">Ruby</option><option value="2" label="Java">Java</option><option value="3" label="JavaScript">JavaScript</option><option value="4" label="C (beta)">C (beta)</option><option value="5" label="C++ (beta)">C++ (beta)</option></select>

</div>
<span class="only-content-language ng-binding ng-hide" ng-show="staticLanguage" ng-bind="onlyLanguage"></span>
<!-- FE TESTING <button class="run-tests" ng-show="showTests && hasTests" ng-click="runTests()">TEST</button> -->
</div>



<p class="ng-scope">
With this in mind, we can also find the <em>second largest</em> in one walk down the tree. At each step, we have a few cases:
</p>
<ol class="ng-scope">
<li>
<strong>If we have a left subtree but not a right subtree</strong>, then the current node is the largest overall (the "rightmost") node. The second largest element must be the largest element in the left subtree. We use our <span class="ic-function ng-isolate-scope" func="question__second-largest-item-in-bst__find-largest"><span class="name" ng-transclude=""><span class="ng-scope">find_largest</span></span>()</span> function above to find the largest in that left subtree!
</li>
<li>
<strong>If we have a right child, but that right child node doesn't have any children</strong>, then the right child must be <em>the largest element</em> and our current node must be <em>the second largest element</em>!
</li>
<li>
<strong>Else, we have a right subtree with more than one element</strong>, so the largest and second largest are somewhere in that subtree. So we step right.
</li>
</ol>

<div code-block="question__second-largest-item-in-bst__solution" language="python" translation-highlighting="dynamic" class="ng-scope ng-isolate-scope"><pre class="  language-python">  <code class="  language-python" ng-transclude=""><span class="token keyword">def</span> <span class="token function">find_largest</span><span class="token punctuation">(</span>root_node<span class="token punctuation">)</span><span class="token punctuation">:</span>
    current <span class="token operator">=</span> root_node
    <span class="token keyword">while</span> current<span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token operator">not</span> current<span class="token punctuation">.</span>right<span class="token punctuation">:</span>
            <span class="token keyword">return</span> current<span class="token punctuation">.</span>value
        current <span class="token operator">=</span> current<span class="token punctuation">.</span>right

<span class="token keyword">def</span> <span class="token function">find_second_largest</span><span class="token punctuation">(</span>root_node<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> root_node <span class="token keyword">is</span> None <span class="token operator">or</span> \
            <span class="token punctuation">(</span>root_node<span class="token punctuation">.</span>left <span class="token keyword">is</span> None <span class="token operator">and</span> root_node<span class="token punctuation">.</span>right <span class="token keyword">is</span> None<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">'Tree must have at least 2 nodes'</span><span class="token punctuation">)</span>

    current <span class="token operator">=</span> root_node

    <span class="token keyword">while</span> current<span class="token punctuation">:</span>
        <span class="token comment" spellcheck="true"># case: current is largest and has a left subtree</span>
        <span class="token comment" spellcheck="true"># 2nd largest is the largest in that subtree</span>
        <span class="token keyword">if</span> current<span class="token punctuation">.</span>left <span class="token operator">and</span> <span class="token operator">not</span> current<span class="token punctuation">.</span>right<span class="token punctuation">:</span>
            <span class="token keyword">return</span> find_largest<span class="token punctuation">(</span>current<span class="token punctuation">.</span>left<span class="token punctuation">)</span>

        <span class="token comment" spellcheck="true"># case: current is parent of largest, and</span>
        <span class="token comment" spellcheck="true"># largest has no children, so</span>
        <span class="token comment" spellcheck="true"># current is 2nd largest</span>
        <span class="token keyword">if</span> current<span class="token punctuation">.</span>right <span class="token operator">and</span> \
           <span class="token operator">not</span> current<span class="token punctuation">.</span>right<span class="token punctuation">.</span>left <span class="token operator">and</span> \
           <span class="token operator">not</span> current<span class="token punctuation">.</span>right<span class="token punctuation">.</span>right<span class="token punctuation">:</span>
            <span class="token keyword">return</span> current<span class="token punctuation">.</span>value

        current <span class="token operator">=</span> current<span class="token punctuation">.</span>right</code>
</pre>
<span class="warning-message ng-binding ng-hide" ng-show="warningMessage" ng-bind="warningMessage"></span>
<div class="select-content-language" ng-hide="staticLanguage">

    <select ng-model="contentLanguage" ng-options="language.display_name for language in contentLanguages" ng-change="updateLanguage(contentLanguage)" class="ng-pristine ng-untouched ng-valid"><option value="0" selected="selected" label="Python">Python</option><option value="1" label="Ruby">Ruby</option><option value="2" label="Java">Java</option><option value="3" label="JavaScript">JavaScript</option><option value="4" label="C (beta)">C (beta)</option><option value="5" label="C++ (beta)">C++ (beta)</option></select>

</div>
<span class="only-content-language ng-binding ng-hide" ng-show="staticLanguage" ng-bind="onlyLanguage"></span>
<!-- FE TESTING <button class="run-tests" ng-show="showTests && hasTests" ng-click="runTests()">TEST</button> -->
</div>

</div>

    
</div>

<div class="section-wrapper ng-isolate-scope section-complexity ng-hide" ng-class="getSectionClass()" ng-init="ready=false" ng-show="shouldShow()" section="complexity">
    <h3 class="heading slide ng-binding ng-isolate-scope" ng-show="shouldShow()" heading="complexity" hide-heading="">Complexity</h3>

    <div class="section section-complexity" ng-class="getSectionClass()" ng-transclude="">
<p class="ng-scope">
We're doing <em>one</em> walk down our BST, which means <span complexity="h" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>h</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(h)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mord mathit">h</span><span class="mclose">)</span></span></span></span></span></span></span> time, where <span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.69444em;"></span><span class="strut bottom" style="height: 0.69444em; vertical-align: 0em;"></span><span class="base textstyle uncramped"><span class="mord mathit">h</span></span></span></span></span> is the height of the tree (again, that's <span complexity="lgn" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mo>lg</mo><mrow><mi>n</mi></mrow><mo>)</mo></mrow><annotation encoding="application/x-tex">O(\lg{n})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mop">l<span style="margin-right: 0.01389em;">g</span></span><span class="mord textstyle uncramped"><span class="mord mathit">n</span></span><span class="mclose">)</span></span></span></span></span></span></span> if the tree is balanced, <span complexity="n" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mi>n</mi><mo>)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mord mathit">n</span><span class="mclose">)</span></span></span></span></span></span></span> otherwise). <span complexity="1" class="ng-isolate-scope"><span class="complexity"><span class="ic-math ng-isolate-scope" ng-class="{&#39;block&#39;: isBlock()}" ng-transclude="" math=""><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi><mo>(</mo><mn>1</mn><mo>)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height: 0.75em;"></span><span class="strut bottom" style="height: 1em; vertical-align: -0.25em;"></span><span class="base textstyle uncramped"><span class="mord mathit" style="margin-right: 0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></span></span> space.
</p>
</div>

    
</div>

<div class="section-wrapper ng-isolate-scope section-learnings ng-hide" ng-class="getSectionClass()" ng-init="ready=false" ng-show="shouldShow()" section="learnings">
    <h3 class="heading slide ng-binding ng-isolate-scope" ng-show="shouldShow()" heading="learnings" hide-heading="">What We Learned</h3>

    <div class="section section-learnings" ng-class="getSectionClass()" ng-transclude="">

<p class="ng-scope">
Here we used a <strong>"simplify, solve, and adapt" strategy</strong>.
</p>

<p class="ng-scope">
The question asks for a function to find the <em>second</em> largest element in a BST, so we started off by <em>simplifying</em> the problem: we thought about how to find the <em>first</em> largest element.
</p>

<p class="ng-scope">
Once we had a strategy for that, we <em>adapted</em> that strategy to work for finding the <em>second</em> largest element.
</p>

<p class="ng-scope">
It may seem counter-intuitive to start off by solving the <em>wrong</em> question. But starting off with a simpler version of the problem is often <em>much</em> faster, because it's easier to wrap our heads around right away.
</p>

<p class="ng-scope">
One more note about this one:
</p>

<p class="ng-scope">
<strong>Breaking things down into <em>cases</em></strong> is another strategy that really helped us here.
</p>

<p class="ng-scope">
Notice how simple finding the second largest node got when we divided it into two cases: 
</p>

<ol class="ng-scope">
<li>
The largest node has a left subtree.
</li>
<li>
The largest node <em>does not</em> have a left subtree.
</li>
</ol>

<p class="ng-scope">
Whenever a problem is starting to feel complicated, try breaking it down into cases.
</p>

<p class="ng-scope">
It can be really helpful to actually draw out sample inputs for those cases. This'll keep your thinking organized and also help get your interviewer on the same page.
</p>




</div>

    
</div>

<script type="text/javascript">
            var elTranslations = {"funcs": {"question__second-largest-item-in-bst__find-largest": {"snake": "find_largest", "camel": "findLargest", "csharp": "FindLargest"}}, "code-blocks": {"question__second-largest-item-in-bst__solution": {"java": {"setup": "public class OnlyOneNode implements VoidFunctionToTest {\n    public void call() {\n        t.findSecondLargest(new BinaryTreeNode(5));\n    }\n}", "code": "public int findLargest(BinaryTreeNode rootNode) {\n    BinaryTreeNode current = rootNode;\n    while (current.right != null) {\n        current = current.right;\n    }\n    return current.value;\n}\n\npublic int findSecondLargest(BinaryTreeNode rootNode) {\n    if (rootNode == null ||\n            (rootNode.left == null && rootNode.right == null)) {\n        throw new IllegalArgumentException(\"Tree must have at least 2 nodes\");\n    }\n\n    BinaryTreeNode current = rootNode;\n\n    while (true) {\n        // case: current is largest and has a left subtree\n        // 2nd largest is the largest in that subtree\n        if (current.left != null && current.right == null) {\n            return findLargest(current.left);\n        }\n\n        // case: current is parent of largest, and\n        // largest has no children, so\n        // current is 2nd largest\n        if (current.right != null &&\n                current.right.left == null &&\n                current.right.right == null) {\n            return current.value;\n        }\n\n        current = current.right;\n    }\n}", "tests": "for (int n = 0; n < inputs.length; n++) {\n    assertEqual(t.findSecondLargest(inputs[n]), secondLargestOutputs[n]);\n}\nassertRaisesError(t.new OnlyOneNode(), \"only 1 node\", \"at least 2 nodes\");"}, "cpp": {"code": "int findLargest(const BinaryTreeNode* rootNode)\n{\n    const BinaryTreeNode* current = rootNode;\n    while (current->right_) {\n        current = current->right_;\n    }\n    return current->value_;\n}\n\nint findSecondLargest(const BinaryTreeNode* rootNode)\n{\n    if (!rootNode->left_ && !rootNode->right_) {\n        throw invalid_argument(\"Tree must have at least 2 nodes\");\n    }\n\n    const BinaryTreeNode* current = rootNode;\n\n    while (true) {\n        // case: current is largest and has a left subtree\n        // 2nd largest is the largest in that subtree\n        if (current->left_ && !current->right_) {\n            return findLargest(current->left_);\n        }\n\n        // case: current is parent of largest, and\n        // largest has no children, so\n        // current is 2nd largest\n        if (current->right_ &&\n                !current->right_->left_ &&\n                !current->right_->right_) {\n            break;\n        }\n\n        // step to the right\n        current = current->right_;\n    }\n\n    return current->value_;\n}", "tests": "for (size_t i = 0; i < testNodes.inputs.size(); ++i) {\n    assertEqual(findSecondLargest(testNodes.inputs[i]), secondLargestOutputs[i]);\n}\n{\n    auto node = make_shared<BinaryTreeNode>(5);\n    assertRaisesError<invalid_argument>(\"only 1 node\", &findSecondLargest, node.get());\n}"}, "c": {"code": "int findLargest(BinaryTreeNode *rootNode) {\n    BinaryTreeNode *current = rootNode;\n    while (current->right != NULL) {\n        current = current->right;\n    }\n    return *(int *) current->value;\n}\n\nint findSecondLargest(BinaryTreeNode *rootNode) {\n    BinaryTreeNode *current = rootNode;\n\n    // Tree must have at least 2 nodes\n    assert(rootNode != NULL &&\n           (rootNode->left != NULL || rootNode->right != NULL));\n\n    while (1) {\n        // case: current is largest and has a left subtree\n        // 2nd largest is the largest in that subtree\n        if (current->left != NULL && current->right == NULL) {\n            return findLargest(current->left);\n        }\n\n        // case: current is parent of largest, and\n        // largest has no children, so\n        // current is 2nd largest\n        if (current->right != NULL &&\n                current->right->left == NULL &&\n                current->right->right == NULL) {\n            break;\n        }\n\n        current = current->right;\n    }\n\n    return *(int *) current->value;\n}", "tests": "{\n    testInputAndOutput(findSecondLargest, inputs, secondLargestOutputs, inputsLength);\n\n    int value = 5;\n    BinaryTreeNode *rootNode = binaryTreeNodeNew(&value, sizeof(int));\n    ASSERT_RAISES(findSecondLargest(rootNode));\n}"}, "javascript": {"code": "function findLargest(rootNode) {\n    var current = rootNode;\n    while (current) {\n        if (!current.right) return current.value;\n        current = current.right;\n    }\n}\n\nfunction findSecondLargest(rootNode) {\n    if (!rootNode || (!rootNode.left && !rootNode.right)) {\n        throw new Error('Tree must have at least 2 nodes');\n    }\n\n    var current = rootNode;\n\n    while (current) {\n        // case: current is largest and has a left subtree\n        // 2nd largest is the largest in that subtree\n        if (current.left && !current.right) {\n            return findLargest(current.left);\n        }\n\n        // case: current is parent of largest, and\n        // largest has no children, so\n        // current is 2nd largest\n        if (current.right &&\n                !current.right.left &&\n                !current.right.right) {\n            return current.value;\n        }\n\n        current = current.right;\n    }\n}", "tests": "testInputAndOutputLists(findSecondLargest, secondLargestTests);\n\nfunction onlyOneNode() {\n    findSecondLargest(new BinaryTreeNode(5));\n}\n\nassertRaisesError(onlyOneNode, 'only 1 node', 'at least 2 nodes');"}, "swift": {"code": "enum FindLargestError: Error, CustomStringConvertible {\n    case emptyTree\n    case lessThanTwoNodes\n    \n    var description: String {\n        if case .emptyTree = self {\n            return \"Tree must have at least 1 node\"\n        }\n        if case .lessThanTwoNodes = self {\n            return \"Tree must have at least 2 nodes\"\n        }\n        return \"\"\n    }\n}\npublic func findLargest(_ rootNode: BinaryTreeNode) -> Int {\n    var current = rootNode\n    while let right = current.right {\n        current = right\n    }\n    return current.value\n}\n\npublic func findSecondLargest(_ rootNode: BinaryTreeNode) throws -> Int {\n    if rootNode.left == nil && rootNode.right == nil {\n        throw FindLargestError.lessThanTwoNodes\n    }\n    \n    var current = rootNode\n    \n    while true {\n        // case: current is largest and has a left subtree\n        // 2nd largest is the largest in that subtree\n        if let left = current.left {\n            if current.right == nil {\n                return findLargest(left)\n            }\n        }\n        \n        // case: current is parent of largest, and\n        // largest has no children, so\n        // current is 2nd largest\n        if let right = current.right {\n            if right.left == nil &&\n                right.right == nil {\n                return current.value\n            }\n            \n            current = right\n        }\n    }\n}", "tests": "for i in 0..<inputs.count {\n    try assertEqual(findSecondLargest(inputs[i]), secondLargestOutputs[i])\n}\n\nlet onlyOneNode: VoidFunctionToTest = {\n    let _ = try findSecondLargest(BinaryTreeNode(5))\n}\ntry assertRaisesError(onlyOneNode, condition: \"only 1 node\", uniqueErrorMessage: \"at least 2 nodes\")"}, "ruby": {"code": "def find_largest(root_node)\n    current = root_node\n    while current\n        return current.value if !current.right\n        current = current.right\n    end\nend\n\ndef find_second_largest(root_node)\n    if !root_node || (!root_node.left && !root_node.right)\n        raise Exception, 'Tree must have at least 2 nodes'\n    end\n\n    current = root_node\n\n    while current\n        # case: current is largest and has a left subtree\n        # 2nd largest is the largest in that subtree\n        if current.left && !current.right\n            return find_largest(current.left)\n        end\n\n        # case: current is parent of largest, and\n        # largest has no children, so\n        # current is 2nd largest\n        if current.right && \\\n                !current.right.left && \\\n                !current.right.right\n            return current.value\n        end\n\n        current = current.right\n    end\nend", "tests": "testInputAndOutputLists(method(:find_second_largest), second_largest_tests)\n\ndef only_one_node\n    find_second_largest(BinaryTreeNode.new(5))\nend\n\nassertRaisesError(method(:only_one_node), 'only 1 node', 'at least 2 nodes')"}, "csharp": {"code": "public int FindLargest(BinaryTreeNode rootNode)\n{\n    var current = rootNode;\n    while (current.Right != null)\n    {\n        current = current.Right;\n    }\n    return current.Value;\n}\n\npublic int FindSecondLargest(BinaryTreeNode rootNode)\n{\n    if (rootNode == null ||\n        (rootNode.Left == null && rootNode.Right == null))\n    {\n        throw new ArgumentException(\"Tree must have at least 2 nodes\", nameof(rootNode));\n    }\n\n    var current = rootNode;\n\n    while (true)\n    {\n        // Case: current is largest and has a left subtree\n        // 2nd largest is the largest in that subtree\n        if (current.Left != null && current.Right == null)\n        {\n            return FindLargest(current.Left);\n        }\n\n        // Case: current is parent of largest, and\n        // largest has no children, so\n        // current is 2nd largest\n        if (current.Right != null\n            && current.Right.Left == null\n            && current.Right.Right == null)\n        {\n            return current.Value;\n        }\n\n        current = current.Right;\n    }\n}", "tests": "for (int i = 0; i < inputs.Length; i++)\n{\n    AssertEqual(FindSecondLargest(inputs[i]), secondLargestOutputs[i]);\n}\nAssertRaisesError(() => FindSecondLargest(new BinaryTreeNode(5)), \"only 1 node\", \"at least 2 nodes\");"}, "python": {"code": "def find_largest(root_node):\n    current = root_node\n    while current:\n        if not current.right:\n            return current.value\n        current = current.right\n\ndef find_second_largest(root_node):\n    if root_node is None or \\\n            (root_node.left is None and root_node.right is None):\n        raise Exception('Tree must have at least 2 nodes')\n\n    current = root_node\n\n    while current:\n        # case: current is largest and has a left subtree\n        # 2nd largest is the largest in that subtree\n        if current.left and not current.right:\n            return find_largest(current.left)\n\n        # case: current is parent of largest, and\n        # largest has no children, so\n        # current is 2nd largest\n        if current.right and \\\n           not current.right.left and \\\n           not current.right.right:\n            return current.value\n\n        current = current.right", "tests": "testInputAndOutputLists(find_second_largest, second_largest_tests)\n\ndef only_one_node():\n    find_second_largest(BinaryTreeNode(5))\n\nassertRaisesError(only_one_node, 'only 1 node', 'at least 2 nodes')"}}, "question__second-largest-item-in-bst__find-largest": {"java": {"code": "public static Integer findLargest(BinaryTreeNode rootNode) {\n    BinaryTreeNode current = rootNode;\n    BinaryTreeNode largest = null;\n\n    while (current != null) {\n        if (current.right == null) largest = current;\n        current = current.right;\n    }\n    return largest.value;\n}", "tests": "for (int n = 0; n < inputs.length; n++) {\n    assertEqual(t.findLargest(inputs[n]), largestOutputs[n]);\n}"}, "cpp": {"code": "// note: this function assumes its input is non-null\nint findLargest(const BinaryTreeNode* rootNode) \n{\n    const BinaryTreeNode* current = rootNode;\n    const BinaryTreeNode* largest = nullptr;\n\n    while (current) {\n        if (!current->right_) {\n            largest = current;\n        }\n        current = current->right_;\n    }\n\n    return largest->value_;\n}", "tests": "for (size_t i = 0; i < testNodes.inputs.size(); ++i) {\n    assertEqual(findLargest(testNodes.inputs[i]), largestOutputs[i]);\n}"}, "c": {"code": "int findLargest(BinaryTreeNode *rootNode) {\n    BinaryTreeNode *current = rootNode;\n    BinaryTreeNode *largest = NULL;\n\n    while (current != NULL) {\n        if (current->right == NULL) {\n            largest = current;\n        }\n        current = current->right;\n    }\n\n    return *(int *) largest->value;\n}", "tests": "testInputAndOutput(findLargest, inputs, largestOutputs, inputsLength);"}, "javascript": {"code": "function findLargest(rootNode) {\n    var current = rootNode;\n    while (current) {\n        if (!current.right) return current.value;\n        current = current.right;\n    }\n}", "tests": "testInputAndOutputLists(findLargest, largestTests);"}, "swift": {"code": "public func findLargest(_ rootNode: BinaryTreeNode) -> Int {\n    var current: BinaryTreeNode? = rootNode\n    var largest: BinaryTreeNode = rootNode\n    \n    while let insideCurrent = current {\n        if insideCurrent.right == nil {\n            largest = insideCurrent\n        }\n        current = insideCurrent.right\n    }\n    return largest.value\n}", "tests": "for i in 0..<inputs.count {\n    try assertEqual(findLargest(inputs[i]), largestOutputs[i])\n}"}, "ruby": {"code": "def find_largest(root_node)\n    current = root_node\n    while current\n        return current.value if !current.right\n        current = current.right\n    end\nend", "tests": "testInputAndOutputLists(method(:find_largest), largest_tests)"}, "csharp": {"code": "public int FindLargest(BinaryTreeNode rootNode)\n{\n    BinaryTreeNode largest = null;\n    var current = rootNode;\n\n    while (current != null)\n    {\n        if (current.Right == null)\n        {\n            largest = current;\n        }\n        current = current.Right;\n    }\n\n    return largest.Value;\n}", "tests": "for (int i = 0; i < inputs.Length; i++)\n{\n    AssertEqual(FindLargest(inputs[i]), largestOutputs[i]);\n}"}, "python": {"code": "def find_largest(root_node):\n    current = root_node\n    while current:\n        if not current.right:\n            return current.value\n        current = current.right", "tests": "testInputAndOutputLists(find_largest, largest_tests)"}}, "question__second-largest-item-in-bst__binary-tree-node-class": {"java": "public static class BinaryTreeNode {\n\n    public int value;\n    public BinaryTreeNode left;\n    public BinaryTreeNode right;\n\n    public BinaryTreeNode(int value) {\n        this.value = value;\n    }\n\n    public BinaryTreeNode insertLeft(int leftValue) {\n        this.left = new BinaryTreeNode(leftValue);\n        return this.left;\n    }\n\n    public BinaryTreeNode insertRight(int rightValue) {\n        this.right = new BinaryTreeNode(rightValue);\n        return this.right;\n    }\n}", "cpp": "class BinaryTreeNode\n{\npublic:\n    int value_;\n    BinaryTreeNode* left_;\n    BinaryTreeNode* right_;\n\n    BinaryTreeNode(int value) :\n        value_(value),\n        left_(nullptr),\n        right_(nullptr)\n    {\n    }\n\n    ~BinaryTreeNode() {\n        delete left_;\n        delete right_;\n    }\n\n    BinaryTreeNode* insertLeft(int value) {\n        this->left_ = new BinaryTreeNode(value);\n        return this->left_;\n    }\n    \n    BinaryTreeNode* insertRight(int value) {\n        this->right_ = new BinaryTreeNode(value);\n        return this->right_;\n    }\n};", "c": "typedef struct BinaryTreeNode {\n    void *value;\n    struct BinaryTreeNode* left;\n    struct BinaryTreeNode* right;\n} BinaryTreeNode;\n\nBinaryTreeNode *binaryTreeNodeNew(void *value, size_t valueSize) {\n    BinaryTreeNode *node;\n\n    node = malloc(sizeof(BinaryTreeNode));\n    assert(node != NULL);\n\n    node->value = malloc(valueSize);\n    assert(node->value != NULL);\n    memcpy(node->value, value, valueSize);\n\n    node->left = NULL;\n    node->right = NULL;\n\n    return node;\n}\n\nBinaryTreeNode *binaryTreeNodeInsertLeft(BinaryTreeNode *treeRoot, void *value, size_t valueSize) {\n    treeRoot->left = binaryTreeNodeNew(value, valueSize);\n    return treeRoot->left;\n}\n\nBinaryTreeNode *binaryTreeNodeInsertRight(BinaryTreeNode *treeRoot, void *value, size_t valueSize) {\n    treeRoot->right = binaryTreeNodeNew(value, valueSize);\n    return treeRoot->right;\n}\n\nvoid binaryTreeNodeFree(BinaryTreeNode *treeRoot) {\n    if (treeRoot != NULL) {\n        BinaryTreeNode *nodeLeft = treeRoot->left;\n        BinaryTreeNode *nodeRight = treeRoot->right;\n\n        free(treeRoot->value);\n        free(treeRoot);\n        binaryTreeNodeFree(nodeLeft);\n        binaryTreeNodeFree(nodeRight);\n    }\n}", "javascript": "function BinaryTreeNode(value) {\n    this.value = value;\n    this.left  = null;\n    this.right = null;\n}\n\nBinaryTreeNode.prototype.insertLeft = function(value) {\n    this.left = new BinaryTreeNode(value);\n    return this.left;\n};\n\nBinaryTreeNode.prototype.insertRight = function(value) {\n    this.right = new BinaryTreeNode(value);\n    return this.right;\n};", "swift": "public class BinaryTreeNode {\n    \n    public var value: Int\n    public var left: BinaryTreeNode?\n    public var right: BinaryTreeNode?\n    \n    public init(_ value: Int) {\n        self.value = value\n    }\n    \n    public func insert(leftValue: Int) -> BinaryTreeNode {\n        let left = BinaryTreeNode(leftValue)\n        self.left = left\n        return left\n    }\n    \n    public func insert(rightValue: Int) -> BinaryTreeNode {\n        let right = BinaryTreeNode(rightValue)\n        self.right = right\n        return right\n    }\n}", "ruby": "class BinaryTreeNode\n\n    attr_accessor :value\n    attr_reader :left, :right\n\n    def initialize(value)\n        @value = value\n        @left  = nil\n        @right = nil\n    end\n\n    def insert_left(value)\n        @left = BinaryTreeNode.new(value)\n        return @left\n    end\n\n    def insert_right(value)\n        @right = BinaryTreeNode.new(value)\n        return @right\n    end\nend", "csharp": "public class BinaryTreeNode\n{\n    public int Value { get; }\n\n    public BinaryTreeNode Left { get; private set; }\n\n    public BinaryTreeNode Right { get; private set; }\n\n    public BinaryTreeNode(int value)\n    {\n        Value = value;\n    }\n\n    public BinaryTreeNode InsertLeft(int leftValue)\n    {\n        Left = new BinaryTreeNode(leftValue);\n        return Left;\n    }\n\n    public BinaryTreeNode InsertRight(int rightValue)\n    {\n        Right = new BinaryTreeNode(rightValue);\n        return Right;\n    }\n}", "python": "class BinaryTreeNode:\n\n    def __init__(self, value):\n        self.value = value\n        self.left  = None\n        self.right = None\n\n    def insert_left(self, value):\n        self.left = BinaryTreeNode(value)\n        return self.left\n\n    def insert_right(self, value):\n        self.right = BinaryTreeNode(value)\n        return self.right"}, "question__second-largest-item-in-bst__nicely-balanced-tree": {"default": ".        ( 5 )\n        /     \\\n      (3)     (8)\n     /  \\     /  \\\n   (1)  (4) (7)  (9)"}, "setup": {"java": "BinaryTreeNode a = new BinaryTreeNode(5);\nBinaryTreeNode b = a.insertLeft(3);\nBinaryTreeNode c = a.insertRight(8);\nb.insertLeft(1);\nb.insertRight(4);\nc.insertLeft(7);\nc.insertRight(9);\n\nBinaryTreeNode d = new BinaryTreeNode(5);\nBinaryTreeNode e = d.insertLeft(3);\nBinaryTreeNode f = d.insertRight(8);\ne.insertLeft(1);\ne.insertRight(4);\nf.insertLeft(7);\nBinaryTreeNode g = f.insertRight(12);\nBinaryTreeNode h = g.insertLeft(10);\nh.insertLeft(9);\nh.insertRight(11);\n\nBinaryTreeNode j = new BinaryTreeNode(17);\nj.insertLeft(17);\n\nBinaryTreeNode[] inputs = new BinaryTreeNode[]{\n    a,\n    d,\n    j,\n};\n\nint[] largestOutputs = new int[]{\n    9,\n    12,\n    17,\n};\n\nint[] secondLargestOutputs = new int[]{\n    8,\n    11,\n    17,\n};", "cpp": "struct TestNodes \n{\n    TestNodes()\n    {\n        a = new BinaryTreeNode(5);\n        b = a->insertLeft(3);\n        c = a->insertRight(8);\n\n        b->insertLeft(1);\n        b->insertRight(4);\n        c->insertLeft(7);\n        c->insertRight(9);\n\n        d = new BinaryTreeNode(5);\n        e = d->insertLeft(3);\n        f = d->insertRight(8);\n        e->insertLeft(1);\n        e->insertRight(4);\n        f->insertLeft(7);\n        g = f->insertRight(12);\n        h = g->insertLeft(10);\n        h->insertLeft(9);\n        h->insertRight(11);\n\n        j = new BinaryTreeNode(17);\n        j->insertLeft(17);\n\n        inputs.push_back(a);\n        inputs.push_back(d);\n        inputs.push_back(j);\n    }\n\n    ~TestNodes()\n    {\n        delete j;\n        delete d;\n        delete a;\n    }\n\n    BinaryTreeNode *a, *b, *c, *d, *e, *f, *g, *h, *j;\n    vector<const BinaryTreeNode*> inputs;\n};\n\nconst TestNodes testNodes;\n\nconst vector<int> largestOutputs {\n    9,\n    12,\n    17,\n};\n\nconst vector<int> secondLargestOutputs {\n    8,\n    11,\n    17\n};", "c": "BinaryTreeNode *inputA(void) {\n    int value = 5;\n    BinaryTreeNode *a = binaryTreeNodeNew(&value, sizeof(int));\n    value = 3;\n    BinaryTreeNode *b = binaryTreeNodeInsertLeft(a, &value, sizeof(int));\n    value = 8;\n    BinaryTreeNode *c = binaryTreeNodeInsertRight(a, &value,sizeof(int));\n    value = 1;\n    binaryTreeNodeInsertLeft(b, &value, sizeof(int));\n    value = 4;\n    binaryTreeNodeInsertRight(b, &value, sizeof(int));\n    value = 7;\n    binaryTreeNodeInsertLeft(c, &value, sizeof(int));\n    value = 9;\n    binaryTreeNodeInsertRight(c, &value, sizeof(int));\n    return a;\n}\n\nBinaryTreeNode *inputD(void) {\n    int value = 5;\n    BinaryTreeNode *d = binaryTreeNodeNew(&value, sizeof(int));\n    value = 3;\n    BinaryTreeNode *e = binaryTreeNodeInsertLeft(d, &value, sizeof(int));\n    value = 8;\n    BinaryTreeNode *f = binaryTreeNodeInsertRight(d, &value, sizeof(int));\n    value = 1;\n    binaryTreeNodeInsertLeft(e, &value, sizeof(int));\n    value = 4;\n    binaryTreeNodeInsertRight(e, &value, sizeof(int));\n    value = 7;\n    binaryTreeNodeInsertLeft(f, &value, sizeof(int));\n    value = 12;\n    BinaryTreeNode *g = binaryTreeNodeInsertRight(f, &value, sizeof(int));\n    value = 10;\n    BinaryTreeNode *h = binaryTreeNodeInsertLeft(g, &value, sizeof(int));\n    value = 9;\n    binaryTreeNodeInsertLeft(h, &value, sizeof(int));\n    value = 11;\n    binaryTreeNodeInsertRight(h, &value, sizeof(int));\n    return d;\n}\n\nBinaryTreeNode *inputJ(void) {\n    int value = 17;\n    BinaryTreeNode *j = binaryTreeNodeNew(&value, sizeof(int));\n    value = 17;\n    binaryTreeNodeInsertLeft(j, &value, sizeof(int));\n    return j;\n}\n\nBinaryTreeNode *inputs[3];\n\nconst int inputsLength = 3;\n\nconst int largestOutputs[3] = {\n    9,\n    12,\n    17\n};\n\nconst int secondLargestOutputs[3] = {\n    8,\n    11,\n    17\n};\n\nvoid testInputAndOutput(int (*func) (BinaryTreeNode *rootNode),\n                        BinaryTreeNode **inputs,\n                        const int *outputs, size_t length)\n{\n    size_t i;\n\n    inputs[0] = inputA();\n    inputs[1] = inputD();\n    inputs[2] = inputJ();\n\n    for (i = 0; i < length; i++) {\n        BinaryTreeNode *node = inputs[i];\n        ASSERT(func(node) == outputs[i]);\n        binaryTreeNodeFree(node);\n    }\n}", "javascript": "var a, b, c, d, e, f, g, h, j;\n\na = new BinaryTreeNode(5);\nb = a.insertLeft(3);\nc = a.insertRight(8);\n\nb.insertLeft(1);\nb.insertRight(4);\nc.insertLeft(7);\nc.insertRight(9);\n\nd = new BinaryTreeNode(5);\ne = d.insertLeft(3);\nf = d.insertRight(8);\ne.insertLeft(1);\ne.insertRight(4);\nf.insertLeft(7);\ng = f.insertRight(12);\nh = g.insertLeft(10);\nh.insertLeft(9);\nh.insertRight(11);\n\nj = new BinaryTreeNode(17);\nj.insertLeft(17);\n\nvar largestTests = [\n    [a, 9],\n    [d, 12],\n    [j, 17],\n];\n\nvar secondLargestTests = [\n    [a, 8],\n    [d, 11],\n    [j, 17],\n];", "swift": "let a = BinaryTreeNode(5)\nlet b = a.insert(leftValue: 3)\nlet c = a.insert(rightValue: 8)\nlet _ = b.insert(leftValue: 1)\nlet _ = b.insert(rightValue: 8)\nlet _ = c.insert(leftValue: 7)\nlet _ = c.insert(rightValue: 9)\n\nlet d = BinaryTreeNode(5)\nlet e = d.insert(leftValue: 3)\nlet f = d.insert(rightValue: 8)\nlet _ = e.insert(leftValue: 1)\nlet _ = e.insert(rightValue: 4)\nlet _ = f.insert(leftValue: 7)\nlet g = f.insert(rightValue: 12)\nlet h = g.insert(leftValue: 10)\nlet _ = h.insert(leftValue: 9)\nlet _ = h.insert(rightValue: 11)\n\nlet j = BinaryTreeNode(17)\nlet _ = j.insert(leftValue: 17)\n\nlet inputs = [a, d, j]\nlet largestOutputs = [9, 12, 17]\nlet secondLargestOutputs = [8, 11, 17]", "ruby": "a = BinaryTreeNode.new(5)\nb = a.insert_left(3)\nc = a.insert_right(8)\nb.insert_left(1)\nb.insert_right(4)\nc.insert_left(7)\nc.insert_right(9)\n\nd = BinaryTreeNode.new(5)\ne = d.insert_left(3)\nf = d.insert_right(8)\ne.insert_left(1)\ne.insert_right(4)\nf.insert_left(7)\ng = f.insert_right(12)\nh = g.insert_left(10)\nh.insert_left(9)\nh.insert_right(11)\n\nj = BinaryTreeNode.new(17)\nj.insert_left(17)\n\nlargest_tests = [\n    [a, 9],\n    [d, 12],\n    [j, 17],\n]\n\nsecond_largest_tests = [\n    [a, 8],\n    [d, 11],\n    [j, 17],\n]", "csharp": "private BinaryTreeNode[] inputs = BuildTestInputs();\n\nprivate int[] largestOutputs = { 9, 12, 17 };\n\nprivate int[] secondLargestOutputs = { 8, 11, 17 };\n\nprivate static BinaryTreeNode[] BuildTestInputs()\n{\n    var a = new BinaryTreeNode(5);\n    var b = a.InsertLeft(3);\n    var c = a.InsertRight(8);\n    b.InsertLeft(1);\n    b.InsertRight(4);\n    c.InsertLeft(7);\n    c.InsertRight(9);\n\n    var d = new BinaryTreeNode(5);\n    var e = d.InsertLeft(3);\n    var f = d.InsertRight(8);\n    e.InsertLeft(1);\n    e.InsertRight(4);\n    f.InsertLeft(7);\n    var g = f.InsertRight(12);\n    var h = g.InsertLeft(10);\n    h.InsertLeft(9);\n    h.InsertRight(11);\n\n    var j = new BinaryTreeNode(17);\n    j.InsertLeft(17);\n\n    return new[] { a, d, j };\n}", "python": "a = BinaryTreeNode(5)\nb = a.insert_left(3)\nc = a.insert_right(8)\nb.insert_left(1)\nb.insert_right(4)\nc.insert_left(7)\nc.insert_right(9)\n\nd = BinaryTreeNode(5)\ne = d.insert_left(3)\nf = d.insert_right(8)\ne.insert_left(1)\ne.insert_right(4)\nf.insert_left(7)\ng = f.insert_right(12)\nh = g.insert_left(10)\nh.insert_left(9)\nh.insert_right(11)\n\nj = BinaryTreeNode(17)\nj.insert_left(17)\n\nlargest_tests = [\n    [a, 9],\n    [d, 12],\n    [j, 17],\n]\n\nsecond_largest_tests = [\n    [a, 8],\n    [d, 11],\n    [j, 17],\n]"}, "question__second-largest-item-in-bst__largest-element-has-left-subtree": {"default": ".        ( 5 )\n        /     \\\n      (3)     (8)\n     /  \\     /  \\\n   (1)  (4) (7)  (12)\n                 /\n               (10)\n               /  \\\n             (9)  (11)"}, "question__second-largest-item-in-bst__largest-recursive": {"java": {"code": "public static Integer findLargest(BinaryTreeNode rootNode) {\n    if (rootNode.right != null) {\n        return findLargest(rootNode.right);\n    }\n    return rootNode.value;\n}", "tests": "for (int n = 0; n < inputs.length; n++) {\n    assertEqual(t.findLargest(inputs[n]), largestOutputs[n]);\n}"}, "cpp": {"code": "int findLargest(const BinaryTreeNode* rootNode)\n{\n    if (rootNode->right_) {\n        return findLargest(rootNode->right_);\n    }\n    return rootNode->value_;\n}", "tests": "for (size_t i = 0; i < testNodes.inputs.size(); ++i) {\n    assertEqual(findLargest(testNodes.inputs[i]), largestOutputs[i]);\n}"}, "c": {"code": "int findLargest(BinaryTreeNode *rootNode) {\n    if (rootNode->right != NULL) {\n        return findLargest(rootNode->right);\n    }\n    return *(int *) rootNode->value;\n}", "tests": "testInputAndOutput(findLargest, inputs, largestOutputs, inputsLength);"}, "javascript": {"code": "function findLargest(rootNode) {\n    if (!rootNode) {\n        throw new Error('Tree must have at least 1 node');\n    }\n    if (rootNode.right) {\n        return findLargest(rootNode.right);\n    }\n    return rootNode.value;\n}", "tests": "testInputAndOutputLists(findLargest, largestTests);"}, "swift": {"code": "public func findLargest(rootNode: BinaryTreeNode) -> Int {\n    if let right = rootNode.right {\n        return findLargest(rootNode: right)\n    }\n    return rootNode.value\n}", "tests": "for i in 0..<inputs.count {\n    try assertEqual(findLargest(rootNode: inputs[i]), largestOutputs[i])\n}"}, "ruby": {"code": "def find_largest(root_node)\n    if !root_node\n        raise Exception, 'Tree must have at least 1 node'\n    end\n    if root_node.right\n        return find_largest(root_node.right)\n    end\n    return root_node.value\nend", "tests": "testInputAndOutputLists(method(:find_largest), largest_tests)"}, "csharp": {"code": "public int FindLargest(BinaryTreeNode rootNode)\n{\n    if (rootNode.Right != null)\n    {\n        return FindLargest(rootNode.Right);\n    }\n\n    return rootNode.Value;\n}", "tests": "for (int i = 0; i < inputs.Length; i++)\n{\n    AssertEqual(FindLargest(inputs[i]), largestOutputs[i]);\n}"}, "python": {"code": "def find_largest(root_node):\n    if root_node.right:\n        return find_largest(root_node.right)\n    return root_node.value", "tests": "testInputAndOutputLists(find_largest, largest_tests)"}}, "question__second-largest-item-in-bst__solution-h-space-call-stack": {"java": {"code": "public static Integer findLargest(BinaryTreeNode rootNode) {\n    if (rootNode == null) { \n        throw new IllegalArgumentException(\"Tree must have at least 1 node\");\n    }\n    if (rootNode.right != null)  {\n        return findLargest(rootNode.right);\n    }\n    return rootNode.value;\n}\n\npublic static Integer findSecondLargest(BinaryTreeNode rootNode) {\n    if (rootNode == null ||\n            (rootNode.left == null && rootNode.right == null)) {\n        throw new IllegalArgumentException(\"Tree must have at least 2 nodes\");\n    }\n\n    // case: we're currently at largest, and\n    // largest has a left subtree\n    // 2nd largest is largest in said subtree\n    if ((rootNode.left != null) && (rootNode.right == null)) {\n        return findLargest(rootNode.left);\n    }\n\n    // case: we're at parent of largest,\n    // and largest has no left subtree\n    // so 2nd largest must be current node\n    if (rootNode.right != null\n            && rootNode.right.left == null\n            && rootNode.right.right == null) {\n        return rootNode.value;\n    }\n\n    // otherwise: step right\n    return findSecondLargest(rootNode.right);\n}", "tests": "for (int n = 0; n < inputs.length; n++) {\n    assertEqual(t.findSecondLargest(inputs[n]), secondLargestOutputs[n]);\n}"}, "cpp": {"code": "int findLargest(const BinaryTreeNode* rootNode)\n{\n    if (rootNode->right_)  {\n        return findLargest(rootNode->right_);\n    }\n    return rootNode->value_;\n}\n\nint findSecondLargest(const BinaryTreeNode* rootNode)\n{\n    if (!rootNode || (!rootNode->left_ && !rootNode->right_)) {\n        throw invalid_argument(\"Tree must have at least 2 nodes\");\n    }\n\n    // case: we're currently at largest, and\n    // largest has a left subtree\n    // 2nd largest is largest in said subtree\n    if (rootNode->left_ && !rootNode->right_) {\n        return findLargest(rootNode->left_);\n    }\n\n    // case: we're at parent of largest,\n    // and largest has no left subtree\n    // so 2nd largest must be current node\n    if (rootNode->right_\n            && !rootNode->right_->left_\n            && !rootNode->right_->right_) {\n        return rootNode->value_;\n    }\n\n    // otherwise: step right\n    return findSecondLargest(rootNode->right_);\n}", "tests": "for (size_t i = 0; i < testNodes.inputs.size(); ++i) {\n    assertEqual(findSecondLargest(testNodes.inputs[i]), secondLargestOutputs[i], \n        StringFormatter () << \"test #\" << i << \" failed\");\n}\n{\n    auto node = make_shared<BinaryTreeNode>(5);\n    assertRaisesError<invalid_argument>(\"only 1 node\", &findSecondLargest, node.get());\n}"}, "c": {"code": "int findLargest(BinaryTreeNode *rootNode) {\n    assert(rootNode != NULL); // Tree must have at least 1 node\n\n    if (rootNode->right != NULL)  {\n        return findLargest(rootNode->right);\n    }\n\n    return *(int *) rootNode->value;\n}\n\nint findSecondLargest(BinaryTreeNode *rootNode) {\n    // Tree must have at least 2 nodes\n    assert(rootNode != NULL &&\n           (rootNode->left != NULL || rootNode->right != NULL));\n\n    // case: we're currently at largest, and\n    // largest has a left subtree\n    // 2nd largest is largest in said subtree\n    if (rootNode->left != NULL && rootNode->right == NULL) {\n        return findLargest(rootNode->left);\n    }\n\n    // case: we're at parent of largest,\n    // and largest has no left subtree\n    // so 2nd largest must be current node\n    if (rootNode->right != NULL\n            && rootNode->right->left == NULL\n            && rootNode->right->right == NULL) {\n        return *(int *) rootNode->value;\n    }\n\n    // otherwise: step right\n    return findSecondLargest(rootNode->right);\n}", "tests": "testInputAndOutput(findSecondLargest, inputs, secondLargestOutputs, inputsLength);"}, "javascript": {"code": "function findLargest(rootNode) {\n    if (!rootNode) {\n        throw new Error('Tree must have at least 1 node');\n    }\n    if (rootNode.right) {\n        return findLargest(rootNode.right);\n    }\n    return rootNode.value;\n}\n\nfunction findSecondLargest(rootNode) {\n    if (!rootNode || (!rootNode.left && !rootNode.right)) {\n        throw new Error('Tree must have at least 2 nodes');\n    }\n\n    // case: we're currently at largest, and\n    // largest has a left subtree\n    // 2nd largest is largest in said subtree\n    if (rootNode.left && !rootNode.right) {\n        return findLargest(rootNode.left);\n    }\n\n    // case: we're at parent of largest,\n    // and largest has no left subtree\n    // so 2nd largest must be current node\n    if (rootNode.right &&\n            !rootNode.right.left &&\n            !rootNode.right.right) {\n        return rootNode.value;\n    }\n\n    // otherwise: step right\n    return findSecondLargest(rootNode.right);\n}", "tests": "testInputAndOutputLists(findSecondLargest, secondLargestTests);"}, "swift": {"code": "enum FindLargestError: Error, CustomStringConvertible {\n    case emptyTree\n    case lessThanTwoNodes\n    \n    var description: String {\n        if case .emptyTree = self {\n            return \"Tree must have at least 1 node\"\n        }\n        if case .lessThanTwoNodes = self {\n            return \"Tree must have at least 2 nodes\"\n        }\n        return \"\"\n    }\n}\n\npublic func findLargest(_ rootNode: BinaryTreeNode?) throws -> Int {\n    guard let rootNode = rootNode else {\n        throw FindLargestError.emptyTree\n    }\n    \n    if let right = rootNode.right {\n        return try findLargest(right)\n    }\n    \n    return rootNode.value\n}\n\npublic func findSecondLargest(_ rootNode: BinaryTreeNode?) throws -> Int {\n    guard let rootNode = rootNode else {\n        throw FindLargestError.emptyTree\n    }\n    \n    if rootNode.left == nil && rootNode.right == nil {\n        throw FindLargestError.lessThanTwoNodes\n    }\n    \n    // case: we're currently at largest, and\n    // largest has a left subtree\n    // 2nd largest is largest in said subtree\n    if rootNode.left != nil && rootNode.right == nil {\n        return try findLargest(rootNode.left)\n    }\n    \n    // case: we're at parent of largest,\n    // and largest has no left subtree\n    // so 2nd largest must be current node\n    if rootNode.right != nil &&\n        rootNode.right?.left == nil &&\n        rootNode.right?.right == nil {\n        return rootNode.value\n    }\n    \n    // otherwise: step right\n    return try findSecondLargest(rootNode.right)\n}", "tests": "for i in 0..<inputs.count {\n    try assertEqual(try findSecondLargest(inputs[i]), secondLargestOutputs[i])\n}"}, "ruby": {"code": "def find_largest(root_node)\n    if !root_node\n        raise Exception, 'Tree must have at least 1 node'\n    end\n    if root_node.right\n        return find_largest(root_node.right)\n    end\n    return root_node.value\nend\n\ndef find_second_largest(root_node)\n    if !root_node || (!root_node.left && !root_node.right)\n        raise Exception, 'Tree must have at least 2 nodes'\n    end\n\n    # case: we're currently at largest, and\n    # largest has a left subtree\n    # 2nd largest is largest in said subtree\n    if root_node.left && !root_node.right\n        return find_largest(root_node.left)\n    end\n\n    # case: we're at parent of largest,\n    # and largest has no left subtree\n    # so 2nd largest must be current node\n    if root_node.right && \\\n            !root_node.right.left && \\\n            !root_node.right.right\n        return root_node.value\n    end\n\n    # otherwise: step right\n    return find_second_largest(root_node.right)\nend", "tests": "testInputAndOutputLists(method(:find_second_largest), second_largest_tests)"}, "csharp": {"code": "public int FindLargest(BinaryTreeNode rootNode)\n{\n    if (rootNode == null)\n    {\n        throw new ArgumentNullException(nameof(rootNode), \"Tree must have at least 1 node\");\n    }\n\n    if (rootNode.Right != null)\n    {\n        return FindLargest(rootNode.Right);\n    }\n\n    return rootNode.Value;\n}\n\npublic int FindSecondLargest(BinaryTreeNode rootNode)\n{\n    if (rootNode == null ||\n        (rootNode.Left == null && rootNode.Right == null))\n    {\n        throw new ArgumentException(\"Tree must have at least 2 nodes\", nameof(rootNode));\n    }\n\n    // Case: we're currently at largest, and\n    // largest has a left subtree\n    // 2nd largest is largest in said subtree\n    if (rootNode.Left != null && rootNode.Right == null)\n    {\n        return FindLargest(rootNode.Left);\n    }\n\n    // Case: we're at parent of largest,\n    // and largest has no left subtree\n    // so 2nd largest must be current node\n    if (rootNode.Right != null\n        && rootNode.Right.Left == null\n        && rootNode.Right.Right == null)\n    {\n        return rootNode.Value;\n    }\n\n    // Otherwise: step right\n    return FindSecondLargest(rootNode.Right);\n}", "tests": "for (int i = 0; i < inputs.Length; i++)\n{\n    AssertEqual(FindSecondLargest(inputs[i]), secondLargestOutputs[i]);\n}"}, "python": {"code": "def find_largest(root_node):\n    if root_node is None:\n        raise Exception('Tree must have at least 1 node')\n    if root_node.right is not None:\n        return find_largest(root_node.right)\n    return root_node.value\n\ndef find_second_largest(root_node):\n    if root_node is None or \\\n            (root_node.left is None and root_node.right is None):\n        raise Exception('Tree must have at least 2 nodes')\n\n    # case: we're currently at largest, and\n    # largest has a left subtree\n    # 2nd largest is largest in said subtree\n    if root_node.left and not root_node.right:\n        return find_largest(root_node.left)\n\n    # case: we're at parent of largest,\n    # and largest has no left subtree\n    # so 2nd largest must be current node\n    if root_node.right and \\\n       not root_node.right.left and \\\n       not root_node.right.right:\n        return root_node.value\n\n    # otherwise: step right\n    return find_second_largest(root_node.right)", "tests": "testInputAndOutputLists(find_second_largest, second_largest_tests)"}}}, "code-inlines": {"question__second-largest-item-in-bst__none": {"swift": "nil", "ruby": "nil", "cpp": "false", "default": "null", "python": "None"}}};
            var codeTypes = ['words', 'code-blocks', 'vars', 'funcs', 'code-inlines'];

            var mergeObjects = function(objectA, objectB) {
                objectA = objectA || {};
                objectB = objectB || {};
                for (var key in objectB) {
                    objectA[key] = objectB[key];
                }
                return objectA;
            }

            if (!window.contentTranslations) {
                window.contentTranslations = elTranslations;
            } else {
                for (var i=0; i<codeTypes.length; i++) {
                    window.contentTranslations[codeTypes[i]] = mergeObjects(window.contentTranslations[codeTypes[i]], elTranslations[codeTypes[i]]);
                }
            }
            </script>
</div>


    </div>

    <div class="btn-sets">

        <p class="prompt ng-binding" ng-bind="getPromptStr()" ng-hide="&#39;full&#39; !== &#39;full&#39; &amp;&amp; endedQuestion">Do you have an answer?</p>

        <div class="btn-set btn-set-during ng-hide" ng-show="isSingleTrack &amp;&amp; getBtnSet()==&#39;during&#39;">
                <a ng-click="showPress()" id="btn-show" class="btn btn-default btn-large" style=""><span class="glyphicon glyphicon-chevron-down"></span><span class="text ng-binding" ng-bind="getShowBtnText()">Show answer</span></a>
        </div>

        <div class="btn-set btn-set-during" ng-show="!isSingleTrack &amp;&amp; getBtnSet()==&#39;during&#39;">
                <a ng-click="haveAnswerPress()" id="btn-got-it" class="btn btn-default btn-large" style=""><span class="glyphicon glyphicon-ok"></span><span class="text ng-binding" ng-bind="getHaveAnswerBtnText()">I have an answer</span></a>
                <a ng-click="dontHaveAnswerPress()" id="btn-hint" class="btn btn-default btn-large" style=""><span class="fa fa-question"></span><span class="text ng-binding" ng-bind="getDontHaveAnswerBtnText()">I need a hint</span></a>
        </div>

        
            <div class="btn-set btn-set-after-option ng-hide" ng-show="getBtnSet()==&#39;after-option&#39;">
                    <a ng-click="feelExpertPress()" id="btn-feel-good" class="btn btn-default btn-large" style=""><span class="glyphicon glyphicon-ok"></span><span class="text">Yes, I'm expert on this</span></a>
                    <a ng-click="dontFeelExpertPress()" id="btn-need-review" class="btn btn-default btn-large" style=""><span class="glyphicon glyphicon-repeat"></span><span class="text">Not quite, review later</span></a>
            </div>
            <div class="btn-set btn-set-after-must-review ng-hide" ng-show="getBtnSet()==&#39;after-must-review&#39;">
                    <a ng-click="nextQuestionPress()" id="btn-next" class="btn btn-default btn-large" style=""><span class="glyphicon glyphicon-chevron-right"></span><span class="text">Next question</span></a>
            </div>
        

        <div class="share-btns share-btns-quiz-end ng-hide" ng-show="getBtnSet()==&#39;after-option&#39;">
            <p>
                Like this problem? Pass it on!
            </p>

            

<a class="custom-share facebook-share ng-isolate-scope" href="https://www.facebook.com/sharer/sharer.php?u=https%3A//www.interviewcake.com/question/python/second-largest-item-in-bst" target="_blank" tracklink="" the-event="FB share click" the-properties="{&quot;which&quot; : &quot;post-question option&quot;}"><i class="fa fa-facebook"> </i> Share</a>
<a class="custom-share twitter-share ng-isolate-scope" href="https://twitter.com/intent/tweet?text=Solved%20this%20coding%20interview%20question%21&amp;via=interviewcake&amp;related=interviewcake&amp;url=https%3A//www.interviewcake.com/question/python/second-largest-item-in-bst" target="_blank" tracklink="" the-event="Twitter share click" the-properties="{&quot;which&quot; : &quot;post-question option&quot;}"><i class="fa fa-twitter"> </i> Tweet</a>
<a class="custom-share linkedin-share ng-isolate-scope" href="https://www.linkedin.com/shareArticle?mini=true&amp;url=https%3A//www.interviewcake.com/question/python/second-largest-item-in-bst&amp;title=&amp;summary=Solved%20this%20coding%20interview%20question%21&amp;source=Interview%20Cake" target="_blank" tracklink="" the-event="LinkedIn share click" the-properties="{&quot;which&quot; : &quot;post-question option&quot;}"><i class="fa fa-linkedin"> </i> Share</a>


        </div>
        <div class="share-btns share-btns-quiz-end ng-hide" ng-show="getBtnSet()==&#39;after-must-review&#39;">
            <p>
                Like this problem? Pass it on!
            </p>

            

<a class="custom-share facebook-share ng-isolate-scope" href="https://www.facebook.com/sharer/sharer.php?u=https%3A//www.interviewcake.com/question/python/second-largest-item-in-bst" target="_blank" tracklink="" the-event="FB share click" the-properties="{&quot;which&quot; : &quot;post-question must review&quot;}"><i class="fa fa-facebook"> </i> Share</a>
<a class="custom-share twitter-share ng-isolate-scope" href="https://twitter.com/intent/tweet?text=Tough%20coding%20interview%20question%21&amp;via=interviewcake&amp;related=interviewcake&amp;url=https%3A//www.interviewcake.com/question/python/second-largest-item-in-bst" target="_blank" tracklink="" the-event="Twitter share click" the-properties="{&quot;which&quot; : &quot;post-question must review&quot;}"><i class="fa fa-twitter"> </i> Tweet</a>
<a class="custom-share linkedin-share ng-isolate-scope" href="https://www.linkedin.com/shareArticle?mini=true&amp;url=https%3A//www.interviewcake.com/question/python/second-largest-item-in-bst&amp;title=&amp;summary=Tough%20coding%20interview%20question%21&amp;source=Interview%20Cake" target="_blank" tracklink="" the-event="LinkedIn share click" the-properties="{&quot;which&quot; : &quot;post-question must review&quot;}"><i class="fa fa-linkedin"> </i> Share</a>

        </div>

    </div>

    
        <div ng-controller="NotepadCtrl" class="notepad-outer-wrapper ng-scope tab-mode" ng-class="notepadMode" style="bottom: 0px;">
    <div class="notepad-inner-wrapper tab-mode" ng-class="notepadMode">
        <div class="notepad-buttons tab-mode" ng-class="notepadMode">
            <div class="select-language ng-hide" ng-mousedown="isNotepadRelatedElementClicked=true" ng-mouseup="isNotepadRelatedElementClicked=false" ng-show="notepadMode!==&#39;tab-mode&#39;">
                <select ng-model="selectedLanguage" ng-options="language.display_name for language in codemirrorLanguages | orderBy: &#39;dropdown_rank&#39;" ng-change="selectFromLanguageDropdown()" class="ng-pristine ng-untouched ng-valid"><option value="0" selected="selected" label="Python">Python</option><option value="1" label="Java">Java</option><option value="2" label="Ruby">Ruby</option><option value="3" label="JavaScript">JavaScript</option><option value="4" label="C (beta)">C (beta)</option><option value="5" label="C++ (beta)">C++ (beta)</option><option value="6" label="C# (beta)">C# (beta)</option><option value="7" label="Objective-C (beta)">Objective-C (beta)</option><option value="8" label="PHP (beta)">PHP (beta)</option><option value="9" label="Haskell">Haskell</option><option value="10" label="No syntax">No syntax</option></select>
            </div>
            <span class="tab ng-hide" ng-mousedown="isNotepadRelatedElementClicked=true" ng-click="clickIcon(&#39;tab-mode&#39;)" ng-mouseup="isNotepadRelatedElementClicked=false" ng-show="notepadMode!==&#39;tab-mode&#39;"></span>
            <span class="type-and-look" ng-mousedown="isNotepadRelatedElementClicked=true" ng-click="clickIcon(&#39;type-and-look-mode&#39;)" ng-mouseup="isNotepadRelatedElementClicked=false"></span>
            <span class="focus" ng-mousedown="isNotepadRelatedElementClicked=true" ng-click="clickIcon(&#39;focus-mode&#39;)" ng-mouseup="isNotepadRelatedElementClicked=false"></span>
        </div>
        <div class="notepad-typing tab-mode" ng-class="{&#39;output-displayed&#39;: outputDisplayed &amp;&amp; selectedLanguage.codewars}">
            <div class="ng-pristine ng-untouched ng-valid cm-s-default CodeMirror" ui-codemirror-opts="editorOptions" ui-refresh="isCodemirrorUpdated" ng-model="userCode"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 26px; left: 22px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" style="position: absolute; padding: 0px; width: 1000px; height: 1em; outline: none;" tabindex="0"></textarea></div><div class="CodeMirror-vscrollbar" not-content="true" style="min-width: 18px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" not-content="true" style="min-height: 18px;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" not-content="true"></div><div class="CodeMirror-gutter-filler" not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; margin-bottom: 0px; border-right-width: 30px; min-width: 86.9688px; min-height: 29px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"><span><span>​</span>x</span></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17.85px;">&nbsp;</div></div><div class="CodeMirror-code"><pre><span style="padding-right: 0.1px;"><span class="cm-variable">Type</span> <span class="cm-variable">code</span><span class="cm-operator">!</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; top: 29px;"></div><div class="CodeMirror-gutters" style="display: none; height: 62px;"></div></div></div>
        </div>

        

        <div class="notepad-run tab-mode" ng-class="notepadMode" ng-show="selectedLanguage.codewars">
            <span class="output-button ng-binding ng-hide" ng-mousedown="isNotepadRelatedElementClicked=true" ng-click="outputDisplayed = !outputDisplayed; codemirrorElement.focus()" ng-mouseup="isNotepadRelatedElementClicked=false" ng-show="outputDisplayed || output !== undefined" ng-bind="outputDisplayed ? &#39;HIDE&#39; : &#39;SHOW&#39;">SHOW</span>
            <span class="output-button" ng-mousedown="isNotepadRelatedElementClicked=true" ng-click="runCode()" ng-mouseup="isNotepadRelatedElementClicked=false">RUN</span>
        </div>
        <div class="notepad-output tab-mode" ng-class="notepadMode" ng-show="selectedLanguage.codewars" ng-mousedown="isNotepadRelatedElementClicked=true" ng-mouseup="isNotepadRelatedElementClicked=false">
            <span class="powered-by">
                Code execution powered by Qualified.io
            </span>
            <p class="content output-help ng-binding ng-hide" ng-show="outputHelp" ng-bind="outputHelp"></p>
            <p class="content output ng-binding ng-hide" ng-show="output" ng-bind="output"></p>
            <p class="content output-error ng-binding" ng-bind="outputError"></p>
        </div>

        
    </div>
</div>

    

</div>
</div>



    <div ng-view=""></div>
</div>


    
    
    


    <div id="print-footer">
        <p>
            Want more coding interview help?
        </p>

        <p>
            Check out <span class="url">interviewcake.com</span> for more advice, guides, and practice questions.
        </p>
    </div>

    <div id="footer">

        <a class="newsletter-link" href="https://www.interviewcake.com/free-weekly-coding-interview-problem-newsletter">Subscribe to our weekly question email list »</a>

        <div class="links">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-md-6">
                        <div class="by-company">
                            <h5>
                                Programming interview questions by company:
                            </h5>
                            <ul>
                                <li>
                                    <a href="https://www.interviewcake.com/google-interview-questions">Google interview questions</a>
                                </li>
                                <li>
                                    <a href="https://www.interviewcake.com/facebook-interview-questions">Facebook interview questions</a>
                                </li>
                                <li>
                                    <a href="https://www.interviewcake.com/amazon-interview-questions">Amazon interview questions</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="by-language">
                            <h5>
                                Programming interview questions by language:
                            </h5>
                            <ul>
                                <li>
                                    <a href="https://www.interviewcake.com/java-interview-questions">Java interview questions</a>
                                </li>
                                <li>
                                    <a href="https://www.interviewcake.com/python-interview-questions">Python interview questions</a>
                                </li>
                                <li>
                                    <a href="https://www.interviewcake.com/ruby-interview-questions">Ruby interview questions</a>
                                </li>
                                <li>
                                    <a href="https://www.interviewcake.com/javascript-interview-questions">JavaScript interview questions</a>
                                </li>
                                <li>
                                    <a href="https://www.interviewcake.com/sql-interview-questions">SQL interview questions</a>
                                </li>
                                <li>
                                    <a href="https://www.interviewcake.com/testing-and-qa-interview-questions">Testing and QA interview questions</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="social-media">

            <a class="facebook ng-isolate-scope" href="https://www.facebook.com/interviewcake" target="_blank" tracklink="" the-event="FB footer click"><i class="fa fa-facebook"></i></a>
            <a class="twitter ng-isolate-scope" href="https://www.twitter.com/interviewcake" target="_blank" tracklink="" the-event="Twitter footer click"><i class="fa fa-twitter"></i></a>
        </div>

        

            <div itemscope="" itemtype="http://schema.org/Corporation">
                <span class="schemaorghide" itemprop="description">Programming interview practice and tips for software engineers looking for jobs.</span>

                Copyright © 2016
                <span itemprop="name">Cake Labs, Inc.</span> All rights reserved.
                <span class="schemaorghide" itemprop="image">https://www.interviewcake.com/static//images/cake_white_on_blue_600.png</span>
                <span class="schemaorghide" itemprop="logo">https://www.interviewcake.com/static//images/cake_white_on_blue_600.png</span>
                <span class="schemaorghide" itemprop="url">https://www.interviewcake.com</span>
                <span class="schemaorghide" itemprop="telephone">(804) 876-2253</span>

                <address itemprop="address" itemscope="" itemtype="http://schema.org/PostalAddress">
                    <span itemprop="streetAddress">228 Park Ave S #82632</span>,
                    <span itemprop="addressLocality">New York</span>,
                    <span itemprop="addressRegion">NY</span>
                    <span itemprop="addressCountry">US</span>
                    <span itemprop="postalCode">10003</span>
                    <span itemprop="telephone">(804) 876-2253</span>
                </address>

                <address class="schemaorghide" itemprop="location" itemscope="" itemtype="http://schema.org/PostalAddress">
                    <span itemprop="addressCountry">US</span>
                    <span itemprop="addressLocality">New York</span>
                    <span itemprop="addressRegion">NY</span>
                    <span itemprop="streetAddress">228 Park Ave S #82632</span>
                    <span itemprop="postalCode">10003</span>
                    <span itemprop="telephone">(804) 876-2253</span>
                </address>

                <div itemprop="location" itemscope="" itemtype="http://schema.org/Place">
                    <div itemprop="geo" itemscope="" itemtype="http://schema.org/GeoCoordinates">
                        <meta itemprop="latitude" content="37.76480">
                        <meta itemprop="longitude" content="-122.41872">
                    </div>
                </div>
            </div>
        
        <div>

            
                <a href="https://www.interviewcake.com/about">About</a>
                |
            
            <a rel="nofollow" href="https://www.interviewcake.com/privacy-policy">Privacy</a>
            |
            <a rel="nofollow" href="https://www.interviewcake.com/terms-and-conditions">Terms</a>
        </div>
    </div>

    

</div> <!-- /"below-nav" -->

    
    <script src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/jquery.min.js"></script>
    <script src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/bootstrap.min.js"></script>
    <script src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/angular.min.js"></script>
    <script src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/angular-route.min.js"></script>
    <script src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/angular-cookies.min.js"></script>
    <script src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/angular-animate.min.js"></script>
    <script src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/katex.min.js"></script>

    

    
    <script src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/underscore-min.js"></script>
    <script src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/angular-django-rest-resource.js"></script>
    <script src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/angular-seo.js"></script>
    <script src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/sticky.js"></script>
    

    <script type="text/javascript">
        (function(){
  var FLAGS = {
    'learnings': true,'only_3_free_questions': true,'new_header': true,'allow_anonymous_purchase': false
    },
    SWITCHES = {
    
    },
    SAMPLES = {
    
    };
  window.waffle = {
    "flag_is_active": function waffle_flag(flag_name) {
      
      return !!FLAGS[flag_name];
    },
    "switch_is_active": function waffle_switch(switch_name) {
      
      return !!SWITCHES[switch_name];
    },
    "sample_is_active": function waffle_sample(sample_name) {
      
      return !!SAMPLES[sample_name];
    },
    "FLAGS": FLAGS,
    "SWITCHES": SWITCHES,
    "SAMPLES": SAMPLES
  };
})();

    </script>

    <script src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/base.js"></script>

    
    <script src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/prism.min.js"></script>
    <script src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/codemirror.js"></script>
    <script src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/python.js"></script>
    <script src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/ruby.js"></script>
    <script src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/javascript.js"></script>
    <script src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/clike.js"></script>
    <script src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/php.js"></script>
    <script src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/haskell.js"></script>
    <script src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/ui-codemirror.js"></script>
    <script src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/jquery.payment.js"></script>
    <script src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/edgeUtils.js"></script>
    




    <script type="text/javascript">
        window.CACHEBUST_QUERY_STR = '?bust=135';
        //TODO: move above into the below
        window.JS_CONSTANTS = {"INTEGRATIONS_SETTING_ONLY_INTEGRATIONS_THAT_SUPPORT_FRONT_END_ONLY": {"Facebook Pixel": true, "Optimizely": true, "Adwords": true, "All": false, "Google Analytics": true}, "C18N_LANGUAGES": [{"case_convention": "snake", "codemirror": "text/x-python", "short_name": "python", "notepad_template": "def my_function(arg):\n    # write the body of your function here\n    return 'running with %s' % arg\n\n# run your function through some test cases here\n# remember: debugging is half the battle!\nprint my_function('test input')\n", "dropdown_rank": 1, "display_name": "Python", "codewars": "python", "prism": "python"}, {"case_convention": "snake", "codemirror": "text/x-ruby", "short_name": "ruby", "notepad_template": "def my_function(arg)\n    # write the body of your function here\n    return \"running with #{arg}\"\nend\n\n# run your function through some test cases here\n# remember: debugging is half the battle!\nputs my_function('test input')\n", "dropdown_rank": 3, "display_name": "Ruby", "codewars": "ruby", "prism": "ruby"}, {"case_convention": "camel", "codemirror": "text/x-java", "short_name": "java", "notepad_template": "public class Solution {\n    public static String myFunction(String arg) {\n        // write the body of your function here\n        return \"running with \" + arg;\n    }\n    public static void main(String[] args) {\n        // run your function through some test cases here\n        // remember: debugging is half the battle!\n        String testInput = \"test input\";\n        System.out.println(myFunction(testInput));\n    }\n}", "dropdown_rank": 2, "display_name": "Java", "codewars": "java", "prism": "java"}, {"case_convention": "camel", "codemirror": "text/javascript", "short_name": "javascript", "notepad_template": "function myFunction(arg) {\n    // write the body of your function here\n    return 'running with ' + arg;\n}\n\n// run your function through some test cases here\n// remember: debugging is half the battle!\nconsole.log(myFunction('test input'));\n", "dropdown_rank": 4, "display_name": "JavaScript", "codewars": "javascript", "prism": "javascript"}, {"case_convention": "camel", "closest_languages": ["cpp", "java"], "codemirror": "text/x-csrc", "short_name": "c", "notepad_template": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nconst char * my_function(char * arg) {\n    // write the body of your function here\n    return arg;\n}\n\nint main() {\n    // run your function through some test cases here\n    // remember: debugging is half the battle!\n    printf(\"%s\", my_function(\"test input\"));\n    return 0;\n}", "dropdown_rank": 5, "prism": "c", "codewars": "c", "display_name": "C (beta)"}, {"case_convention": "camel", "closest_languages": ["c", "java"], "codemirror": "text/x-c++src", "short_name": "cpp", "notepad_template": "#include <iostream>\nusing namespace std;\n\nstring myFunction (const string& arg)\n{\n    // write the body of your function here\n    return \"running with \" + arg;\n}\n\nint main ()\n{\n    // run your function through some test cases here\n    // remember: debugging is half the battle!\n    cout << myFunction (\"test input\");\n    return 0;\n}", "dropdown_rank": 6, "prism": "cpp", "codewars": "cpp", "display_name": "C++ (beta)"}], "DEFAULT_C18N_LANGUAGE": {"case_convention": "snake", "codemirror": "text/x-python", "short_name": "python", "notepad_template": "def my_function(arg):\n    # write the body of your function here\n    return 'running with %s' % arg\n\n# run your function through some test cases here\n# remember: debugging is half the battle!\nprint my_function('test input')\n", "dropdown_rank": 1, "display_name": "Python", "codewars": "python", "prism": "python"}, "CODEMIRROR_LANGUAGES": [{"codemirror": "text/x-haskell", "short_name": "haskell", "notepad_template": "myFunction :: String -> String\n-- write the body of your function here\nmyFunction arg = \"running with \" ++ arg\n\nmain = do\n  -- run your function through some test cases here\n  -- remember: debugging is half the battle!\n  let result = myFunction \"test input\"\n  putStrLn result\n", "dropdown_rank": 10, "display_name": "Haskell", "codewars": "haskell"}, {"dropdown_rank": 11, "display_name": "No syntax", "short_name": "nolanguage", "prism": "none", "codemirror": ""}, {"case_convention": "snake", "codemirror": "text/x-python", "short_name": "python", "notepad_template": "def my_function(arg):\n    # write the body of your function here\n    return 'running with %s' % arg\n\n# run your function through some test cases here\n# remember: debugging is half the battle!\nprint my_function('test input')\n", "dropdown_rank": 1, "display_name": "Python", "codewars": "python", "prism": "python"}, {"case_convention": "snake", "codemirror": "text/x-ruby", "short_name": "ruby", "notepad_template": "def my_function(arg)\n    # write the body of your function here\n    return \"running with #{arg}\"\nend\n\n# run your function through some test cases here\n# remember: debugging is half the battle!\nputs my_function('test input')\n", "dropdown_rank": 3, "display_name": "Ruby", "codewars": "ruby", "prism": "ruby"}, {"case_convention": "camel", "codemirror": "text/x-java", "short_name": "java", "notepad_template": "public class Solution {\n    public static String myFunction(String arg) {\n        // write the body of your function here\n        return \"running with \" + arg;\n    }\n    public static void main(String[] args) {\n        // run your function through some test cases here\n        // remember: debugging is half the battle!\n        String testInput = \"test input\";\n        System.out.println(myFunction(testInput));\n    }\n}", "dropdown_rank": 2, "display_name": "Java", "codewars": "java", "prism": "java"}, {"case_convention": "camel", "codemirror": "text/javascript", "short_name": "javascript", "notepad_template": "function myFunction(arg) {\n    // write the body of your function here\n    return 'running with ' + arg;\n}\n\n// run your function through some test cases here\n// remember: debugging is half the battle!\nconsole.log(myFunction('test input'));\n", "dropdown_rank": 4, "display_name": "JavaScript", "codewars": "javascript", "prism": "javascript"}, {"case_convention": "camel", "closest_languages": ["cpp", "java"], "codemirror": "text/x-csrc", "short_name": "c", "notepad_template": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nconst char * my_function(char * arg) {\n    // write the body of your function here\n    return arg;\n}\n\nint main() {\n    // run your function through some test cases here\n    // remember: debugging is half the battle!\n    printf(\"%s\", my_function(\"test input\"));\n    return 0;\n}", "dropdown_rank": 5, "prism": "c", "codewars": "c", "display_name": "C (beta)"}, {"case_convention": "camel", "closest_languages": ["c", "java"], "codemirror": "text/x-c++src", "short_name": "cpp", "notepad_template": "#include <iostream>\nusing namespace std;\n\nstring myFunction (const string& arg)\n{\n    // write the body of your function here\n    return \"running with \" + arg;\n}\n\nint main ()\n{\n    // run your function through some test cases here\n    // remember: debugging is half the battle!\n    cout << myFunction (\"test input\");\n    return 0;\n}", "dropdown_rank": 6, "prism": "cpp", "codewars": "cpp", "display_name": "C++ (beta)"}, {"case_convention": "camel", "closest_languages": ["java"], "codemirror": "text/x-csharp", "short_name": "csharp", "notepad_template": "using System;\n\nnamespace Solution\n{\n    class Solution\n    {\n        public static string MyFunction(string arg)\n        {\n            // Write the body of your function here\n            return $\"Running with {arg}\";\n        }\n\n        public static void Main(string[] args)\n        {\n            // Run your function through some test cases here.\n            // Remember: debugging is half the battle!\n            string testInput = \"test input\";\n            Console.WriteLine(MyFunction(testInput));\n        }\n    }\n}\n", "dropdown_rank": 7, "prism": "csharp", "codewars": "csharp", "display_name": "C# (beta)"}, {"case_convention": "camel", "closest_languages": ["javascript"], "codemirror": "text/x-php", "short_name": "php", "notepad_template": "<?php\n\nfunction myFunction($arg) {\n    // write the body of your function here\n    return \"running with \" . $arg;\n}\n\n// run your function through some test cases here\n// remember: debugging is half the battle!\necho myFunction(\"test input\");\n\n?>", "dropdown_rank": 9, "prism": "php", "codewars": "php", "display_name": "PHP (beta)"}, {"case_convention": "camel", "closest_languages": ["c", "java"], "codemirror": "text/x-objectivec", "short_name": "objectivec", "notepad_template": "#import <Foundation/Foundation.h>\n#import <stdio.h>\n\n@interface Solution : NSObject\n\n+ (NSString *)myFunction:(NSString *)arg;\n\n@end\n\n@implementation Solution\n\n+ (NSString *)myFunction:(NSString *)arg\n{\n  // write the body of your function here\n  return [@\"running with \" stringByAppendingString:arg];\n}\n\n@end\n\nint main (int argc, const char * argv[])\n{\n  @autoreleasepool {\n    // run your function through some test cases here\n    // remember: debugging is half the battle!\n    NSString * result = [Solution myFunction:@\"test input\"];\n    printf(\"%s\", [result UTF8String]);\n  }\n}", "dropdown_rank": 8, "prism": "objectivec", "display_name": "Objective-C (beta)"}], "next_step_type_enum": {"login": "_NEXT_STEP_TYPE_LOGIN_", "done": "_NEXT_STEP_TYPE_DONE_", "question": "_NEXT_STEP_TYPE_QUESTION_", "purchase": "_NEXT_STEP_TYPE_PURCHASE_"}, "PRISM_LANGUAGES": [{"dropdown_rank": 11, "display_name": "No syntax", "short_name": "nolanguage", "prism": "none", "codemirror": ""}, {"display_name": "HTML", "short_name": "html", "prism": "markup"}, {"display_name": "SQL", "short_name": "sql", "prism": "sql"}, {"case_convention": "snake", "codemirror": "text/x-python", "short_name": "python", "notepad_template": "def my_function(arg):\n    # write the body of your function here\n    return 'running with %s' % arg\n\n# run your function through some test cases here\n# remember: debugging is half the battle!\nprint my_function('test input')\n", "dropdown_rank": 1, "display_name": "Python", "codewars": "python", "prism": "python"}, {"case_convention": "snake", "codemirror": "text/x-ruby", "short_name": "ruby", "notepad_template": "def my_function(arg)\n    # write the body of your function here\n    return \"running with #{arg}\"\nend\n\n# run your function through some test cases here\n# remember: debugging is half the battle!\nputs my_function('test input')\n", "dropdown_rank": 3, "display_name": "Ruby", "codewars": "ruby", "prism": "ruby"}, {"case_convention": "camel", "codemirror": "text/x-java", "short_name": "java", "notepad_template": "public class Solution {\n    public static String myFunction(String arg) {\n        // write the body of your function here\n        return \"running with \" + arg;\n    }\n    public static void main(String[] args) {\n        // run your function through some test cases here\n        // remember: debugging is half the battle!\n        String testInput = \"test input\";\n        System.out.println(myFunction(testInput));\n    }\n}", "dropdown_rank": 2, "display_name": "Java", "codewars": "java", "prism": "java"}, {"case_convention": "camel", "codemirror": "text/javascript", "short_name": "javascript", "notepad_template": "function myFunction(arg) {\n    // write the body of your function here\n    return 'running with ' + arg;\n}\n\n// run your function through some test cases here\n// remember: debugging is half the battle!\nconsole.log(myFunction('test input'));\n", "dropdown_rank": 4, "display_name": "JavaScript", "codewars": "javascript", "prism": "javascript"}, {"case_convention": "camel", "closest_languages": ["cpp", "java"], "codemirror": "text/x-csrc", "short_name": "c", "notepad_template": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\nconst char * my_function(char * arg) {\n    // write the body of your function here\n    return arg;\n}\n\nint main() {\n    // run your function through some test cases here\n    // remember: debugging is half the battle!\n    printf(\"%s\", my_function(\"test input\"));\n    return 0;\n}", "dropdown_rank": 5, "prism": "c", "codewars": "c", "display_name": "C (beta)"}, {"case_convention": "camel", "closest_languages": ["c", "java"], "codemirror": "text/x-c++src", "short_name": "cpp", "notepad_template": "#include <iostream>\nusing namespace std;\n\nstring myFunction (const string& arg)\n{\n    // write the body of your function here\n    return \"running with \" + arg;\n}\n\nint main ()\n{\n    // run your function through some test cases here\n    // remember: debugging is half the battle!\n    cout << myFunction (\"test input\");\n    return 0;\n}", "dropdown_rank": 6, "prism": "cpp", "codewars": "cpp", "display_name": "C++ (beta)"}, {"case_convention": "camel", "closest_languages": ["java"], "codemirror": "text/x-csharp", "short_name": "csharp", "notepad_template": "using System;\n\nnamespace Solution\n{\n    class Solution\n    {\n        public static string MyFunction(string arg)\n        {\n            // Write the body of your function here\n            return $\"Running with {arg}\";\n        }\n\n        public static void Main(string[] args)\n        {\n            // Run your function through some test cases here.\n            // Remember: debugging is half the battle!\n            string testInput = \"test input\";\n            Console.WriteLine(MyFunction(testInput));\n        }\n    }\n}\n", "dropdown_rank": 7, "prism": "csharp", "codewars": "csharp", "display_name": "C# (beta)"}, {"case_convention": "camel", "closest_languages": ["javascript"], "codemirror": "text/x-php", "short_name": "php", "notepad_template": "<?php\n\nfunction myFunction($arg) {\n    // write the body of your function here\n    return \"running with \" . $arg;\n}\n\n// run your function through some test cases here\n// remember: debugging is half the battle!\necho myFunction(\"test input\");\n\n?>", "dropdown_rank": 9, "prism": "php", "codewars": "php", "display_name": "PHP (beta)"}, {"case_convention": "camel", "closest_languages": ["java"], "short_name": "swift", "prism": "swift", "codewars": "swift", "display_name": "Swift (beta)"}, {"case_convention": "camel", "closest_languages": ["c", "java"], "codemirror": "text/x-objectivec", "short_name": "objectivec", "notepad_template": "#import <Foundation/Foundation.h>\n#import <stdio.h>\n\n@interface Solution : NSObject\n\n+ (NSString *)myFunction:(NSString *)arg;\n\n@end\n\n@implementation Solution\n\n+ (NSString *)myFunction:(NSString *)arg\n{\n  // write the body of your function here\n  return [@\"running with \" stringByAppendingString:arg];\n}\n\n@end\n\nint main (int argc, const char * argv[])\n{\n  @autoreleasepool {\n    // run your function through some test cases here\n    // remember: debugging is half the battle!\n    NSString * result = [Solution myFunction:@\"test input\"];\n    printf(\"%s\", [result UTF8String]);\n  }\n}", "dropdown_rank": 8, "prism": "objectivec", "display_name": "Objective-C (beta)"}], "CACHEBUST_QUERY_STR": "?bust=135"};

        
        window.JS_VARS = {"url_content_type": "question", "questions_fully_attempted": ["largest-stack", "find-in-ordered-set", "stock-price", "queue-two-stacks", "which-appears-twice", "find-rotation-point", "matching-parens", "reverse-string-in-place", "balanced-binary-tree", "compress-url-list", "bst-checker", "bracket-validator", "permutation-palindrome", "temperature-tracker", "inflight-entertainment", "recursive-string-permutations", "shuffle", "highest-product-of-3", "top-scores", "simulate-5-sided-die", "reverse-linked-list", "linked-list-cycles", "merging-ranges", "second-largest-item-in-bst", "find-duplicate-optimize-for-space", "rectangular-love", "word-cloud", "two-egg-problem", "simulate-7-sided-die", "nth-fibonacci", "product-of-other-numbers", "find-unique-int-among-duplicates", "cake-thief", "delete-node", "kth-to-last-node-in-singly-linked-list", "reverse-words"]};
        

        
    </script>



    

    
    <script type="text/javascript" src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/saved_resource"></script>
    <script type="text/javascript">
        Stripe.setPublishableKey('pk_live_4wtgGTkgBtk4YIB9JDjYdOD0');
    </script>
    

    
    
    <div id="fb-root" class=" fb_reset"><div style="position: absolute; top: -10000px; height: 0px; width: 0px;"><div><iframe name="fb_xdm_frame_https" frameborder="0" allowtransparency="true" allowfullscreen="true" scrolling="no" id="fb_xdm_frame_https" aria-hidden="true" title="Facebook Cross Domain Communication Frame" tabindex="-1" src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/iPrOY23SGAp.html" style="border: none;"></iframe></div></div><div style="position: absolute; top: -10000px; height: 0px; width: 0px;"><div><iframe name="f3db0d3d2bbd5c4" frameborder="0" allowtransparency="true" allowfullscreen="true" scrolling="no" src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/ping.html" style="display: none;"></iframe></div></div></div>
    <script>(function(d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) return;
        js = d.createElement(s); js.id = id;
        js.src = "//connect.facebook.net/en_US/all.js#xfbml=1&appId=149278655279066";
        fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));</script>

    <script id="twitter-wjs" src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/widgets.js"></script>
    

    
    
        
            <script type="text/ng-template" id="/partials/animation.html"><div class="animation-wrapper">
    <div class="animation" id="Stage-[[getCompId()]]" ng-class="getCompId()">
    </div>
</div>
</script>
        
    
        
            <script type="text/ng-template" id="/partials/animation_iframe.html"><div class="animation-iframe-wrapper">
    <iframe class="animation-iframe animation-iframe-[[getCompId()]]"></iframe>
</div>
</script>
        
    
        
            <script type="text/ng-template" id="/partials/code-inline.html"><span class="ic-code-inline" ng-transclude></span></script>
        
    
        
            <script type="text/ng-template" id="/partials/code-block.html"><pre class="language-[[language]]">
  <code class="language-[[language]]" ng-transclude></code>
</pre>
<span class="warning-message" ng-show="warningMessage" ng-bind="warningMessage"></span>
<div class="select-content-language" ng-hide="staticLanguage" ng-cloak>

    <select ng-model="contentLanguage" ng-options="language.display_name for language in contentLanguages" ng-change="updateLanguage(contentLanguage)"></select>

</div>
<span class="only-content-language" ng-show="staticLanguage" ng-bind="onlyLanguage"></span>
<!-- FE TESTING <button class="run-tests" ng-show="showTests && hasTests" ng-click="runTests()">TEST</button> -->
</script>
        
    
        
            <script type="text/ng-template" id="/partials/complexity.html"><span class="complexity"><span math>O([[getComplexityMarkup()]])</span></span>
</script>
        
    
        
            <script type="text/ng-template" id="/partials/concept.html"><span class="concept-wrapper" ng-init="showConcept=false">

    <span ng-click="showConcept=!showConcept" class="concept">
        <span class="concept-name" ng-transclude></span>
        <span class="show-concept-icon">&#8628;</span>
    </span>

    <div ng-show="showConcept" class="slide concept-explanation" ng-include="conceptPartialUrl">
        Loading...
    </div>

</span>
</script>
        
    
        
            <script type="text/ng-template" id="/partials/function.html"><span class="ic-function"><span class="name" ng-transclude></span>()</span>
</script>
        
    
        
            <script type="text/ng-template" id="/partials/heading.html"><h3 class="heading slide" ng-show="shouldShow()" ng-cloak>[[getHeadingText()]]</h3>
</script>
        
    
        
            <script type="text/ng-template" id="/partials/inline-footnote.html"><span class="footnote-wrapper" ng-init="show = false">
    <span class="show-footnote-icon" ng-click="show = !show">&#8628;</span>
    <p class="footnote" ng-transclude ng-show="show">Loading...</p>
</span>
</script>
        
    
        
            <script type="text/ng-template" id="/partials/loading.html"><div class="Loading">
    Loading...
</div>
</script>
        
    
        
            <script type="text/ng-template" id="/partials/math.html"><span class="ic-math" ng-class="{'block': isBlock()}" ng-transclude></span>
</script>
        
    
        
            <script type="text/ng-template" id="/partials/note.html"><div class="note slide" ng-show="shouldShow()">
    <div class="note-content" ng-transclude>
    </div>
</div>
</script>
        
    
        
            <script type="text/ng-template" id="/partials/section.html"><div class="section-wrapper" ng-class="getSectionClass()" ng-init="ready=false" ng-show="shouldShow()">
    <span heading="[[section]]" hide-heading="[[hideHeading]]"></span>

    <div class="section" ng-class="getSectionClass()" ng-transclude>
    </div>

    
</div>
</script>
        
    
        
            <script type="text/ng-template" id="/partials/variable.html"><span class="ic-variable" ng-transclude></span>
</script>
        
    
        
            <script type="text/ng-template" id="/partials/words.html"><span class="ic-words" ng-transclude></span>
</script>
        
    


    <!-- load current-user json with initial http request -->
    <div class="hidden" data-preload-resource="/api/v1/current-user/" data-thejson="{&quot;id&quot;:2385549,&quot;username&quot;:&quot;gokumd&quot;,&quot;email&quot;:&quot;gokumd@gmail.com&quot;,&quot;date_joined&quot;:&quot;2016-01-02T20:29:37.549407+00:00&quot;,&quot;first_name&quot;:&quot;Goku&quot;,&quot;last_name&quot;:&quot;Mohandas&quot;,&quot;full_name&quot;:&quot;Goku Mohandas&quot;,&quot;short_name&quot;:&quot;Goku&quot;,&quot;is_anonymous&quot;:false,&quot;is_on_last_question&quot;:false,&quot;percent_done&quot;:66,&quot;num_questions_done&quot;:29,&quot;num_questions_remaining&quot;:15,&quot;recruiting_is_interested_in_intros&quot;:true,&quot;is_full_access&quot;:true,&quot;first_payment_date&quot;:&quot;2016-01-02T22:17:39.210063Z&quot;,&quot;last_payment_date&quot;:&quot;2016-01-02T22:17:37Z&quot;,&quot;num_free_questions_left&quot;:0,&quot;terms_has_agreed_to_latest&quot;:false,&quot;preferred_content_language&quot;:&quot;python&quot;,&quot;preferred_notepad_language&quot;:&quot;python&quot;,&quot;is_staff&quot;:false,&quot;auth_providers_human_readable_list&quot;:&quot;Google&quot;,&quot;num_auth_providers&quot;:1,&quot;auth_email&quot;:&quot;gokumd@gmail.com&quot;}">
        {"id":2385549,"username":"gokumd","email":"gokumd@gmail.com","date_joined":"2016-01-02T20:29:37.549407+00:00","first_name":"Goku","last_name":"Mohandas","full_name":"Goku Mohandas","short_name":"Goku","is_anonymous":false,"is_on_last_question":false,"percent_done":66,"num_questions_done":29,"num_questions_remaining":15,"recruiting_is_interested_in_intros":true,"is_full_access":true,"first_payment_date":"2016-01-02T22:17:39.210063Z","last_payment_date":"2016-01-02T22:17:37Z","num_free_questions_left":0,"terms_has_agreed_to_latest":false,"preferred_content_language":"python","preferred_notepad_language":"python","is_staff":false,"auth_providers_human_readable_list":"Google","num_auth_providers":1,"auth_email":"gokumd@gmail.com"}
    </div>

    

    <!-- Login Modal -->
    <div ng-controller="LoginModalCtrl" class="modal fade login-modal ng-scope" id="loginModal" tabindex="-1" role="dialog" aria-labelledby="Log In" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-body">
                    <h3 ng-bind="note" class="ng-binding">Log in to continue</h3>
                    <button type="button" ng-show="closeable" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                    <div class="login-btns">
    <a ng-href="/auth/login/github/?next=%2Fnext" class="btn btn-soc-github" href="https://www.interviewcake.com/auth/login/github/?next=%2Fnext"><i class="fa fa-github"></i> | Log in with Github</a>
    <a ng-href="/auth/login/google-oauth2/?next=%2Fnext" class="btn btn-soc-google-plus" href="https://www.interviewcake.com/auth/login/google-oauth2/?next=%2Fnext"><i class="fa my-fa-google-plus"></i> | Log in with Google</a>
    <a ng-href="/auth/login/facebook/?next=%2Fnext" class="btn btn-soc-facebook" href="https://www.interviewcake.com/auth/login/facebook/?next=%2Fnext"><i class="fa my-fa-facebook"></i> | Log in with Facebook</a>
</div>
<p class="login-reassurance">
    <small>
        We'll never post on your wall or message your friends.
    </small>
</p>

                </div>
            </div>
        </div>
    </div>


    

    <input type="hidden" name="csrfmiddlewaretoken" value="NmYTH8j9fgFOmFqcfWGkkZyVd83S0UJtkVnfZdu3LPXvbKCiDrVDRIWDyXjle8XI">
<div id="loading">
. . .
</div>


<link href="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/css(1)" rel="stylesheet" type="text/css">

<iframe name="stripeXDM_default654271_provider" id="stripeXDM_default654271_provider" src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/channel.html" frameborder="0" style="position: absolute; top: -2000px; left: 0px;"></iframe><iframe id="rufous-sandbox" scrolling="no" frameborder="0" allowtransparency="true" allowfullscreen="true" style="position: absolute; visibility: hidden; display: none; width: 0px; height: 0px; padding: 0px; border: none;" title="Twitter analytics iframe" src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/saved_resource(1).html"></iframe><span style="display: none;"><iframe style="display: none !important;" id="_olark_framesocket1735" src="./10.2nd Largest Item in a Binary Search Tree _ Interview Cake_files/storage.html"></iframe></span><div><div id="olark-wrapper" class="" data-reactid=".0"><style rel="stylesheet" type="text/css" data-reactid=".0.0">#olark-wrapper .olark-launch-button {
  background-color: #59a8c4 !important;
}
#olark-wrapper .olark-launch-button svg path {
  fill: #ffffff !important;
}
#olark-wrapper .olark-launch-button .olark-button-text {
  color: #ffffff !important;
}
#olark-wrapper .olark-top-bar {
  background-color: #59a8c4 !important;
  color: #ffffff !important;
  border-color: #469dbe !important;
}
#olark-wrapper .olark-top-bar-text {
  color: #ffffff !important;
}
#olark-wrapper .olark-top-bar-arrow {
  fill: #ffffff !important;
}
#olark-wrapper #olark-container .olark-visitor-message {
  background-color: rgba(89, 168, 196, 0.25) !important;
  border: none !important;
}
#olark-wrapper #olark-container .olark-form-send-button {
  background-color: #59a8c4 !important;
  color: #ffffff !important;
}
#olark-wrapper #olark-container .olark-feedback-form-button {
  background-color: #59a8c4 !important;
  color: #ffffff !important;
}
#olark-wrapper #olark-container .olark-branding-panel .olark-branding-cancel-button {
  background-color: #59a8c4 !important;
  border: none !important;
  color: #ffffff !important;
}
#olark-wrapper #olark-container .olark-branding-panel .olark-branding-go-button {
  border: none !important;
  background: rgba(89, 168, 196, 0.35) !important;
}
#olark-wrapper .olark-end-chat-flag {
  fill: #59a8c4 !important;
}
#olark-wrapper #olark-container .olark-form-confirmation-icon .olark-launch-button-icon {
  fill: #59a8c4 !important;
}
#olark-wrapper #olark-container .olark-form-input:focus {
  border-color: #59a8c4 !important;
}
#olark-wrapper #olark-container .olark-form-message-input:focus {
  border-color: #59a8c4 !important;
}
</style><button class="olark-launch-button" data-reactid=".0.2"><svg x="0px" y="0px" viewBox="0 0 28 18" data-reactid=".0.2.0"><path fill="#ffffff" d="M28,3.2C28,1.5,26.5,0,24.8,0H3.2C1.5,0,0,1.5,0,3.2v11.5C0,16.5,1.5,18,3.2,18h21.5c1.8,0,3.2-1.5,3.2-3.2 V3.2z M24.7,14.8c-0.2,0.1-0.4,0.2-0.6,0.2c-0.2,0-0.4-0.1-0.6-0.3l-5-5.3l-3.6,3c-0.3,0.2-0.6,0.3-0.9,0.3s-0.7-0.1-0.9-0.4l-3.6-3 l-5,5.3c-0.2,0.2-0.4,0.3-0.6,0.3c-0.2,0-0.4-0.1-0.6-0.2c-0.3-0.3-0.4-0.8,0-1.2l4.9-5.3L3.3,4.5C3,4.2,2.9,3.6,3.2,3.3 C3.5,2.9,4,2.9,4.4,3.2l9.6,7.9l9.6-7.9c0.4-0.3,0.9-0.2,1.2,0.1c0.3,0.4,0.2,0.9-0.1,1.2l-4.8,3.9l4.9,5.3 C25.1,14,25,14.5,24.7,14.8z" data-reactid=".0.2.0.0"></path></svg><div class="olark-notification-badge olark-hidden" data-reactid=".0.2.1"><div class="olark-notification-badge-text" data-reactid=".0.2.1.0">0</div></div></button><div id="olark-container" class="olark-hidden" data-reactid=".0.3"><div class="olark-top-bar" data-reactid=".0.3.0"><div class="olark-top-bar-text" data-reactid=".0.3.0.0">Send me a message!</div><div class="olark-top-bar-button" data-reactid=".0.3.0.1"><svg viewBox="0 0 15.1 8.9" fill="#ffffff" data-reactid=".0.3.0.1.0"><polygon class="olark-top-bar-arrow" points="0.2,1.4 7.6,8.9 15.1,1.4 13.7,0 7.6,6 1.6,0" data-reactid=".0.3.0.1.0.0"></polygon></svg></div></div><div class="olark-conversation-container olark-form-conversation-container olark-no-message-form" data-reactid=".0.3.1"><div class="olark-form-message" data-reactid=".0.3.1.0">Parker from Interview Cake here. You can reach my email inbox through this handy form!</div><div class="olark-form-container" data-reactid=".0.3.1.1"><form class="olark-form" novalidate="" data-reactid=".0.3.1.1.0"><div class="olark-form-input-container" data-reactid=".0.3.1.1.0.0:$fname"><input type="text" name="fname" class="olark-form-input-filled olark-form-input" id="olark-form-input-fname" tabindex="1" autocomplete="on" value="Goku Mohandas" required="" data-reactid=".0.3.1.1.0.0:$fname.0"><label class="olark-float-label" for="olark-form-input-fname" data-reactid=".0.3.1.1.0.0:$fname.1">click here and type your Name</label><span class="olark-required-asterisk" data-reactid=".0.3.1.1.0.0:$fname.2"><svg viewBox="0 0 20 20" x="0" y="0" fill="currentcolor" data-reactid=".0.3.1.1.0.0:$fname.2.0"><path d="M10,0C4.5,0,0,4.5,0,10c0,5.5,4.5,10,10,10s10-4.5,10-10C20,4.5,15.5,0,10,0z M13.8,13.6L12,15l-2-3L8,15l-1.8-1.4l2-2.8 L5,9.6l0.8-2.2L9,8.6L8.8,5h2.4L11,8.6l3.2-1.3L15,9.6l-3.2,1.1L13.8,13.6z" data-reactid=".0.3.1.1.0.0:$fname.2.0.0"></path></svg></span></div><div class="olark-form-input-container" data-reactid=".0.3.1.1.0.0:$email"><input type="email" name="email" class="olark-form-input-filled olark-form-input" id="olark-form-input-email" tabindex="2" autocomplete="on" value="gokumd@gmail.com" required="" data-reactid=".0.3.1.1.0.0:$email.0"><label class="olark-float-label" for="olark-form-input-email" data-reactid=".0.3.1.1.0.0:$email.1">click here and type your Email</label><span class="olark-required-asterisk" data-reactid=".0.3.1.1.0.0:$email.2"><svg viewBox="0 0 20 20" x="0" y="0" fill="currentcolor" data-reactid=".0.3.1.1.0.0:$email.2.0"><path d="M10,0C4.5,0,0,4.5,0,10c0,5.5,4.5,10,10,10s10-4.5,10-10C20,4.5,15.5,0,10,0z M13.8,13.6L12,15l-2-3L8,15l-1.8-1.4l2-2.8 L5,9.6l0.8-2.2L9,8.6L8.8,5h2.4L11,8.6l3.2-1.3L15,9.6l-3.2,1.1L13.8,13.6z" data-reactid=".0.3.1.1.0.0:$email.2.0.0"></path></svg></span></div><div class="olark-form-input-container" data-reactid=".0.3.1.1.0.0:$body"><div data-reactid=".0.3.1.1.0.0:$body.0"><div class="olark-form-message-input olark-clone-textarea" data-reactid=".0.3.1.1.0.0:$body.0.0" style="width: 330px !important; overflow-wrap: break-word;">Type a message...</div><textarea class="olark-form-message-input" tabindex="3" name="body" id="olark-form-input-body" placeholder="Type a message..." title="Type a message..." required="" data-reactid=".0.3.1.1.0.0:$body.0.1"></textarea></div><span class="olark-required-asterisk" data-reactid=".0.3.1.1.0.0:$body.2"><svg viewBox="0 0 20 20" x="0" y="0" fill="currentcolor" data-reactid=".0.3.1.1.0.0:$body.2.0"><path d="M10,0C4.5,0,0,4.5,0,10c0,5.5,4.5,10,10,10s10-4.5,10-10C20,4.5,15.5,0,10,0z M13.8,13.6L12,15l-2-3L8,15l-1.8-1.4l2-2.8 L5,9.6l0.8-2.2L9,8.6L8.8,5h2.4L11,8.6l3.2-1.3L15,9.6l-3.2,1.1L13.8,13.6z" data-reactid=".0.3.1.1.0.0:$body.2.0.0"></path></svg></span></div><button class="olark-form-send-button" type="submit" data-reactid=".0.3.1.1.0.2">Send</button></form></div></div></div></div></div></body></html>