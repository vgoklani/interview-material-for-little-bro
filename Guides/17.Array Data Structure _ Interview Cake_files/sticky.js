(function(){'use strict';var module=angular.module('sticky',[]);module.directive('sticky',['$window','$timeout',function($window,$timeout){return{restrict:'A',scope:{disabled:'=disabledSticky'},link:function linkFn($scope,$elem,$attrs){var scrollableNodeTagName='sticky-scroll';var initialPosition=$elem.css('position');var initialStyle=$elem.attr('style')||'';var stickyBottomLine=0;var isSticking=false;var onStickyHeighUnbind;var originalInitialCSS;var originalOffset;var placeholder;var stickyLine;var initialCSS;var stickyClass=$attrs.stickyClass||'';var unstickyClass=$attrs.unstickyClass||'';var bodyClass=$attrs.bodyClass||'';var bottomClass=$attrs.bottomClass||'';var scrollbar=deriveScrollingViewport($elem);var windowElement=angular.element($window);var scrollbarElement=angular.element(scrollbar);var $body=angular.element(document.body);var $onResize=function(){if($scope.$root&&!$scope.$root.$$phase){$scope.$apply(onResize);}else{onResize();}};var usePlaceholder=($attrs.usePlaceholder!=='false');var anchor=$attrs.anchor==='bottom'?'bottom':'top';var confine=($attrs.confine==='true');var isStickyLayoutDeferred=$attrs.isStickyLayoutDeferred!==undefined?($attrs.isStickyLayoutDeferred==='true'):false;var isStickyLayoutWatched=$attrs.isStickyLayoutWatched!==undefined?($attrs.isStickyLayoutWatched==='true'):true;var offset=$attrs.offset?parseInt($attrs.offset.replace(/px;?/,'')):0;var shouldInitialize=true;function initSticky(){if(shouldInitialize){scrollbarElement.on('scroll',checkIfShouldStick);windowElement.on('resize',$onResize);memorizeDimensions();$scope.$watch(onDigest,onChange);$scope.$on('$destroy',onDestroy);shouldInitialize=false;}};function memorizeDimensions(){initialCSS=$scope.getInitialDimensions();if(isStickyLayoutDeferred){if(!$elem[0].getBoundingClientRect().height){onStickyHeighUnbind=$scope.$watch(function(){return $elem.height();},function onStickyContentLayoutInitialHeightSet(newValue,oldValue){if(newValue>0){initialCSS=$scope.getInitialDimensions();if(!isStickyLayoutWatched){onStickyHeighUnbind();}}});}}}
var checkIfShouldStick=function(){if($scope.disabled===true||mediaQueryMatches()){if(isSticking)unStickElement();return false;}
var scrollbarPosition=scrollbarYPos();var shouldStick;if(anchor==='top'){if(confine===true){shouldStick=scrollbarPosition>stickyLine&&scrollbarPosition<=stickyBottomLine;}else{shouldStick=scrollbarPosition>stickyLine;}}else{shouldStick=scrollbarPosition<=stickyLine;}
var closestLine=getClosest(scrollbarPosition,stickyLine,stickyBottomLine);if(shouldStick&&!shouldStickWithLimit($attrs.stickLimit)&&!isSticking){stickElement(closestLine);}else if(!shouldStick&&isSticking){unStickElement(closestLine,scrollbarPosition);}else if(confine&&!shouldStick){originalOffset=elementsOffsetFromTop($elem[0]);unStickElement(closestLine,scrollbarPosition);}};function deriveScrollingViewport(stickyNode){var match=findAncestorTag(scrollableNodeTagName,stickyNode);return(match.length===1)?match[0]:$window;}
function findAncestorTag(tag,context){var m=[];var n=context.parent();var p;do{var node=n[0];if(node.nodeType!==1){break;}
if(node.tagName.toUpperCase()===tag.toUpperCase()){return n;}
p=n.parent();n=p;}while(p.length!==0);return m;}
function shouldStickWithLimit(shouldApplyWithLimit){return shouldApplyWithLimit==='true'?($window.innerHeight-($elem[0].offsetHeight+ parseInt(offset))<0):false;}
function getClosest(scrollTop,stickyLine,stickyBottomLine){var closest='top';var topDistance=Math.abs(scrollTop- stickyLine);var bottomDistance=Math.abs(scrollTop- stickyBottomLine);if(topDistance>bottomDistance){closest='bottom';}
return closest;}
function unStickElement(fromDirection){if(initialStyle){$elem.attr('style',initialStyle);}
isSticking=false;initialCSS.width=$scope.getInitialDimensions().width;$body.removeClass(bodyClass);$elem.removeClass(stickyClass);$elem.addClass(unstickyClass);if(fromDirection==='top'){$elem.removeClass(bottomClass);$elem.css('z-index',10).css('width',initialCSS.width).css('top',initialCSS.top).css('position',initialCSS.position).css('left',initialCSS.cssLeft).css('margin-top',initialCSS.marginTop).css('height',initialCSS.height);}else if(fromDirection==='bottom'&&confine===true){$elem.addClass(bottomClass);createPlaceholder();$elem.css('z-index',10).css('width',initialCSS.width).css('top','').css('bottom',0).css('position','absolute').css('left',initialCSS.cssLeft).css('margin-top',initialCSS.marginTop).css('margin-bottom',initialCSS.marginBottom).css('height',initialCSS.height);}
if(placeholder&&fromDirection===anchor){placeholder.remove();}}
function stickElement(closestLine){isSticking=true;$timeout(function(){initialCSS.offsetWidth=$elem[0].offsetWidth;},0);$body.addClass(bodyClass);$elem.removeClass(unstickyClass);$elem.removeClass(bottomClass);$elem.addClass(stickyClass);createPlaceholder();$elem.css('z-index','10').css('width',$elem[0].offsetWidth+'px').css('position','fixed').css('left',$elem.css('left').replace('px','')+'px').css(anchor,(offset+ elementsOffsetFromTop(scrollbar))+'px').css('margin-top',0);if(anchor==='bottom'){$elem.css('margin-bottom',0);}}
var onDestroy=function(){scrollbarElement.off('scroll',checkIfShouldStick);windowElement.off('resize',$onResize);$onResize=null;$body.removeClass(bodyClass);if(placeholder){placeholder.remove();}};function onResize(){unStickElement(anchor);checkIfShouldStick();}
var onDigest=function(){if($scope.disabled===true){return unStickElement();}
var offsetFromTop=elementsOffsetFromTop($elem[0]);if(offsetFromTop===0){return offsetFromTop;}
if(anchor==='top'){return(originalOffset||offsetFromTop)- elementsOffsetFromTop(scrollbar)+ scrollbarYPos();}else{return offsetFromTop- scrollbarHeight()+ $elem[0].offsetHeight+ scrollbarYPos();}};var onChange=function(newVal,oldVal){var elemIsShowed=!!newVal;var elemWasHidden=!oldVal;var valChange=(newVal!==oldVal||typeof stickyLine==='undefined');var notSticking=(!isSticking&&!isBottomedOut());if(valChange&&notSticking&&newVal>0&&elemIsShowed){stickyLine=newVal- offset;if(elemIsShowed&&elemWasHidden){$scope.updateStickyContentUpdateDimensions($elem[0].offsetWidth,$elem[0].offsetHeight);}
if(confine){$elem.parent().css({'position':'relative'});}
var parent=$elem.parent()[0];var parentHeight=parseInt(parent.offsetHeight)-(usePlaceholder?0:$elem[0].offsetHeight);var marginBottom=parseInt($elem.css('margin-bottom').replace(/px;?/,''))||0;var elementsDistanceFromTop=elementsOffsetFromTop($elem[0]);var parentsDistanceFromTop=elementsOffsetFromTop(parent)
var scrollbarDistanceFromTop=elementsOffsetFromTop(scrollbar);var elementsDistanceFromScrollbarStart=elementsDistanceFromTop- scrollbarDistanceFromTop;var elementsDistanceFromBottom=parentsDistanceFromTop+ parentHeight- elementsDistanceFromTop;stickyBottomLine=elementsDistanceFromScrollbarStart
+ elementsDistanceFromBottom
- $elem[0].offsetHeight
- marginBottom
- offset
+ +scrollbarYPos();checkIfShouldStick();}};function createPlaceholder(){if(usePlaceholder){if(placeholder){placeholder.remove();}
placeholder=angular.element('<div>');var elementsHeight=$elem[0].offsetHeight;var computedStyle=$elem[0].currentStyle||window.getComputedStyle($elem[0]);elementsHeight+=parseInt(computedStyle.marginTop,10);elementsHeight+=parseInt(computedStyle.marginBottom,10);elementsHeight+=parseInt(computedStyle.borderTopWidth,10);elementsHeight+=parseInt(computedStyle.borderBottomWidth,10);placeholder.css('height',$elem[0].offsetHeight+'px');$elem.after(placeholder);}}
function isBottomedOut(){if(confine&&scrollbarYPos()>stickyBottomLine){return true;}
return false;}
function elementsOffsetFromTop(element){var offset=0;if(element.getBoundingClientRect){offset=element.getBoundingClientRect().top;}
return offset;}
function scrollbarYPos(){var position;if(typeof scrollbar.scrollTop!=='undefined'){position=scrollbar.scrollTop;}else if(typeof scrollbar.pageYOffset!=='undefined'){position=scrollbar.pageYOffset;}else{position=document.documentElement.scrollTop;}
return position;}
function scrollbarHeight(){var height;if(scrollbarElement[0]instanceof HTMLElement){height=$window.getComputedStyle(scrollbarElement[0],null).getPropertyValue('height').replace(/px;?/,'');}else{height=$window.innerHeight;}
return parseInt(height)||0;}
function mediaQueryMatches(){var mediaQuery=$attrs.mediaQuery||false;var matchMedia=$window.matchMedia;return mediaQuery&&!(matchMedia('('+ mediaQuery+')').matches||matchMedia(mediaQuery).matches);}
function getCSS($el,prop){var el=$el[0],computed=window.getComputedStyle(el),prevDisplay=computed.display,val;el.style.display="none";val=computed[prop];el.style.display=prevDisplay;return val;}
$scope.getElement=function(){return $elem;};$scope.getScrollbar=function(){return scrollbar;};$scope.getInitialCSS=function(){return initialCSS;};$scope.getAnchor=function(){return anchor;};$scope.isSticking=function(){return isSticking;};$scope.getOriginalInitialCSS=function(){return originalInitialCSS;};$scope.processUnStickElement=function(anchor){unStickElement(anchor)};$scope.processCheckIfShouldStick=function(){checkIfShouldStick();};$scope.getInitialDimensions=function(){return{zIndex:$elem.css('z-index'),top:$elem.css('top'),position:initialPosition,marginTop:$elem.css('margin-top'),marginBottom:$elem.css('margin-bottom'),cssLeft:getCSS($elem,'left'),width:$elem[0].offsetWidth,height:$elem.css('height')};};$scope.updateStickyContentUpdateDimensions=function(width,height){if(width&&height){initSticky();initialCSS.width=width+'px';initialCSS.height=height+'px';}};$timeout(function(){originalInitialCSS=$scope.getInitialDimensions();initSticky();},0);},controller:['$scope','$window',function($scope,$window){this.resetLayout=function(newWidth,newHeight){var scrollbar=$scope.getScrollbar(),initialCSS=$scope.getInitialCSS(),anchor=$scope.getAnchor();function _resetScrollPosition(){if(anchor==='top'){if(scrollbar===$window){$window.scrollTo(0,0);}else{if(scrollbar.scrollTop>0){scrollbar.scrollTop=0;}}}}
if($scope.isSticking()){$scope.processUnStickElement(anchor);$scope.processCheckIfShouldStick();}
$scope.getElement().css({'width':'','height':'','position':'','top':'',zIndex:''});initialCSS.position=$scope.getOriginalInitialCSS().position;delete initialCSS.offsetWidth;if(newWidth===undefined&&newHeight===undefined){var e_bcr=$scope.getElement()[0].getBoundingClientRect();newWidth=e_bcr.width;newHeight=e_bcr.height;}
$scope.updateStickyContentUpdateDimensions(newWidth,newHeight);_resetScrollPosition();};this.getScrollbar=function(){return $scope.getScrollbar();};}]};}]);window.matchMedia=window.matchMedia||(function(){var warning='angular-sticky: This browser does not support '+'matchMedia, therefore the minWidth option will not work on '+'this browser. Polyfill matchMedia to fix this issue.';if(window.console&&console.warn){console.warn(warning);}
return function(){return{matches:true};};}());}());